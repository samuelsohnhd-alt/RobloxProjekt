<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX21cabc0ff17d439598222b8026bee37b">
		<Properties>
			<float name="AirDensity">0.00120000006</float>
			<bool name="AllowThirdPartySales">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AuthorityMode">1</token>
			<token name="AvatarUnificationMode">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="ClientAnimatorThrottling">0</token>
			<BinaryString name="CollisionGroupData">AQEABP////8HRGVmYXVsdA==</BinaryString>
			<Ref name="CurrentCamera">RBXd034d0a005864c7793eae3db7191dfbd</Ref>
			<bool name="DefinesCapabilities">false</bool>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<bool name="FallHeightEnabled">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<token name="FluidForces">0</token>
			<Vector3 name="GlobalWind">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="Gravity">196.199997</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="IKControlConstraintSupport">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="LuauTypeCheckMode">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<token name="ModelStreamingBehavior">0</token>
			<token name="ModelStreamingMode">0</token>
			<token name="MoverConstraintRootBehavior">0</token>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PathfindingUseImprovedSearch">0</token>
			<token name="PhysicsImprovedSleep">0</token>
			<token name="PhysicsSteppingMethod">0</token>
			<token name="PlayerCharacterDestroyBehavior">0</token>
			<token name="PrimalPhysicsSolver">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="RejectCharacterDeletions">0</token>
			<token name="RenderingCacheOptimizations">0</token>
			<token name="ReplicateInstanceDestroySetting">0</token>
			<token name="Retargeting">0</token>
			<token name="SandboxedInstanceMode">0</token>
			<float name="ScaleFactor">1</float>
			<token name="SignalBehavior2">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">0</token>
			<bool name="StreamingEnabled">false</bool>
			<token name="StreamingIntegrityMode">0</token>
			<int name="StreamingMinRadius">64</int>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<token name="TouchEventsUseCollisionGroups">0</token>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000002</UniqueId>
			<token name="UseImprovedModelLod">0</token>
			<token name="UseNewLuauTypeSolver">0</token>
			<OptionalCoordinateFrame name="WorldPivotData">
				<CFrame>
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CFrame>
			</OptionalCoordinateFrame>
		</Properties>
		<Item class="Camera" referent="RBXd034d0a005864c7793eae3db7191dfbd">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>-14.1046362</X>
					<Y>4.2126646</Y>
					<Z>-19.4430771</Z>
					<R00>-0.775955319</R00>
					<R01>0.0659109354</R01>
					<R02>-0.627334893</R02>
					<R10>-3.72529074e-09</R10>
					<R11>0.994525909</R11>
					<R12>0.104489848</R12>
					<R20>0.630787909</R20>
					<R21>0.0810794532</R21>
					<R22>-0.771707654</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>-12.849966</X>
					<Y>4.003685</Y>
					<Z>-17.899662</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000036b</UniqueId>
				<bool name="VRTiltAndRollEnabled">false</bool>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBXb0eeb55d06af41bfa91092d6ff325680">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">false</bool>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="GrassLength">0.699999988</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<bool name="SmoothVoxelsUpgraded">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000039b</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0500000007</R>
					<G>0.330000013</G>
					<B>0.360000014</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
	</Item>
	<Item class="TimerService" referent="RBX9feea494592c4fad883c883ce9256a73">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TimerService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000323</UniqueId>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX625b9773091c4f12a26ce61f7be0bcf1">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AudioApiByDefault">0</token>
			<token name="AudioPlayerVolumeFix">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="CharacterSoundsUseNewApi">0</token>
			<token name="DefaultListenerLocation">0</token>
			<bool name="DefinesCapabilities">false</bool>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsNewExpForAudioApiByDefault">false</bool>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">false</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000324</UniqueId>
			<token name="VolumetricAudio">1</token>
		</Properties>
	</Item>
	<Item class="VideoCaptureService" referent="RBX24ed8d62e715435ba37b4e6c5d1b81a7">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VideoCaptureService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000330</UniqueId>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX60230e8588034df4980c0dce4a35c47b">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000331</UniqueId>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBXb5cb976b2ddb43ddb3aeb18114ef0055">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000332</UniqueId>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX90fab996cdd749739fab0f273c7e97c0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">false</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsAutoMigrated">false</bool>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000338</UniqueId>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX8590f19b146b4e6b9fdc876087030704">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BanningEnabled">true</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="CharacterAutoLoads">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPlayersInternal">12</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
			<float name="RespawnTime">5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000033a</UniqueId>
			<bool name="UseStrafingAnimations">false</bool>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBX0b930f9936aa4b1fa7d2d37f98e90f1a">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000033d</UniqueId>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX49d1e6c32ebc4fb29d910629de291ab0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000033f</UniqueId>
		</Properties>
	</Item>
	<Item class="MaterialService" referent="RBX54c55ad264144233a7a88adc9c7198f9">
		<Properties>
			<string name="AsphaltName">Asphalt</string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="BasaltName">Basalt</string>
			<string name="BrickName">Brick</string>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<string name="CardboardName">Cardboard</string>
			<string name="CarpetName">Carpet</string>
			<string name="CeramicTilesName">CeramicTiles</string>
			<string name="ClayRoofTilesName">ClayRoofTiles</string>
			<string name="CobblestoneName">Cobblestone</string>
			<string name="ConcreteName">Concrete</string>
			<string name="CorrodedMetalName">CorrodedMetal</string>
			<string name="CrackedLavaName">CrackedLava</string>
			<bool name="DefinesCapabilities">false</bool>
			<string name="DiamondPlateName">DiamondPlate</string>
			<string name="FabricName">Fabric</string>
			<string name="FoilName">Foil</string>
			<string name="GlacierName">Glacier</string>
			<string name="GraniteName">Granite</string>
			<string name="GrassName">Grass</string>
			<string name="GroundName">Ground</string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="IceName">Ice</string>
			<string name="LeafyGrassName">LeafyGrass</string>
			<string name="LeatherName">Leather</string>
			<string name="LimestoneName">Limestone</string>
			<string name="MarbleName">Marble</string>
			<string name="MetalName">Metal</string>
			<string name="MudName">Mud</string>
			<string name="Name">MaterialService</string>
			<string name="PavementName">Pavement</string>
			<string name="PebbleName">Pebble</string>
			<string name="PlasterName">Plaster</string>
			<string name="PlasticName">Plastic</string>
			<string name="RockName">Rock</string>
			<string name="RoofShinglesName">RoofShingles</string>
			<string name="RubberName">Rubber</string>
			<string name="SaltName">Salt</string>
			<string name="SandName">Sand</string>
			<string name="SandstoneName">Sandstone</string>
			<string name="SlateName">Slate</string>
			<string name="SmoothPlasticName">SmoothPlastic</string>
			<string name="SnowName">Snow</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000340</UniqueId>
			<bool name="Use2022MaterialsXml">false</bool>
			<string name="WoodName">Wood</string>
			<string name="WoodPlanksName">WoodPlanks</string>
		</Properties>
	</Item>
	<Item class="TextChatService" referent="RBXba795097b1f4456baa2f0ca2dcad39ec">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="ChatTranslationFTUXShown">true</bool>
			<bool name="ChatTranslationToggleEnabled">false</bool>
			<token name="ChatVersion">0</token>
			<bool name="CreateDefaultCommands">true</bool>
			<bool name="CreateDefaultTextChannels">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="HasSeenDeprecationDialog">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsLegacyChatDisabled">false</bool>
			<string name="Name">TextChatService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000341</UniqueId>
		</Properties>
		<Item class="ChatWindowConfiguration" referent="RBX477abd5aa5e44cb4b7cdc31bbfa38741">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2999999999999999889</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/Montserrat-Medium.ttf</url></CachedFaceId>
				</Font>
				<float name="HeightScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="HorizontalAlignment">1</token>
				<string name="Name">ChatWindowConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">14</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000039d</UniqueId>
				<token name="VerticalAlignment">1</token>
				<float name="WidthScale">1</float>
			</Properties>
		</Item>
		<Item class="ChatInputBarConfiguration" referent="RBX2ccc6dd675dd4178be621fa5cc8d2f85">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutocompleteEnabled">true</bool>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2000000000000000111</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/Montserrat-Medium.ttf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="KeyboardKeyCode">47</token>
				<string name="Name">ChatInputBarConfiguration</string>
				<Color3 name="PlaceholderColor3">
					<R>0.698039234</R>
					<G>0.698039234</G>
					<B>0.698039234</B>
				</Color3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Ref name="TargetTextChannel">null</Ref>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">14</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000039e</UniqueId>
			</Properties>
		</Item>
		<Item class="BubbleChatConfiguration" referent="RBXfa88d4e614924d6e997272a4656df7ff">
			<Properties>
				<string name="AdorneeName">HumanoidRootPart</string>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.980392158</R>
					<G>0.980392158</G>
					<B>0.980392158</B>
				</Color3>
				<double name="BackgroundTransparency">0.10000000000000000555</double>
				<float name="BubbleDuration">15</float>
				<float name="BubblesSpacing">6</float>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<token name="Font">18</token>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/Montserrat-Medium.ttf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Vector3 name="LocalPlayerStudsOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="MaxBubbles">3</float>
				<float name="MaxDistance">100</float>
				<float name="MinimizeDistance">40</float>
				<string name="Name">BubbleChatConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<bool name="TailVisible">true</bool>
				<Color3 name="TextColor3">
					<R>0.223529413</R>
					<G>0.23137255</G>
					<B>0.239215687</B>
				</Color3>
				<int64 name="TextSize">16</int64>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000039f</UniqueId>
				<float name="VerticalStudsOffset">0</float>
			</Properties>
		</Item>
		<Item class="ChannelTabsConfiguration" referent="RBX3878a97b787d48b69086f4907eba7d02">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">false</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>700</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Bold.otf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Color3 name="HoverBackgroundColor3">
					<R>0.490196079</R>
					<G>0.490196079</G>
					<B>0.490196079</B>
				</Color3>
				<string name="Name">ChannelTabsConfiguration</string>
				<Color3 name="SelectedTabTextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Color3 name="TextColor3">
					<R>0.686274529</R>
					<G>0.686274529</G>
					<B>0.686274529</B>
				</Color3>
				<int64 name="TextSize">18</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">1</double>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc6000003a0</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="PermissionsService" referent="RBXd01766b365ec4e05b4522d1130ac4d70">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000343</UniqueId>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBX9e7476c90f014c168428cf0dc5262b70">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="CustomPoliciesEnabled">false</bool>
			<bool name="DefinesCapabilities">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<bool name="PseudolocalizationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<int name="TextElongationFactor">0</int>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000344</UniqueId>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBXbb9d51012b8f4ec2af3b9af13d495c0c">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="EnableScriptCollabByDefaultOnLoad">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000348</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9901aa96db934bb899acf14017016eee">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">true</bool>
			<token name="AvatarJointUpgrade_SerializedRollout">0</token>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">true</bool>
			<float name="CharacterWalkSpeed">16</float>
			<bool name="ClassicDeath">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<token name="EnableDynamicHeads">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<token name="LuaCharacterController">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<bool name="RagdollDeath">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000034a</UniqueId>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX5b0c0508e31b48368062c78499ca51c1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000398</UniqueId>
			</Properties>
			<Item class="LocalScript" referent="RBX8d8b117a804b483c83be6d1f4693a16d">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">src/client</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{1640a98a-8b22-4a22-bc85-dc3dde594709}</string>
					<ProtectedString name="Source">print(&quot;Hello world, from client!&quot;)</ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000399</UniqueId>
				</Properties>
				<Item class="LocalScript" referent="RBX4d4c8548ad1a4519a93f5f549a8aa2b4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_ClientBoot</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{334ca801-2ad2-41e0-a2df-732960de0ebb}</string>
						<ProtectedString name="Source"><![CDATA[print("[RB7] ClientBoot aus src/client geladen")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000039a</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX54891123eb494cd5ac44ac1e6acd9ccd">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_UiLegacyBridge.client</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{c67d2f8d-0141-486e-b8a3-715be54ead72}</string>
					<ProtectedString name="Source"><![CDATA[-- RB7_UiLegacyBridge.client.lua - map legacy events to v1 UI events if found
local RS = game:GetService("ReplicatedStorage")
local function g(root, path)
  local n = root
  for seg in string.gmatch(path, "[^/]+") do n = n and n:FindFirstChild(seg) end
  return n
end
local v1Open = g(RS, "Events/v1/UI/Menu/Open")
local v1Kill = g(RS, "Events/v1/UI/Killfeed/AnnounceKill")

local legacy = RS:FindFirstChild("Events")
if legacy then
	local OpenMenu = legacy:FindFirstChild("OpenMenu")
	if OpenMenu and v1Open then
		OpenMenu.OnClientEvent:Connect(function(menuName)
			v1Open:FireClient(game.Players.LocalPlayer, {menu = tostring(menuName)})
		end)
	end
	local AnnounceKill = legacy:FindFirstChild("AnnounceKill")
	if AnnounceKill and v1Kill then
		AnnounceKill.OnClientEvent:Connect(function(killer, victim, isHeadshot, weapon)
			v1Kill:FireClient(game.Players.LocalPlayer, {killer=tostring(killer), victim=tostring(victim), headshot=not not isHeadshot, weapon=weapon})
		end)
	end
end
print("[RB7_UiLegacyBridge] ✅ aktiv (falls Legacy-Events vorhanden).")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">4be5292ec436499a08b80165000007c2</UniqueId>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBXf2c41c66cb8a4dbeaf0b08a44afa3602">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Client</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{9f87c685-60d4-49a9-942e-e0379d5ffad1}</string>
					<ProtectedString name="Source"><![CDATA[-- client
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000839</UniqueId>
				</Properties>
				<Item class="LocalScript" referent="RBX38acb12e2e084a5a90e4f263914570de">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Init</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{876c1ca6-43aa-459b-9ac8-0e33ef65a24d}</string>
						<ProtectedString name="Source"><![CDATA[-- client
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000083a</UniqueId>
					</Properties>
				</Item>
				<Item class="StringValue" referent="RBX2f171b481fc14fd18eb0bc1eea669b51">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">KEEP</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000083b</UniqueId>
						<string name="Value"><![CDATA[KEEP CLIENT
]]></string>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX925f134ebfca49b2a2eabd496ac275ad">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_Boot</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{c43e451c-1e0c-4a3b-875b-aa63a14e982d}</string>
						<ProtectedString name="Source"><![CDATA[print("RB7: Client boot ok")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000083c</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXe969acd03a5b4952aea232f806256de9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_ClientMain</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{5ff69ba1-b055-49d7-b3b3-4dfb8e03e8c3}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- RB7_ClientMain: erstellt minimales HUD und sendet periodisch Ping an den Server
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))

-- Resolve RemoteEvent
local Ping: RemoteEvent = ReplicatedStorage
	:WaitForChild("Shared")
	:WaitForChild(Events.ROOT)
	:WaitForChild(Events.VERSION)
	:WaitForChild(Events.PING) :: any

-- HUD konstruieren (unter StarterGui/RB7_UI gemappt; zur Laufzeit im PlayerGui)
local pg = player:WaitForChild("PlayerGui")
local existing = pg:FindFirstChild("RB7_HUD")
local hud = existing or Instance.new("ScreenGui")
hud.Name = "RB7_HUD"
hud.ResetOnSpawn = false
hud.IgnoreGuiInset = true
hud.Parent = pg

local label = hud:FindFirstChild("Status") :: TextLabel?
if not label then
	label = Instance.new("TextLabel")
	label.Name = "Status"
	label.Size = UDim2.new(0, 260, 0, 28)
	label.Position = UDim2.new(0, 12, 0, 12)
	label.BackgroundTransparency = 0.3
	label.TextWrapped = true
	label.Parent = hud
end
label.Text = "RB7 HUD bereit • Verbunden"

-- Pings senden als Lebenszeichen
task.spawn(function()
	while true do
		task.wait(5)
		label.Text = "RB7 Ping → Server …"
		local ok = pcall(function()
			Ping:FireServer({ t = os.time() })
		end)
		label.Text = ok and "RB7 Ping gesendet" or "RB7 Ping FEHLER"
	end
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000083d</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXed705c96536949beb4a271da587a0873">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_InputClient</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{e18ea4b8-90c7-4cf2-bd21-f7784ab7b063}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer

local Events  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Actions = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Input"):WaitForChild("Actions"))

local function getEvent(name: string): RemoteEvent
	return (ReplicatedStorage
		:WaitForChild("Shared")
		:WaitForChild(Events.ROOT)
		:WaitForChild(Events.VERSION)
		:WaitForChild(name)) :: any
end

local RE_SetADS    : RemoteEvent = getEvent(Events.SET_ADS)
local RE_SetCrouch : RemoteEvent = getEvent(Events.SET_CROUCH)
local RE_Reload    : RemoteEvent = getEvent(Events.RELOAD)

local adsOn = false
local crouchOn = false

local function bindADS(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.Begin then
		adsOn = not adsOn
		RE_SetADS:FireServer({ on = adsOn })
	end
	return Enum.ContextActionResult.Sink
end

local function bindCrouch(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.Begin then
		crouchOn = not crouchOn
		RE_SetCrouch:FireServer({ on = crouchOn })
	end
	return Enum.ContextActionResult.Sink
end

local function bindReload(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.Begin then
		RE_Reload:FireServer({})
	end
	return Enum.ContextActionResult.Sink
end

-- Bindings
ContextActionService:BindAction(Actions.ADS_TOGGLE, bindADS, true, Enum.UserInputType.MouseButton2)
ContextActionService:BindAction(Actions.CROUCH_TOGGLE, bindCrouch, true, Enum.KeyCode.C)
ContextActionService:BindAction(Actions.RELOAD, bindReload, true, Enum.KeyCode.R)

print("[RB7_InputClient] ✅ Bindings aktiv (ADS:right mouse, Crouch:C, Reload:R)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000083e</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX9dcfee48a5714484929644ed90b1071f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_ProfileClient</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{7c55ade8-80e4-47a5-beee-615d3be9d248}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))

local function get(path)
	local cur = ReplicatedStorage:WaitForChild("Shared"):WaitForChild(Events.ROOT):WaitForChild(Events.VERSION)
	return cur:WaitForChild(path)
end

local RF_GetProfile: RemoteFunction = get(Events.GET_PROFILE) :: any
local RE_ProfileUpdated: RemoteEvent = get(Events.PROFILE_UPDATED) :: any

local pg = player:WaitForChild("PlayerGui")
local hud = pg:FindFirstChild("RB7_HUD")
if hud then
	local label = hud:FindFirstChild("Status") :: TextLabel?
	if label then
		local ok, prof = pcall(function() return RF_GetProfile:InvokeServer() end)
		if ok and typeof(prof)=="table" then
			label.Text = string.format("RB7 HUD bereit • %s (XP %d)", prof.name or "?", prof.xp or 0)
		end
		RE_ProfileUpdated.OnClientEvent:Connect(function(pf)
			if typeof(pf)=="table" then
				label.Text = string.format("RB7 HUD bereit • %s (XP %d)", pf.name or "?", pf.xp or 0)
			end
		end)
	end
end
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000083f</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX179a35b061384eea97755f753421cd89">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_RoundHud</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{73c02479-66ee-4a34-a549-84645b5269ad}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- RB7_RoundHud: Zeigt Runden-Timer an und reagiert auf Start/Ende (mit Theme)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Theme  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("UITheme"))

local function getEvent(name: string): RemoteEvent
	return (ReplicatedStorage
		:WaitForChild("Shared")
		:WaitForChild(Events.ROOT)
		:WaitForChild(Events.VERSION)
		:WaitForChild(name)) :: any
end

local E_RoundStart: RemoteEvent = getEvent(Events.ROUND_START)
local E_RoundEnded: RemoteEvent = getEvent(Events.ROUND_ENDED)
local E_TimerTick : RemoteEvent = getEvent(Events.TIMER_TICK)

local pg = player:WaitForChild("PlayerGui")
local hud = pg:FindFirstChild("RB7_HUD") or Instance.new("ScreenGui")
hud.Name = "RB7_HUD"
hud.ResetOnSpawn = false
hud.IgnoreGuiInset = true
hud.Parent = pg

local function styleLabel(lb: TextLabel, w: number, y: number)
	lb.Size = UDim2.new(0, w, 0, 28)
	lb.Position = UDim2.new(0, 12, 0, y)
	lb.BackgroundColor3 = Theme.Color.PanelBg
	lb.BackgroundTransparency = 0.3
	lb.BorderSizePixel = 0
	lb.Font = Theme.Font         -- <— Enum.Font direkt setzen
	lb.TextSize = 16
	lb.TextColor3 = Theme.Color.Text
end

local statusLabel = hud:FindFirstChild("Status") :: TextLabel?
if not statusLabel then
	statusLabel = Instance.new("TextLabel")
	statusLabel.Name = "Status"
	statusLabel.TextWrapped = true
	statusLabel.Parent = hud
end
styleLabel(statusLabel, 260, 12)
statusLabel.Text = "RB7 HUD bereit"

local timerLabel = hud:FindFirstChild("Timer") :: TextLabel?
if not timerLabel then
	timerLabel = Instance.new("TextLabel")
	timerLabel.Name = "Timer"
	timerLabel.Parent = hud
end
styleLabel(timerLabel, 140, 44)
timerLabel.Text = "⏳ --:--"

local function fmt(sec: number): string
	sec = math.max(0, math.floor(sec))
	local m = math.floor(sec/60)
	local s = sec % 60
	return string.format("%02d:%02d", m, s)
end

E_RoundStart.OnClientEvent:Connect(function(payload)
	statusLabel.Text = "▶ Runde gestartet"
	if typeof(payload) == "table" and payload.duration then
		timerLabel.Text = "⏳ " .. fmt(payload.duration)
	end
end)
E_RoundEnded.OnClientEvent:Connect(function(_)
	statusLabel.Text = "⏹ Runde beendet"
end)
E_TimerTick.OnClientEvent:Connect(function(payload)
	if typeof(payload) == "table" and payload.t then
		timerLabel.Text = "⏳ " .. fmt(payload.t)
	end
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000840</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX7ac2792087fb429ca25a2359562b255d">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_StateClient</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{3c8d0433-b873-44eb-82dd-2f2cc8601580}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))

local function get(path)
	local cur = ReplicatedStorage:WaitForChild("Shared"):WaitForChild(Events.ROOT):WaitForChild(Events.VERSION)
	return cur:WaitForChild(path)
end

local RF_GetState: RemoteFunction = get(Events.GET_STATE) :: any
local RE_StateChanged: RemoteEvent = get(Events.STATE_CHANGED) :: any

local pg = player:WaitForChild("PlayerGui")
local hud = pg:FindFirstChild("RB7_HUD")
local status = hud and hud:FindFirstChild("Status") :: TextLabel?

local function render(st:any)
	if not status or type(st)~="table" then return end
	local flags = {}
	if st.ads then table.insert(flags, "ADS") end
	if st.crouch then table.insert(flags, "Crouch") end
	status.Text = ("RB7 HUD bereit • %s"):format(#flags>0 and table.concat(flags, " | ") or "neutral")
end

-- Initial holen
local ok, st = pcall(function() return RF_GetState:InvokeServer() end)
if ok then render(st) end

-- Live-Änderungen
RE_StateChanged.OnClientEvent:Connect(function(payload)
	if type(payload)=="table" and payload.userId == player.UserId then
		render(payload.state)
	end
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000841</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXf8fcdfe8f8d1414e8553a129b38fd4fb">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_WeaponInputClient</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{62cd5c59-159c-4841-9295-bb41e38a5386}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer

local Events  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local WConfig = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Weapons"):WaitForChild("Config"))

local function getEvent(name: string): any
	return (ReplicatedStorage
		:WaitForChild("Shared")
		:WaitForChild(Events.ROOT)
		:WaitForChild(Events.VERSION)
		:WaitForChild(name))
end

local RE_Equip : RemoteEvent = getEvent(Events.EQUIP_WEAPON)
local RE_Shoot : RemoteEvent = getEvent(Events.SHOOT)
local RE_AmmoUp: RemoteEvent = getEvent(Events.AMMO_UPDATE)
local RF_Loadout: RemoteFunction = getEvent(Events.GET_LOADOUT)

local equipped = "FAMAS"

-- HUD-Hook
local pg = player:WaitForChild("PlayerGui")
local hud = pg:FindFirstChild("RB7_HUD") or Instance.new("ScreenGui")
hud.Name = "RB7_HUD"; hud.ResetOnSpawn=false; hud.IgnoreGuiInset=true; hud.Parent = pg

local ammoLabel = hud:FindFirstChild("Ammo") :: TextLabel?
if not ammoLabel then
	ammoLabel = Instance.new("TextLabel")
	ammoLabel.Name = "Ammo"
	ammoLabel.Size = UDim2.new(0, 160, 0, 28)
	ammoLabel.Position = UDim2.new(0, 12, 0, 76)
	ammoLabel.BackgroundTransparency = 0.3
	ammoLabel.Text = "🔫 --/--"
	ammoLabel.Parent = hud
end

local function renderAmmo(name:string, mag:number?, reserve:number?)
	if mag and reserve then
		ammoLabel.Text = ("🔫 %s  %d/%d"):format(name, mag, reserve)
	end
end

-- Initial: Loadout & Start-Anzeige
local ok, loadout = pcall(function() return RF_Loadout:InvokeServer() end)
if ok and typeof(loadout)=="table" then
	equipped = loadout.Equipped or equipped
end
RE_Equip:FireServer({ name = equipped })

-- Bindings: Equip 1/2/3, Shoot (LMB)
local function bindEquip1(_,state) if state==Enum.UserInputState.Begin then equipped="FAMAS"; RE_Equip:FireServer({name=equipped}) end return Enum.ContextActionResult.Sink end
local function bindEquip2(_,state) if state==Enum.UserInputState.Begin then equipped="MP5";   RE_Equip:FireServer({name=equipped}) end return Enum.ContextActionResult.Sink end
local function bindEquip3(_,state) if state==Enum.UserInputState.Begin then equipped="PISTOL";RE_Equip:FireServer({name=equipped}) end return Enum.ContextActionResult.Sink end
local function bindShoot(_,state)
	if state==Enum.UserInputState.Begin then
		RE_Shoot:FireServer({ name = equipped })
	end
	return Enum.ContextActionResult.Sink
end

ContextActionService:BindAction("RB7_EQUIP_1", bindEquip1, true, Enum.KeyCode.One)
ContextActionService:BindAction("RB7_EQUIP_2", bindEquip2, true, Enum.KeyCode.Two)
ContextActionService:BindAction("RB7_EQUIP_3", bindEquip3, true, Enum.KeyCode.Three)
ContextActionService:BindAction("RB7_SHOOT",   bindShoot,  true, Enum.UserInputType.MouseButton1)

-- Live-Ammo-Updates vom Server
RE_AmmoUp.OnClientEvent:Connect(function(payload)
	if typeof(payload)=="table" then
		renderAmmo(payload.name, payload.mag, payload.reserve)
	end
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">123f7de4522a8ece08b88a68000007f7</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX6c22a5399c0a47b1a0f2c4e52e43cfec">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">UI</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">554a495676481a8908b89a9100000806</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBXfeb495b9d3154fbc83ac8d553dc0d537">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">assets</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">554a495676481a8908b89a9100000807</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX46875f4ed4914ee69dec5c535cc6ab2d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">screens</string>
							<string name="ScriptGuid">{a6cea541-404d-4998-8644-e9170b9ca7f9}</string>
							<ProtectedString name="Source"><![CDATA[local UIState        = require(script.Parent.Parent.Components.UIState)
local LobbyScreen    = require(script:WaitForChild("LobbyScreen"))
local LoadoutScreen  = require(script:WaitForChild("LoadoutScreen"))
local Hud            = require(script:WaitForChild("Hud"))

local M = {}

function M.boot(opts)
    opts = opts or {}
    local order = opts.displayOrder or {}
    local pg = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

    local lobby = LobbyScreen.create(); lobby.DisplayOrder = order.Lobby or 50; lobby.Parent = pg
    print(("[RB7_UI] LobbyScreen created; DisplayOrder = %d"):format(lobby.DisplayOrder))

    local load  = LoadoutScreen.create(); load.DisplayOrder  = order.Loadout or 55; load.Enabled=false; load.Parent=pg
    print("[RB7_UI] LoadoutScreen created")

    local hud   = Hud.create(); hud.DisplayOrder = order.HUD or 100; hud.Parent = pg
    print("[RB7_UI] Hud created")

    -- Screens registrieren
    UIState.register("Lobby", lobby)
    UIState.register("Loadout", load)
    UIState.register("HUD", hud)

    -- Startzustand: Lobby + HUD sichtbar
    lobby.Enabled = true
    hud.Enabled   = true
    load.Enabled  = false
end

return M
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">554a495676481a8908b89a910000080a</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX76aa472ea226430cae1d0913f92a1c46">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Hud</string>
								<string name="ScriptGuid">{9cda2660-d627-40f2-9f50-49012a27e979}</string>
								<ProtectedString name="Source"><![CDATA[local UIState = require(script.Parent.Parent.Components.UIState)
local Button = require(script.Parent.Parent.Components.TextButtonPrimary)

local M = {}
function M.create()
    local gui = Instance.new("ScreenGui")
    gui.Name = "HUD"

    -- Ammo
    local ammo = Instance.new("TextLabel")
    ammo.Name = "Ammo"; ammo.Size = UDim2.fromScale(0.18, 0.08); ammo.Position = UDim2.fromScale(0.80, 0.90)
    ammo.BackgroundTransparency = 1; ammo.TextScaled = true; ammo.Text = "Ammo: 30/90"; ammo.TextColor3 = Color3.new(1,1,1)
    ammo.Parent = gui

    -- XP
    local xp = Instance.new("TextLabel")
    xp.Name = "XP"; xp.Size = UDim2.fromScale(0.18, 0.08); xp.Position = UDim2.fromScale(0.02, 0.90)
    xp.BackgroundTransparency = 1; xp.TextScaled = true; xp.Text = "XP: 0"; xp.TextColor3 = Color3.new(1,1,1)
    xp.Parent = gui

    -- Menu-Button
    local menuBtn = Button.create({ Name = "MenuButton", Text = "Menu", Size = UDim2.fromOffset(120, 36) })
    menuBtn.AnchorPoint = Vector2.new(1,0)
    menuBtn.Position = UDim2.fromScale(0.985, 0.02)
    menuBtn.Parent = gui
    menuBtn.MouseButton1Click:Connect(function()
        UIState.show("Lobby")
    end)

    return gui
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">554a495676481a8908b89a910000080b</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXcc311f9b65b8434da07609e741c1235f">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LoadoutScreen</string>
								<string name="ScriptGuid">{b4286819-59eb-469c-8c5b-79fd1ab65112}</string>
								<ProtectedString name="Source"><![CDATA[local UIState = require(script.Parent.Parent.Components.UIState)
local Button = require(script.Parent.Parent.Components.TextButtonPrimary)

local M = {}

local WEAPONS = {
    {name="FAMAS", id="FAMAS"},
    {name="MP5",   id="MP5"},
    {name="Pistol",id="Pistol"},
}

local function header(parent, text)
    local t = Instance.new("TextLabel")
    t.Size = UDim2.fromScale(1, 0.12)
    t.Position = UDim2.fromScale(0,0)
    t.BackgroundTransparency = 1
    t.Text = text
    t.TextScaled = true
    t.Font = Enum.Font.GothamBold
    t.TextColor3 = Color3.new(1,1,1)
    t.Parent = parent
end

local function scroll(parent)
    local sc = Instance.new("ScrollingFrame")
    sc.Name = "List"; sc.Size = UDim2.fromScale(1, 0.70); sc.Position = UDim2.fromScale(0, 0.14)
    sc.CanvasSize = UDim2.new(0,0,0,0); sc.ScrollBarThickness = 6; sc.BackgroundTransparency = 0.2
    local padding = Instance.new("UIPadding"); padding.PaddingTop = UDim.new(0,8); padding.PaddingLeft = UDim.new(0,8); padding.PaddingRight = UDim.new(0,8); padding.Parent = sc
    local ly = Instance.new("UIListLayout"); ly.SortOrder = Enum.SortOrder.LayoutOrder; ly.Padding = UDim.new(0,8); ly.Parent = sc
    ly:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        sc.CanvasSize = UDim2.new(0,0,0,ly.AbsoluteContentSize.Y+16)
    end)
    sc.Parent = parent
    return sc
end

function M.create()
    local gui = Instance.new("ScreenGui")
    gui.Name = "LoadoutScreen"

    local frame = Instance.new("Frame")
    frame.Name = "Root"
    frame.Size = UDim2.fromScale(0.6, 0.7)
    frame.Position = UDim2.fromScale(0.2, 0.15)
    frame.BackgroundTransparency = 0.05
    frame.Parent = gui
    local corner = Instance.new("UICorner"); corner.CornerRadius = UDim.new(0, 12); corner.Parent = frame

    header(frame, "Loadout")

    -- Back-Button
    local back = Button.create({ Text = "← Zurück", Size = UDim2.fromOffset(140, 36) })
    back.Position = UDim2.fromScale(0.02, 0.02)
    back.Parent = frame
    back.MouseButton1Click:Connect(function() UIState.show("Lobby") end)

    -- Weapon List
    local list = scroll(frame)
    local selected = { weapon = nil }

    local function addRow(w)
        local row = Instance.new("Frame")
        row.Name = "Row_"..w.id; row.Size = UDim2.new(1, -16, 0, 48); row.BackgroundTransparency = 0.3; row.Parent = list
        local c = Instance.new("UICorner"); c.CornerRadius = UDim.new(0,8); c.Parent = row

        local label = Instance.new("TextLabel")
        label.Name = "Label"; label.Size = UDim2.fromScale(0.6, 1); label.BackgroundTransparency = 1
        label.Text = w.name; label.TextScaled = true; label.TextColor3 = Color3.new(1,1,1); label.Parent = row

        local pick = Button.create({ Text = "Select", Size = UDim2.fromOffset(120, 36) })
        pick.Position = UDim2.fromScale(0.7, 0.1); pick.Parent = row

        local status = Instance.new("TextLabel")
        status.Name = "Status"; status.Size = UDim2.fromOffset(120, 36); status.Position = UDim2.fromScale(0.85, 0.1)
        status.BackgroundTransparency = 1; status.TextScaled = true; status.Text = ""; status.TextColor3 = Color3.fromRGB(160,255,160)
        status.Parent = row

        local function mark(active) status.Text = active and "Selected" or "" end

        pick.MouseButton1Click:Connect(function()
            selected.weapon = w.id
            for _,child in ipairs(list:GetChildren()) do
                if child:IsA("Frame") and child:FindFirstChild("Status") then child.Status.Text = "" end
            end
            mark(true)
        end)
    end

    for _,w in ipairs(WEAPONS) do addRow(w) end

    -- Apply
    local apply = Button.create({ Text = "Apply Loadout", Size = UDim2.fromOffset(180, 44) })
    apply.Position = UDim2.fromScale(0.35, 0.88); apply.Parent = frame
    apply.MouseButton1Click:Connect(function()
        local weapon = selected.weapon
        if weapon then
            print("[Loadout] Selected:", weapon)
            UIState.show("HUD")
        else
            warn("[Loadout] Keine Waffe gewählt")
        end
    end)

    return gui
end

return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">554a495676481a8908b89a910000080c</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXfbb2e9ed1c8246b5a8e339d86a0a5445">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LobbyScreen</string>
								<string name="ScriptGuid">{8abdf6c7-b7dd-426f-bd0c-4a311b86f4fb}</string>
								<ProtectedString name="Source"><![CDATA[local UIState = require(script.Parent.Parent.Components.UIState)
local Button = require(script.Parent.Parent.Components.TextButtonPrimary)

local M = {}

local function makeTitle(parent, text)
    local t = Instance.new("TextLabel")
    t.Size = UDim2.fromScale(1, 0.12)
    t.Position = UDim2.fromScale(0,0)
    t.BackgroundTransparency = 1
    t.Text = text
    t.TextScaled = true
    t.Font = Enum.Font.GothamBold
    t.TextColor3 = Color3.new(1,1,1)
    t.Parent = parent
end

function M.create()
    local gui = Instance.new("ScreenGui")
    gui.Name = "LobbyScreen"

    local root = Instance.new("Frame")
    root.Name = "Root"
    root.Size = UDim2.fromScale(0.45, 0.6)
    root.Position = UDim2.fromScale(0.05, 0.2)
    root.BackgroundTransparency = 0.05
    root.Parent = gui

    local corner = Instance.new("UICorner"); corner.CornerRadius = UDim.new(0, 12); corner.Parent = root
    makeTitle(root, "RB7 • Lobby")

    local list = Instance.new("Frame")
    list.Name = "Menu"
    list.Size = UDim2.fromScale(1, 0.78)
    list.Position = UDim2.fromScale(0, 0.16)
    list.BackgroundTransparency = 1
    list.Parent = root

    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 10)
    layout.VerticalAlignment = Enum.VerticalAlignment.Top
    layout.Parent = list

    local function addItem(name, click)
        local b = Button.create({ Text = name, Size = UDim2.fromOffset(260, 44) })
        b.Parent = list
        b.MouseButton1Click:Connect(click)
        return b
    end

    -- Menüeinträge mit Funktion:
    addItem("▶ Loadout", function() UIState.show("Loadout") end)
    addItem("▶ Gear (demnächst)", function() end)
    addItem("▶ Armor (demnächst)", function() end)
    addItem("↩ Zurück ins HUD", function() UIState.show("HUD") end)

    return gui
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">554a495676481a8908b89a910000080d</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX1fc783a165064d88bdfef8b18cf2a1d2">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">components</string>
								<string name="ScriptGuid">{83eecf38-7e1e-4a5b-8ed9-485db1f0608d}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
-- Legacy components module – exportiert neue Components
return require(script.Parent.Parent:WaitForChild("Components"):WaitForChild("init"))
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000087f</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX04e2f67c85a54c7295051517b98ed2f6">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">components</string>
							<string name="ScriptGuid">{a1b6bdf0-dd3e-490b-9bd4-3e2c7b1b05e0}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Minimaler Komponenten-Baukasten
local Components = {}

function Components.MakeLabel(props: {Name: string?, Text: string?, Size: UDim2?, Position: UDim2?})
	local l = Instance.new("TextLabel")
	l.Name = props.Name or "Label"
	l.Text = props.Text or ""
	l.Size = props.Size or UDim2.fromScale(0.3, 0.08)
	l.Position = props.Position or UDim2.new(0, 12, 0, 12)
	l.BackgroundTransparency = 0.25
	l.BackgroundColor3 = Color3.new(0,0,0)
	l.TextColor3 = Color3.new(1,1,1)
	l.TextScaled = true
	l.Font = Enum.Font.GothamMedium
	l.BorderSizePixel = 0
	return l
end

function Components.MakePanel(props: {Name: string?, Size: UDim2?, Position: UDim2?})
	local f = Instance.new("Frame")
	f.Name = props.Name or "Panel"
	f.Size = props.Size or UDim2.fromScale(0.35, 0.2)
	f.Position = props.Position or UDim2.new(0, 12, 0.1, 12)
	f.BackgroundTransparency = 0.2
	f.BackgroundColor3 = Color3.fromRGB(15,15,20)
	f.BorderSizePixel = 0
	local ui = Instance.new("UICorner"); ui.CornerRadius = UDim.new(0,10); ui.Parent = f
	local pad = Instance.new("UIPadding"); pad.PaddingLeft = UDim.new(0,10); pad.PaddingTop = UDim.new(0,8); pad.Parent = f
	return f
end

return Components
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000867</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX621255f6803a4e93a97fa9cb85fe705b">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Button</string>
								<string name="ScriptGuid">{1b1351f6-b68f-484a-8df2-2753d3bf46ae}</string>
								<ProtectedString name="Source"><![CDATA[local Theme = require(script.Parent.Parent.Styles.Theme)
return function(props)
  props = props or {}
  local btn = Instance.new("TextButton")
  btn.Name="RB7_Button"; btn.AutoButtonColor=false
  btn.Text = props.text or "Button"; btn.Size = props.size or UDim2.fromOffset(160,36)
  btn.BackgroundColor3 = Theme.Colors.Accent; btn.TextColor3 = Theme.Colors.Bg
  btn.Font = Theme.Fonts.Body; btn.TextSize = Theme.Sizes.Base
  Instance.new("UICorner", btn).CornerRadius = UDim.new(0, Theme.Corner)
  local pad=Instance.new("UIPadding", btn); pad.PaddingLeft=UDim.new(0,Theme.Padding); pad.PaddingRight=UDim.new(0,Theme.Padding)
  btn.MouseButton1Click:Connect(function() if typeof(props.onClick)=="function" then task.spawn(props.onClick) end end)
  btn.MouseEnter:Connect(function() btn.BackgroundColor3 = Theme.Colors.Accent2 end)
  btn.MouseLeave:Connect(function() btn.BackgroundColor3 = Theme.Colors.Accent end)
  return btn
end
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000868</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXdfeca90674864411b4be1b51272ef80d">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">EventBridge</string>
								<string name="ScriptGuid">{2b4654b7-32d9-4d33-9323-57c9cc3f8560}</string>
								<ProtectedString name="Source"><![CDATA[local RS = game:GetService("ReplicatedStorage")
local M = {}
function M.getEventsRoot()
    -- Erwartet: ReplicatedStorage.Shared.Events.v1
    local root = RS:FindFirstChild("Shared")
    if not root then
        warn("[Loadout/EventBridge] ReplicatedStorage.Shared fehlt")
        return nil
    end
    local ev = root:FindFirstChild("Events")
    if not ev then
        warn("[Loadout/EventBridge] Shared.Events fehlt")
        return nil
    end
    local v1 = ev:FindFirstChild("v1") or ev
    return v1
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000869</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX2effcddeced8495c9c545b122e19b0cf">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">HUDTimer</string>
								<string name="ScriptGuid">{17e37359-4a84-4388-af90-2b39c6fb7c51}</string>
								<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Events = ReplicatedStorage
    :WaitForChild("Shared")
    :WaitForChild("Events")
    :WaitForChild("v1")

local M = {}

function M.mount(player)
    local RoundTimerTick = Events:FindFirstChild("RoundTimerTick")
    if not RoundTimerTick or not RoundTimerTick:IsA("RemoteEvent") then
        warn("[RB7_HUD Timer] RoundTimerTick nicht gefunden")
        return
    end
    RoundTimerTick.OnClientEvent:Connect(function(t)
        -- hier könnte UI aktualisiert werden
        -- print(("[RB7_HUD Timer] t=%s"):format(t))
    end)
    print("[RB7_HUD Timer] ✅ aktiv (RoundTimerTick)")
end

return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000086a</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX777db27851fc4a38aa129242ce878639">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Menu</string>
								<string name="ScriptGuid">{794a7ed5-c6b0-40dc-9013-c0cb80d6c557}</string>
								<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Events = ReplicatedStorage
    :WaitForChild("Shared")
    :WaitForChild("Events")
    :WaitForChild("v1")

local M = {}

function M.init()
    local OpenMenu = Events:FindFirstChild("OpenMenu")
    if OpenMenu and OpenMenu:IsA("RemoteEvent") then
        print("[RB7_UI] OpenMenu RemoteEvent ✅ vorhanden")
    else
        warn("[RB7_UI] OpenMenu RemoteEvent fehlt")
    end
end

return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000086b</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXfbb909cedbba4589b1d1cee5e64e6127">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">StatusBar</string>
								<string name="ScriptGuid">{7dd96863-a221-40e2-8dae-f37eb7724f48}</string>
								<ProtectedString name="Source"><![CDATA[local Theme = require(script.Parent.Parent.Styles.Theme)
local Store = require(script.Parent.Parent.State.Store)
local RunService = game:GetService("RunService"); local Stats = game:GetService("Stats")
return function()
  local frame=Instance.new("Frame"); frame.Name="RB7_StatusBar"; frame.Size=UDim2.new(1,0,0,28); frame.BackgroundTransparency=1; frame.ZIndex=Theme.Z.HUD
  local c=Instance.new("Frame"); c.Name="Container"; c.Parent=frame; c.Size=UDim2.fromScale(1,1); c.BackgroundColor3=Theme.Colors.Panel; c.BackgroundTransparency=0.2
  Instance.new("UICorner", c).CornerRadius=UDim.new(0,Theme.Corner)
  local pad=Instance.new("UIPadding", c); pad.PaddingLeft=UDim.new(0,Theme.Padding); pad.PaddingRight=UDim.new(0,Theme.Padding)
  local list=Instance.new("UIListLayout", c); list.FillDirection=Enum.FillDirection.Horizontal; list.HorizontalAlignment=Enum.HorizontalAlignment.Right; list.VerticalAlignment=Enum.VerticalAlignment.Center; list.Padding=UDim.new(0,12)
  local function mk(name) local l=Instance.new("TextLabel"); l.Name=name; l.BackgroundTransparency=1; l.Size=UDim2.fromOffset(100,28); l.Font=Theme.Fonts.Mono; l.TextSize=Theme.Sizes.Small; l.TextColor3=Theme.Colors.Subtle; l.TextXAlignment=Enum.TextXAlignment.Right; l.ZIndex=Theme.Z.HUD; return l end
  local fpsL=mk("FPS"); fpsL.Parent=c; local pingL=mk("Ping"); pingL.Parent=c
  local frames, last = 0, os.clock()
  RunService.Heartbeat:Connect(function()
    frames += 1; local now=os.clock()
    if now-last>=1 then fpsL.Visible=Store.get("showFPS",true); if fpsL.Visible then fpsL.Text=string.format("FPS %3d",frames) end; frames=0; last=now end
  end)
  task.spawn(function()
    while task.wait(0.5) do
      local it = Stats and Stats.Network and Stats.Network.ServerStatsItem and Stats.Network.ServerStatsItem["Data Ping"]
      local ping = it and tonumber(it:GetValueString():gsub(" ms","")) or nil
      pingL.Visible = Store.get("showPing",true) and ping~=nil; if pingL.Visible then pingL.Text = string.format("PING %3d ms", ping) end
    end
  end)
  return frame
end
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000086c</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXc88ed274593041148094e8e6eb269427">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">TabBar</string>
								<string name="ScriptGuid">{99ac6d20-d477-4793-a2b5-df921d4423c9}</string>
								<ProtectedString name="Source"><![CDATA[local TextButtonPrimary = require(script.Parent:WaitForChild("TextButtonPrimary"))
local M = {}
function M.create(tabNames, onSelect)
    local bar = Instance.new("Frame")
    bar.Name = "TabBar"
    bar.Size = UDim2.fromScale(1, 0.1)
    bar.BackgroundTransparency = 1

    local list = Instance.new("UIListLayout")
    list.FillDirection = Enum.FillDirection.Horizontal
    list.HorizontalAlignment = Enum.HorizontalAlignment.Left
    list.Padding = UDim.new(0, 8)
    list.Parent = bar

    for _,name in ipairs(tabNames) do
        local btn = TextButtonPrimary.create({ Size = UDim2.fromOffset(140, 36), Text = name })
        btn.Name = "Tab_"..name
        btn.Parent = bar
        btn.MouseButton1Click:Connect(function()
            if onSelect then onSelect(name) end
        end)
    end
    return bar
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000086d</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX98b295ab6d5946c1b27ff7fa6583d8e9">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">TextButtonPrimary</string>
								<string name="ScriptGuid">{7d99db3a-9f1c-4317-9dc5-b97797cf1241}</string>
								<ProtectedString name="Source"><![CDATA[local M = {}
function M.create(props)
    props = props or {}
    local b = Instance.new("TextButton")
    b.Name = props.Name or "Button"
    b.AutoButtonColor = true
    b.BackgroundTransparency = 0.1
    b.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    b.Size = props.Size or UDim2.fromOffset(160, 40)
    b.Text = props.Text or "Button"
    b.TextScaled = true
    b.TextColor3 = Color3.new(1,1,1)
    b.Font = Enum.Font.GothamBold
    local stroke = Instance.new("UIStroke"); stroke.Thickness = 1; stroke.Transparency = 0.3; stroke.Parent = b
    local corner = Instance.new("UICorner"); corner.CornerRadius = UDim.new(0, 10); corner.Parent = b
    return b
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000086e</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX92895e43d1c249b0a08a25df4d5b118f">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">UIState</string>
								<string name="ScriptGuid">{182b8e2f-dc37-4e69-a835-7cc635aa62e8}</string>
								<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local pg = Players.LocalPlayer:WaitForChild("PlayerGui")

local M = {
    _screens = {}, -- name -> ScreenGui
}

function M.register(name, gui)
    M._screens[name] = gui
end

function M.show(name)
    for n, gui in pairs(M._screens) do
        if gui and gui.Parent then
            if gui:IsA("ScreenGui") then
                gui.Enabled = (n == name) or (n == "HUD" and (name == "HUD" or name == "Lobby"))
            else
                gui.Visible = (n == name)
            end
        end
    end
    print("[UIState] show ->", name)
end

return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000086f</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="LocalScript" referent="RBX1a3d5b91fbbd4ccaa7ebaa7938af3375">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Boot</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{ae7350b8-b4f0-4974-8900-afc6d97b2f83}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
local ok, App = pcall(function() return require(script.Parent:WaitForChild("App")) end)
if ok and App and App.mount then
	local ok2, res = pcall(App.mount)
	if ok2 then
		print("[RB7_UI] App initialisiert.")
	else
		warn("[RB7_UI] App-Start fehlgeschlagen:", res)
	end
else
	warn("[RB7_UI] App-Modul nicht ladbar:", App)
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000087a</UniqueId>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX1198b935537045a0850f0a3a629b1b0c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">State</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000087c</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX317c3e969f7e48af9353ace807b030a5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Store</string>
								<string name="ScriptGuid">{4e1bfe17-9460-4af4-9bff-93e5b2425e3b}</string>
								<ProtectedString name="Source"><![CDATA[local Store, Http = {}, game:GetService("HttpService")
local _s, _e = {}, Instance.new("BindableEvent")
function Store.get(k,d) return _s[k]==nil and d or _s[k] end
function Store.set(k,v) local o=_s[k]; _s[k]=v; _e:Fire(k,o,v) end
function Store.toggle(k,a,b) local c=Store.get(k,a); Store.set(k, c==a and b or a) end
function Store.changed(cb) return _e.Event:Connect(cb) end
function Store.snapshot() return Http:JSONDecode(Http:JSONEncode(_s)) end
if _s._init~=true then _s._init=true; _s.showFPS=true; _s.showPing=true end
return Store
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000087d</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBXc96afac76ad34abc87ec8881465bf19d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Styles</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000887</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXcdaefbbccb904e3f8ea2e5dafa8ab5e3">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Theme</string>
								<string name="ScriptGuid">{8a08af89-4b09-4f08-960b-ef25450376fd}</string>
								<ProtectedString name="Source"><![CDATA[local Theme = {
  Colors={Bg=Color3.fromRGB(15,17,22),Panel=Color3.fromRGB(24,27,34),Accent=Color3.fromRGB(84,160,255),Accent2=Color3.fromRGB(255,160,84),Text=Color3.fromRGB(235,238,245),Subtle=Color3.fromRGB(170,178,191)},
  Fonts={Header=Enum.Font.GothamBold,Body=Enum.Font.Gotham,Mono=Enum.Font.Code},
  Sizes={Base=14,Small=12,Large=18,Title=24},Padding=12,Corner=12,Z={HUD=1,Overlay=10,Modal=20,Debug=1000}
}
return Theme
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000888</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="LocalScript" referent="RBX74bf033753434dcdb6ed56fee4d03af3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Sanity</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{1ee8876e-2ad3-43ca-864c-9e6671950a7f}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
local folder = script.Parent:FindFirstChild("Components")
local mod = folder and folder:FindFirstChildWhichIsA("ModuleScript")
if folder and mod then
	print("[RB7_UI] ✅ Components vorhanden (", mod.Name, ")")
else
	warn("[RB7_UI] ❌ Components fehlen oder kein ModuleScript gefunden")
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000088a</UniqueId>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBXd54f6e01e07c4f9fa004285948c8ce1d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">App</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{81d0ecd6-aac4-4ae7-a5d2-2ed84e4cc09b}</string>
							<ProtectedString name="Source"><![CDATA[-- RB7 UI App (safe)
local uiFolder = script.Parent
local components = uiFolder:FindFirstChild("Components")
if not components then
    warn("[UI/App] Components Ordner fehlte – wird erstellt")
    components = Instance.new("Folder")
    components.Name = "Components"
    components.Parent = uiFolder
end

local function req(name)
    local m = components:FindFirstChild(name)
    if not m then return end
    local ok, mod = pcall(function() return require(m) end)
    return ok and mod or nil
end

local HUDTimer = req("HUDTimer")
if HUDTimer and HUDTimer.mount then HUDTimer.mount(game:GetService("Players").LocalPlayer) end

local Menu = req("Menu")
if Menu and Menu.init then Menu.init() end

print("[RB7_UI] App initialisiert.")
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000088c</UniqueId>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBXcd6853de7877424890cf76ae37831b38">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TestMount</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{d4028266-9d7d-4603-83fc-8daab251a504}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Läuft clientseitig automatisch über StarterPlayerScripts (Rojo Mapping).
-- Prüft Events und mountet die UI-App, loggt verständlich.

local Players = game:GetService("Players")
local RS = game:GetService("ReplicatedStorage")

local function log(ok: boolean, msg: string, ...)
	if ok then
		print("[TEST] ✅ "..msg:format(...))
	else
		warn("[TEST] ❌ "..msg:format(...))
	end
end

-- 1) Events prüfen
local ok1, v1 = pcall(function()
	local ev = RS:WaitForChild("Events", 10)
	return ev and ev:WaitForChild("v1", 10) or nil
end)
if not ok1 or not v1 then
	warn("[TEST] ❌ Events/v1 nicht gefunden (ReplicatedStorage/Events/v1).")
	return
end

local haveRoundTime = v1:FindFirstChild("RoundTimeUpdated") ~= nil
local haveRoundState = v1:FindFirstChild("RoundStateChanged") ~= nil
log(haveRoundTime and haveRoundState, "Events vorhanden: RoundTimeUpdated=%s, RoundStateChanged=%s", tostring(haveRoundTime), tostring(haveRoundState))
if not (haveRoundTime and haveRoundState) then return end

-- 2) App mounten
local ok2, res = pcall(function()
	local app = require(script.Parent:WaitForChild("App"))
	return app.mount()
end)
if ok2 then
	log(true, "App mounted (ScreenGui aktiv).")
else
	log(false, "App mount fehlgeschlagen: %s", tostring(res))
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf20000088e</UniqueId>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBX898d5adb27884fe1a087c078e6720c48">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">screens</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{396d7bdc-aab7-4474-af34-9815f08403f9}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
local ok, App = pcall(function() return require(script.Parent:WaitForChild("App")) end)
if ok and App and App.mount then
	local ok2, res = pcall(App.mount)
	if ok2 then
		print("[RB7_UI Legacy] ✅ App mounted via screens")
	else
		warn("[RB7_UI Legacy] ⚠️ mount fail:", res)
	end
else
	warn("[RB7_UI Legacy] ⚠️ App nicht ladbar:", App)
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000890</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX1eb82bf38a794bd4b8a43af5dd979886">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">App</string>
							<string name="ScriptGuid">{b8d5858e-1cf7-42b2-8401-39fef0df0bcc}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Robuste App: lädt Components/init.lua sicher und mountet HUD
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local pg = Players.LocalPlayer:WaitForChild("PlayerGui")

local function getComponentsModule(): ModuleScript?
	local uiFolder = script.Parent
	local compFolder = uiFolder:FindFirstChild("Components") or uiFolder:WaitForChild("Components", 5)
	if not compFolder then
		warn("[UI/App] ❌ Components-Ordner nicht gefunden.")
		return nil
	end
	local mod = compFolder:FindFirstChild("init") or compFolder:FindFirstChildWhichIsA("ModuleScript")
	if not mod then
		warn("[UI/App] ❌ Components ModuleScript (init.lua) fehlt.")
		return nil
	end
	return mod :: ModuleScript
end

local ComponentsModule = getComponentsModule()
local Components = ComponentsModule and require(ComponentsModule) or nil

local v1 = ReplicatedStorage:WaitForChild("Events"):WaitForChild("v1")
local RoundTimeUpdated = v1:WaitForChild("RoundTimeUpdated")
local RoundStateChanged = v1:WaitForChild("RoundStateChanged")

local App = {}
local gui: ScreenGui? = nil
local timeLabel: TextLabel? = nil
local stateLabel: TextLabel? = nil

function App.mount()
	if gui then return gui end
	if not Components then
		warn("[UI/App] ⚠️ Components nicht geladen – HUD wird nicht gemountet.")
		return nil
	end

	gui = Instance.new("ScreenGui")
	gui.IgnoreGuiInset = true
	gui.Name = "RB7_HUD"
	gui.ResetOnSpawn = false
	gui.Parent = pg

	local panel = Components.MakePanel({Name="HUDPanel", Size=UDim2.fromScale(0.26,0.14), Position=UDim2.new(0,12,0,12)})
	panel.Parent = gui

	stateLabel = Components.MakeLabel({Name="State", Text="State: —", Size=UDim2.fromScale(1,0.45), Position=UDim2.new(0,0,0,0)})
	stateLabel.Parent = panel

	timeLabel = Components.MakeLabel({Name="Timer", Text="Time: —", Size=UDim2.fromScale(1,0.45), Position=UDim2.new(0,0,0.5,0)})
	timeLabel.Parent = panel

	RoundTimeUpdated.OnClientEvent:Connect(function(remaining: number)
		if timeLabel then timeLabel.Text = ("Time: %ds"):format(tonumber(remaining) or -1) end
	end)
	RoundStateChanged.OnClientEvent:Connect(function(state: string)
		if stateLabel then stateLabel.Text = ("State: %s"):format(tostring(state)) end
	end)

	print("[RB7_UI/App] ✅ mounted")
	return gui
end

return App
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000894</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX6a57d2445e6e489297270e8f534ba645">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Debug</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">354ed2d07964e88708b89cf300000801</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX6d961fdbd2f441aaba6b5dfb4b8be983">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">hud</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1f6b4be9d44787d308b8a27d00000804</UniqueId>
					</Properties>
					<Item class="LocalScript" referent="RBXe2ddf7d60afc48d994d028bdfcc92df0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Timer</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{5fd18ac1-7162-4e2d-b8be-f32e255cbcc5}</string>
							<ProtectedString name="Source"><![CDATA[-- RB7 HUD Timer (client)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local plr = Players.LocalPlayer
local PlayerGui = plr:WaitForChild("PlayerGui")

local Shared = ReplicatedStorage:WaitForChild("Shared")
local Events = Shared:WaitForChild("Events")
local V1     = Events:WaitForChild("v1")
local RoundTimerTick = V1:WaitForChild("RoundTimerTick")

local hud = PlayerGui:FindFirstChild("RB7_HUD") or Instance.new("ScreenGui")
hud.Name = "RB7_HUD"
hud.ResetOnSpawn = false
hud.IgnoreGuiInset = true
hud.DisplayOrder = 100
hud.Parent = PlayerGui

local label = hud:FindFirstChild("TimerLabel")
if not label then
    label = Instance.new("TextLabel")
    label.Name = "TimerLabel"
    label.Size = UDim2.fromOffset(180, 44)
    label.AnchorPoint = Vector2.new(0.5, 0)
    label.Position = UDim2.new(0.5, 0, 0, 18)
    label.BackgroundTransparency = 0.25
    label.BackgroundColor3 = Color3.fromRGB(10,10,10)
    label.BorderSizePixel = 0
    label.Font = Enum.Font.GothamBold
    label.TextSize = 28
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.TextStrokeTransparency = 0.5
    label.Text = "05:00"
    label.Parent = hud
end

local function fmt(seconds:number): string
    seconds = math.max(-1, math.floor(seconds))
    if seconds < 0 then return "00:00" end
    local m = math.floor(seconds / 60)
    local s = seconds % 60
    return string.format("%02d:%02d", m, s)
end

RoundTimerTick.OnClientEvent:Connect(function(remaining)
    label.Text = fmt(remaining)
end)

print("[RB7_HUD Timer] ✅ aktiv (RoundTimerTick)")
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1f6b4be9d44787d308b8a27d00000805</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX9136e1cc77894cd1be4aff6f3113217d">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">OpenMenu_Sanity</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{caf92a18-5435-495b-80fe-175fefc2dee9}</string>
						<ProtectedString name="Source"><![CDATA[-- RB7 OpenMenu Sanity (client)
local RS = game:GetService("ReplicatedStorage")
local ok = pcall(function()
    local Shared = RS:WaitForChild("Shared", 5)
    local Events = Shared and Shared:WaitForChild("Events", 5)
    local V1     = Events and Events:WaitForChild("v1", 5)
    local OpenMenu = V1 and V1:WaitForChild("OpenMenu", 5)
    if OpenMenu and OpenMenu:IsA("RemoteEvent") then
        print("[RB7_UI] OpenMenu RemoteEvent ✅ vorhanden")
        OpenMenu.OnClientEvent:Connect(function(...)
            print("[RB7_UI] OpenMenu signal empfangen")
        end)
    else
        warn("[RB7_UI] OpenMenu RemoteEvent fehlt ❌")
    end
end)
if not ok then
    warn("[RB7_UI] OpenMenu Sanity: Zugriff auf Remotes fehlgeschlagen.")
end
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1f6b4be9d44787d308b8a27d00000807</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXe9ea91663bd34a389c2a5421faed0ced">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">000_Preboot_CleanUI</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{d6d862c8-e090-4f41-a0ec-35215b934892}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- Sicherer Preboot: entfernt NUR echte Legacy-Knoten.
-- WICHTIG: "Client/UI" und alles darunter wird NIE gelöscht.
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local plr = Players.LocalPlayer
local ps  = plr:WaitForChild("PlayerScripts")
local client = ps:FindFirstChild("Client")

local function isOurUI(inst: Instance): boolean
	-- Bewahre den offiziellen UI-Pfad
	return client ~= nil and inst:IsDescendantOf(client:FindFirstChild("UI") or client)
end

local LEGACY_NAMES = {
	["RB7_UI"] = true,    -- alte UI-Struktur
	["Client"] = false,   -- nur wenn es ein verschachteltes Duplikat wäre (selten)
}

local function shouldNukeTop(child: Instance): boolean
	if child.Name == "RB7_UI" then return true end
	-- NIEMALS den UI-Ordner selbst löschen
	if child.Name == "UI" then return false end
	-- Keine aggressiven Matches mehr
	return false
end

local function sweep()
	if not client then return end
	for _,child in ipairs(client:GetChildren()) do
		if shouldNukeTop(child) and not isOurUI(child) then
			child:Destroy()
			print(("[RB7_Preboot] entfernt: %s"):format(child.Name))
		end
	end
end

-- Einmal sauber laufen reicht
sweep()
print("[RB7_Preboot] ✅ Safe-Clean (UI bleibt unangetastet).")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000883</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXa871501c8796475fa20de4a899405e15">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RoundReadyDebug</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{f140bad5-6c69-4aae-86ed-ab999676bff7}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Events = ReplicatedStorage:WaitForChild("Events")
local v1 = Events:WaitForChild("v1")
local RequestReadyToggle = v1:WaitForChild("RequestReadyToggle")
local PlayerReadyChanged = v1:WaitForChild("PlayerReadyChanged")
local RoundStateChanged = v1:WaitForChild("RoundStateChanged")
local GetRoundState = v1:WaitForChild("GetRoundState")

-- Taste R toggelt Ready (nur zum Testen)
game:GetService("UserInputService").InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.R then
		RequestReadyToggle:FireServer()
	end
end)

PlayerReadyChanged.OnClientEvent:Connect(function(userId: number, isReady: boolean)
	print(("[ReadyDebug] uid=%d ready=%s"):format(userId, tostring(isReady)))
end)

RoundStateChanged.OnClientEvent:Connect(function(state: string)
	print(("[RoundState] %s"):format(state))
end)

local ok, state = pcall(function()
	return GetRoundState:InvokeServer()
end)
if ok then print("[RoundState] initial:", state) end
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000885</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX6a2b3c6ff6b94ec4841c6f8a67eb99fb">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">UnlocksDebug</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{9501f7b1-759e-48c1-95b7-789550243f2c}</string>
						<ProtectedString name="Source"><![CDATA[-- RB7 UnlocksDebug – robust gegen Pfadabweichungen
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local function waitPath(root, names, timeout)
  local node = root; local t0 = os.clock(); timeout = timeout or 10
  for _,name in ipairs(names) do
    local child = node:FindFirstChild(name)
    while not child do
      if os.clock() - t0 > timeout then
        warn(("[UnlocksDebug] timeout on path: %s"):format(table.concat(names, "/")))
        return nil
      end
      child = node:FindFirstChild(name) or node:WaitForChild(name, 0.25)
    end
    node = child
  end
  return node
end

-- Offizieller Pfad laut Server: ReplicatedStorage/Shared/Events/v1
local events = waitPath(ReplicatedStorage, {"Shared","Events","v1"}, 8)
if not events then
  warn("[UnlocksDebug] Events/v1 nicht gefunden – Debug deaktiviert.")
  return
end

local RoundTimerTick = events:FindFirstChild("RoundTimerTick")
if not RoundTimerTick or not RoundTimerTick:IsA("RemoteEvent") then
  warn("[UnlocksDebug] RoundTimerTick RemoteEvent fehlt."); return
end

print("[UnlocksDebug] ✅ verbunden mit Events/v1.RoundTimerTick")
-- Beispiel: Lauschen ohne Spam
RoundTimerTick.OnClientEvent:Connect(function(data)
  -- data kann nil/irgendwas sein – nur minimal loggen
  -- print("[UnlocksDebug] Tick", data)
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000892</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX3c283c3e26f94e62bc36c02e09584bab">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Client</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{4c20a934-9922-4c30-a290-2b233eb5463e}</string>
					<ProtectedString name="Source"><![CDATA[-- client
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000914</UniqueId>
				</Properties>
				<Item class="LocalScript" referent="RBX01daacd6ad7b4bad8531af237746c6c8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">000_Preboot_CleanUI</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{4bd84268-9f27-45f2-9b9b-695b43f6ec09}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- Läuft so früh wie möglich: Entfernt alte/fehlplatzierte UI-Skripte,
-- die unter PlayerScripts/Client/UI liegen und unsere neue Struktur stören.
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local plr = Players.LocalPlayer
local ps  = plr:WaitForChild("PlayerScripts")
local client = ps:FindFirstChild("Client")

local function isSrcUI(inst: Instance): boolean
	-- Unsere gewünschte Struktur: Client/src/client/UI/...
	-- Also darf nur dieser Pfad bleiben.
	if not client then return false end
	local src = client:FindFirstChild("src/client")
	if not src then return false end
	local ui = src:FindFirstChild("UI")
	return ui ~= nil and inst:IsDescendantOf(ui)
end

local function shouldNuke(inst: Instance): boolean
	-- Falsch einsortierte UI-Knoten: direkt unter Client: UI, RB7_UI, screens, App, components etc.
	if not client then return false end
	if isSrcUI(inst) then return false end
	local badNames = {
		UI = true, RB7_UI = true, screens = true, App = true, components = true,
		["RB7_UI.stub"] = true, ["UI.stub"] = true
	}
	return badNames[inst.Name] == true
end

local function nuke(inst: Instance)
	if shouldNuke(inst) then
		inst:Destroy()
		print(("[RB7_Preboot] entfernt: %s"):format(inst.Name))
	end
end

local function sweep()
	if not client then return end
	for _,child in ipairs(client:GetChildren()) do
		nuke(child)
		-- auch tiefer schauen: falls es doch Unterordner UI gibt
		for _,g in ipairs(child:GetChildren()) do
			nuke(g)
		end
	end
end

-- Früher Mehrfachlauf, um Rennbedingungen zu vermeiden
for i = 1, 30 do
	sweep()
	RunService.Heartbeat:Wait()
end

-- Wachhund für spätes Nachladen
if client then
	client.ChildAdded:Connect(function(c) nuke(c) end)
	client.DescendantAdded:Connect(function(d) nuke(d) end)
end

print("[RB7_Preboot] ✅ Legacy-UI gesäubert")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000915</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX95a709f57bf84eea9f48ae5155edc6be">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Client</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000916</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX3846f39b7b6341df8fc65a8612aadb7f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Debug</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000917</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX5ceab5826a544fa8a5cb4d78488d7751">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Init</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{dc84ff24-b2e4-473a-81f8-e85ecf3b485c}</string>
						<ProtectedString name="Source"><![CDATA[-- client
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000918</UniqueId>
					</Properties>
				</Item>
				<Item class="StringValue" referent="RBX86407121b213428d85a440890af0ade1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">KEEP</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000919</UniqueId>
						<string name="Value"><![CDATA[KEEP CLIENT
]]></string>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXd8647f5a218649cdbdfb9fcd4812ae56">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">OpenMenu_Sanity</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{87635142-d48f-41cb-af0e-65a11cb56b3c}</string>
						<ProtectedString name="Source"><![CDATA[-- RB7 OpenMenu Sanity (client)
local RS = game:GetService("ReplicatedStorage")
local ok = pcall(function()
    local Shared = RS:WaitForChild("Shared", 5)
    local Events = Shared and Shared:WaitForChild("Events", 5)
    local V1     = Events and Events:WaitForChild("v1", 5)
    local OpenMenu = V1 and V1:WaitForChild("OpenMenu", 5)
    if OpenMenu and OpenMenu:IsA("RemoteEvent") then
        print("[RB7_UI] OpenMenu RemoteEvent ✅ vorhanden")
        OpenMenu.OnClientEvent:Connect(function(...)
            print("[RB7_UI] OpenMenu signal empfangen")
        end)
    else
        warn("[RB7_UI] OpenMenu RemoteEvent fehlt ❌")
    end
end)
if not ok then
    warn("[RB7_UI] OpenMenu Sanity: Zugriff auf Remotes fehlgeschlagen.")
end
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000091a</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX52fb4d8866654e708bc51affd2f74355">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Preboot_CleanUI</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{9ef00316-bd06-4541-a8d4-d0c4e7fbd109}</string>
						<ProtectedString name="Source"><![CDATA[-- RB7 Preboot-CleanUI (client): Entfernt Legacy-LocalScripts "RB7_UI" aggressiv
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local plr = Players.LocalPlayer

local function nukeRB7UI(root)
    if not root then return end
    for _,d in ipairs(root:GetDescendants()) do
        if d:IsA("LocalScript") and d.Name == "RB7_UI" then
            d.Disabled = true
            d:Destroy()
            warn("[RB7_Preboot] entfernt: " .. d:GetFullName())
        end
    end
end

local function sweep()
    local ps = plr:FindFirstChild("PlayerScripts")
    if ps then
        nukeRB7UI(ps)
        for _,c in ipairs(ps:GetChildren()) do nukeRB7UI(c) end
    end
end

-- früh mehrfach scannen
for i=1,60 do
    sweep()
    RunService.Heartbeat:Wait()
end
-- danach auf Änderungen horchen
local ps = plr:WaitForChild("PlayerScripts")
ps.DescendantAdded:Connect(function(d) if d:IsA("LocalScript") and d.Name=="RB7_UI" then d:Destroy() end end)
ps.ChildAdded:Connect(function(d) if d:IsA("LocalScript") and d.Name=="RB7_UI" then d:Destroy() end end)

-- Fallback nachgeladen
task.defer(sweep)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000091b</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXb70c14d66693491297e9beedf7b12e7a">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_Boot</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{b8e3ed4e-9460-459b-b7aa-f3664baa3bc0}</string>
						<ProtectedString name="Source"><![CDATA[print("RB7: Client boot ok")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000091c</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXf4065a2dc5d2431b92b211112ef95fb8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_ClientMain</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{17c2d52b-abfe-4283-a718-ff0e15dbe0e8}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- RB7_ClientMain: erstellt minimales HUD und sendet periodisch Ping an den Server
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))

-- Resolve RemoteEvent
local Ping: RemoteEvent = ReplicatedStorage
	:WaitForChild("Shared")
	:WaitForChild(Events.ROOT)
	:WaitForChild(Events.VERSION)
	:WaitForChild(Events.PING) :: any

-- HUD konstruieren (unter StarterGui/RB7_UI gemappt; zur Laufzeit im PlayerGui)
local pg = player:WaitForChild("PlayerGui")
local existing = pg:FindFirstChild("RB7_HUD")
local hud = existing or Instance.new("ScreenGui")
hud.Name = "RB7_HUD"
hud.ResetOnSpawn = false
hud.IgnoreGuiInset = true
hud.Parent = pg

local label = hud:FindFirstChild("Status") :: TextLabel?
if not label then
	label = Instance.new("TextLabel")
	label.Name = "Status"
	label.Size = UDim2.new(0, 260, 0, 28)
	label.Position = UDim2.new(0, 12, 0, 12)
	label.BackgroundTransparency = 0.3
	label.TextWrapped = true
	label.Parent = hud
end
label.Text = "RB7 HUD bereit • Verbunden"

-- Pings senden als Lebenszeichen
task.spawn(function()
	while true do
		task.wait(5)
		label.Text = "RB7 Ping → Server …"
		local ok = pcall(function()
			Ping:FireServer({ t = os.time() })
		end)
		label.Text = ok and "RB7 Ping gesendet" or "RB7 Ping FEHLER"
	end
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000091d</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXead1d733263944b082b2e301853da653">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_InputClient</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{1eb72b6b-5d8f-49bc-80d5-1dcfa99871e2}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer

local Events  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Actions = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Input"):WaitForChild("Actions"))

local function getEvent(name: string): RemoteEvent
	return (ReplicatedStorage
		:WaitForChild("Shared")
		:WaitForChild(Events.ROOT)
		:WaitForChild(Events.VERSION)
		:WaitForChild(name)) :: any
end

local RE_SetADS    : RemoteEvent = getEvent(Events.SET_ADS)
local RE_SetCrouch : RemoteEvent = getEvent(Events.SET_CROUCH)
local RE_Reload    : RemoteEvent = getEvent(Events.RELOAD)

local adsOn = false
local crouchOn = false

local function bindADS(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.Begin then
		adsOn = not adsOn
		RE_SetADS:FireServer({ on = adsOn })
	end
	return Enum.ContextActionResult.Sink
end

local function bindCrouch(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.Begin then
		crouchOn = not crouchOn
		RE_SetCrouch:FireServer({ on = crouchOn })
	end
	return Enum.ContextActionResult.Sink
end

local function bindReload(actionName, inputState, inputObject)
	if inputState == Enum.UserInputState.Begin then
		RE_Reload:FireServer({})
	end
	return Enum.ContextActionResult.Sink
end

-- Bindings
ContextActionService:BindAction(Actions.ADS_TOGGLE, bindADS, true, Enum.UserInputType.MouseButton2)
ContextActionService:BindAction(Actions.CROUCH_TOGGLE, bindCrouch, true, Enum.KeyCode.C)
ContextActionService:BindAction(Actions.RELOAD, bindReload, true, Enum.KeyCode.R)

print("[RB7_InputClient] ✅ Bindings aktiv (ADS:right mouse, Crouch:C, Reload:R)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000091e</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXaa36f03098e8442ab504bed54662a7c9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_ProfileClient</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{e9430460-6870-430b-ae64-1778609058b7}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))

local function get(path)
	local cur = ReplicatedStorage:WaitForChild("Shared"):WaitForChild(Events.ROOT):WaitForChild(Events.VERSION)
	return cur:WaitForChild(path)
end

local RF_GetProfile: RemoteFunction = get(Events.GET_PROFILE) :: any
local RE_ProfileUpdated: RemoteEvent = get(Events.PROFILE_UPDATED) :: any

local pg = player:WaitForChild("PlayerGui")
local hud = pg:FindFirstChild("RB7_HUD")
if hud then
	local label = hud:FindFirstChild("Status") :: TextLabel?
	if label then
		local ok, prof = pcall(function() return RF_GetProfile:InvokeServer() end)
		if ok and typeof(prof)=="table" then
			label.Text = string.format("RB7 HUD bereit • %s (XP %d)", prof.name or "?", prof.xp or 0)
		end
		RE_ProfileUpdated.OnClientEvent:Connect(function(pf)
			if typeof(pf)=="table" then
				label.Text = string.format("RB7 HUD bereit • %s (XP %d)", pf.name or "?", pf.xp or 0)
			end
		end)
	end
end
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000091f</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXb617de2c813d4b9bb0ed8d463748546c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_RoundHud</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{b09600d4-a59a-459b-ac31-f6d56d864396}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- RB7_RoundHud: Zeigt Runden-Timer an und reagiert auf Start/Ende (mit Theme)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Theme  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("UITheme"))

local function getEvent(name: string): RemoteEvent
	return (ReplicatedStorage
		:WaitForChild("Shared")
		:WaitForChild(Events.ROOT)
		:WaitForChild(Events.VERSION)
		:WaitForChild(name)) :: any
end

local E_RoundStart: RemoteEvent = getEvent(Events.ROUND_START)
local E_RoundEnded: RemoteEvent = getEvent(Events.ROUND_ENDED)
local E_TimerTick : RemoteEvent = getEvent(Events.TIMER_TICK)

local pg = player:WaitForChild("PlayerGui")
local hud = pg:FindFirstChild("RB7_HUD") or Instance.new("ScreenGui")
hud.Name = "RB7_HUD"
hud.ResetOnSpawn = false
hud.IgnoreGuiInset = true
hud.Parent = pg

local function styleLabel(lb: TextLabel, w: number, y: number)
	lb.Size = UDim2.new(0, w, 0, 28)
	lb.Position = UDim2.new(0, 12, 0, y)
	lb.BackgroundColor3 = Theme.Color.PanelBg
	lb.BackgroundTransparency = 0.3
	lb.BorderSizePixel = 0
	lb.Font = Theme.Font         -- <— Enum.Font direkt setzen
	lb.TextSize = 16
	lb.TextColor3 = Theme.Color.Text
end

local statusLabel = hud:FindFirstChild("Status") :: TextLabel?
if not statusLabel then
	statusLabel = Instance.new("TextLabel")
	statusLabel.Name = "Status"
	statusLabel.TextWrapped = true
	statusLabel.Parent = hud
end
styleLabel(statusLabel, 260, 12)
statusLabel.Text = "RB7 HUD bereit"

local timerLabel = hud:FindFirstChild("Timer") :: TextLabel?
if not timerLabel then
	timerLabel = Instance.new("TextLabel")
	timerLabel.Name = "Timer"
	timerLabel.Parent = hud
end
styleLabel(timerLabel, 140, 44)
timerLabel.Text = "⏳ --:--"

local function fmt(sec: number): string
	sec = math.max(0, math.floor(sec))
	local m = math.floor(sec/60)
	local s = sec % 60
	return string.format("%02d:%02d", m, s)
end

E_RoundStart.OnClientEvent:Connect(function(payload)
	statusLabel.Text = "▶ Runde gestartet"
	if typeof(payload) == "table" and payload.duration then
		timerLabel.Text = "⏳ " .. fmt(payload.duration)
	end
end)
E_RoundEnded.OnClientEvent:Connect(function(_)
	statusLabel.Text = "⏹ Runde beendet"
end)
E_TimerTick.OnClientEvent:Connect(function(payload)
	if typeof(payload) == "table" and payload.t then
		timerLabel.Text = "⏳ " .. fmt(payload.t)
	end
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000920</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXf1479429ffc04e3895339647ba3166c1">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_StateClient</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{11e0da03-5a99-42dd-bf69-81efb16b2d5a}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))

local function get(path)
	local cur = ReplicatedStorage:WaitForChild("Shared"):WaitForChild(Events.ROOT):WaitForChild(Events.VERSION)
	return cur:WaitForChild(path)
end

local RF_GetState: RemoteFunction = get(Events.GET_STATE) :: any
local RE_StateChanged: RemoteEvent = get(Events.STATE_CHANGED) :: any

local pg = player:WaitForChild("PlayerGui")
local hud = pg:FindFirstChild("RB7_HUD")
local status = hud and hud:FindFirstChild("Status") :: TextLabel?

local function render(st:any)
	if not status or type(st)~="table" then return end
	local flags = {}
	if st.ads then table.insert(flags, "ADS") end
	if st.crouch then table.insert(flags, "Crouch") end
	status.Text = ("RB7 HUD bereit • %s"):format(#flags>0 and table.concat(flags, " | ") or "neutral")
end

-- Initial holen
local ok, st = pcall(function() return RF_GetState:InvokeServer() end)
if ok then render(st) end

-- Live-Änderungen
RE_StateChanged.OnClientEvent:Connect(function(payload)
	if type(payload)=="table" and payload.userId == player.UserId then
		render(payload.state)
	end
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000921</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXcb451bc96f86474b919937caeb6d379f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_UI</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{2dc4fcd7-6d3c-4467-976a-d8054601433e}</string>
						<ProtectedString name="Source"><![CDATA[-- RB7 UI Stub: sorgt dafür, dass ein definierter Einstieg existiert, ohne Legacy-Abhängigkeiten
if _G.__RB7_UI_INIT then return end
_G.__RB7_UI_INIT = true
print("[RB7_UI Stub] geladen.")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000922</UniqueId>
					</Properties>
					<Item class="LocalScript" referent="RBX68a9349d46ad4ae7b2492d2c5a6e4926">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Init</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{cd88b204-ef51-4f22-953b-f589a34b862e}</string>
							<ProtectedString name="Source"><![CDATA[-- RB7 UI Stub: sorgt dafür, dass ein definierter Einstieg existiert, ohne Legacy-Abhängigkeiten
if _G.__RB7_UI_INIT then return end
_G.__RB7_UI_INIT = true
print("[RB7_UI Stub] geladen.")
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000923</UniqueId>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBXdc9172278e4140e491ee1066fbb7112e">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">components</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000924</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXf4990cb2fc2b4bb8b182880b5f6b7d14">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LeftMenu</string>
								<string name="ScriptGuid">{a7bcf39b-05d5-4c42-b2b1-c064fced48a2}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
local Theme = require(script.Parent.Parent.styles.Theme)
local LeftMenu = {}; LeftMenu.__index = LeftMenu
function LeftMenu.new(parent: Instance, items: {string})
  local f = Instance.new("Frame"); f.Name="LeftMenu"; f.Size=UDim2.new(0,260,1,0)
  f.BackgroundColor3=Theme.Colors.Panel; f.BorderSizePixel=0; f.Parent=parent
  local header = Instance.new("TextLabel"); header.Name="Header"; header.Size=UDim2.new(1,0,0,40)
  header.BackgroundTransparency=1; header.Font=Theme.Fonts.Header; header.TextSize=18
  header.TextXAlignment=Enum.TextXAlignment.Left; header.TextColor3=Theme.Colors.Text
  header.Text="GAME LOBBY"; header.Position=UDim2.new(0,12,0,6); header.Parent=f
  local listHolder = Instance.new("Frame"); listHolder.Name="List"; listHolder.BackgroundTransparency=1
  listHolder.Size=UDim2.new(1,-20,1,-70); listHolder.Position=UDim2.new(0,10,0,50); listHolder.Parent=f
  local layout = Instance.new("UIListLayout"); layout.Padding=UDim.new(0,6); layout.Parent=listHolder
  local buttons={}
  for _,name in ipairs(items) do
    local b=Instance.new("TextButton"); b.Name=(name:gsub("%s","")); b.Size=UDim2.new(1,0,0,28)
    b.BackgroundColor3=Theme.Colors.AccentDim; b.BorderSizePixel=0; b.AutoButtonColor=false
    b.Font=Theme.Fonts.Body; b.TextSize=16; b.TextXAlignment=Enum.TextXAlignment.Left
    b.TextColor3=Theme.Colors.Text; b.Text=name; b.Parent=listHolder
    local line=Instance.new("Frame"); line.Size=UDim2.new(1,0,0,1); line.BackgroundColor3=Theme.Colors.Line; line.BorderSizePixel=0; line.Position=UDim2.new(0,0,1,0); line.Parent=b
    b.MouseEnter:Connect(function() b.BackgroundColor3=Theme.Colors.Accent end)
    b.MouseLeave:Connect(function() b.BackgroundColor3=Theme.Colors.AccentDim end)
    table.insert(buttons,b)
  end
  return setmetatable({Frame=f,Items=buttons},LeftMenu)
end
return LeftMenu
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000925</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX86851f28bea844a0ba8e258a19093881">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">MapPreview</string>
								<string name="ScriptGuid">{401a9536-f48f-4e73-8bc0-0b4be3ca42a1}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
local Theme = require(script.Parent.Parent.styles.Theme)
local function MapPreview(parent: Instance)
  local frame=Instance.new("Frame"); frame.Name="MapPreview"; frame.Size=UDim2.new(0,260,0,160); frame.BackgroundColor3=Theme.Colors.Panel; frame.BorderSizePixel=0; frame.Parent=parent
  local img=Instance.new("ImageLabel"); img.Name="Image"; img.Size=UDim2.new(1,-12,1,-12); img.Position=UDim2.new(0,6,0,6); img.BackgroundTransparency=1; img.ScaleType=Enum.ScaleType.Crop; img.Image="rbxassetid://0"; img.Parent=frame
  local caption=Instance.new("TextLabel"); caption.Name="Caption"; caption.BackgroundTransparency=1; caption.Size=UDim2.new(1,-12,0,18); caption.Position=UDim2.new(0,6,1,-22); caption.Font=Theme.Fonts.Body; caption.TextXAlignment=Enum.TextXAlignment.Left; caption.TextSize=14; caption.TextColor3=Theme.Colors.Text; caption.Text="TOTAL CONQUEST  •  COB TRAINING"; caption.Parent=frame
  return frame
end
return MapPreview
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000926</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXc83fbb16e8f04847ad5a4fbb5307cfa5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">TeamPanel</string>
								<string name="ScriptGuid">{7b37e66b-d72d-4893-894d-1ba3a1a39ad9}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
local Theme = require(script.Parent.Parent.styles.Theme)
local function mkRow(parent: Instance, idx: number, name: string, kills: number, deaths: number, highlight: boolean?)
  local row=Instance.new("Frame"); row.Name="Row"..idx; row.Size=UDim2.new(1,0,0,22); row.BackgroundTransparency=1; row.Parent=parent
  local i=Instance.new("TextLabel"); i.Size=UDim2.new(0,22,1,0); i.BackgroundTransparency=1; i.Font=Theme.Fonts.Mono; i.TextSize=14; i.TextColor3=Theme.Colors.SubText; i.Text=tostring(idx).."."; i.Parent=row
  local n=Instance.new("TextLabel"); n.Position=UDim2.new(0,26,0,0); n.Size=UDim2.new(1,-160,1,0); n.BackgroundTransparency=1; n.Font=Theme.Fonts.Body; n.TextXAlignment=Enum.TextXAlignment.Left; n.TextSize=14; n.TextColor3=highlight and Theme.Colors.Good or Theme.Colors.Text; n.Text=name; n.Parent=row
  local k=Instance.new("TextLabel"); k.Size=UDim2.new(0,40,1,0); k.Position=UDim2.new(1,-90,0,0); k.BackgroundTransparency=1; k.Font=Theme.Fonts.Mono; k.TextSize=14; k.Text=tostring(kills); k.TextColor3=Theme.Colors.Text; k.Parent=row
  local d=Instance.new("TextLabel"); d.Size=UDim2.new(0,40,1,0); d.Position=UDim2.new(1,-40,0,0); d.BackgroundTransparency=1; d.Font=Theme.Fonts.Mono; d.TextSize=14; d.Text=tostring(deaths); d.TextColor3=Theme.Colors.Text; d.Parent=row
end
local function TeamPanel(parent: Instance, title: string, rows)
  local panel=Instance.new("Frame"); panel.Name=title:gsub("%s","").."Panel"; panel.BackgroundColor3=Theme.Colors.Panel; panel.BorderSizePixel=0; panel.Size=UDim2.new(0.49,-6,0,170); panel.Parent=parent
  local header=Instance.new("TextLabel"); header.Name="Header"; header.Size=UDim2.new(1,0,0,28); header.BackgroundColor3=Theme.Colors.Line; header.BorderSizePixel=0; header.Font=Theme.Fonts.Header; header.TextSize=16; header.TextColor3=Theme.Colors.Text; header.Text=title:upper(); header.Parent=panel
  local body=Instance.new("Frame"); body.Name="Body"; body.BackgroundTransparency=1; body.Position=UDim2.new(0,10,0,36); body.Size=UDim2.new(1,-20,1,-46); body.Parent=panel
  local layout=Instance.new("UIListLayout"); layout.Padding=UDim.new(0,4); layout.Parent=body
  for i,r in ipairs(rows) do mkRow(body,i,r[1],r[2],r[3],r[4]) end
  return panel
end
return TeamPanel
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000927</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX3fcd13c1c03642fabc0b5078aa84a58a">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">screens</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000928</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXdd6fe20532e243e6a878637c63936dd6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LoadoutScreen</string>
								<string name="ScriptGuid">{bbce1dc3-8f92-4ffa-88a8-c502b39733e5}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local Theme = require(script.Parent.Parent.styles.Theme)
local function LoadoutScreen()
  local playerGui=Players.LocalPlayer:WaitForChild("PlayerGui")
  local gui=Instance.new("ScreenGui"); gui.Name="RB7_Loadout"; gui.IgnoreGuiInset=true; gui.ResetOnSpawn=false; gui.Enabled=false; gui.Parent=playerGui
  local bg=Instance.new("Frame"); bg.Size=UDim2.new(1,0,1,0); bg.BackgroundColor3=Theme.Colors.Bg; bg.BorderSizePixel=0; bg.Parent=gui
  local title=Instance.new("TextLabel"); title.Size=UDim2.new(1,0,0,50); title.BackgroundTransparency=1; title.Font=Theme.Fonts.Header; title.TextSize=24; title.TextColor3=Theme.Colors.Text; title.Text="LOADOUT"; title.Parent=bg
  local weapons=Instance.new("TextButton"); weapons.Size=UDim2.new(0,220,0,40); weapons.Position=UDim2.new(0,50,0,90); weapons.Text="Weapons"; weapons.BackgroundColor3=Theme.Colors.AccentDim; weapons.TextColor3=Theme.Colors.Text; weapons.Parent=bg
  local gear=Instance.new("TextButton"); gear.Size=UDim2.new(0,220,0,40); gear.Position=UDim2.new(0,50,0,140); gear.Text="Gear (Head/Arm/Shoulder/Chest/Leg/Clothes)"; gear.BackgroundColor3=Theme.Colors.AccentDim; gear.TextColor3=Theme.Colors.Text; gear.Parent=bg
  return gui,{Weapons=weapons,Gear=gear}
end
return LoadoutScreen
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000929</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXfad9a4fa8c5c4c4db3807cce2cfbb771">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LobbyScreen</string>
								<string name="ScriptGuid">{0490452b-1396-49bc-9bdf-bfa761bd7d91}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local Theme = require(script.Parent.Parent.styles.Theme)
local LeftMenu = require(script.Parent.Parent.components.LeftMenu)
local TeamPanel = require(script.Parent.Parent.components.TeamPanel)
local MapPreview = require(script.Parent.Parent.components.MapPreview)
local function LobbyScreen()
  local playerGui = Players.LocalPlayer:WaitForChild("PlayerGui")
  local gui = Instance.new("ScreenGui"); gui.Name="RB7_Lobby"; gui.IgnoreGuiInset=true; gui.DisplayOrder=50; gui.ResetOnSpawn=false; gui.Parent=playerGui
  local bg=Instance.new("Frame"); bg.Size=UDim2.new(1,0,1,0); bg.BackgroundColor3=Theme.Colors.Bg; bg.BorderSizePixel=0; bg.Parent=gui
  local left = LeftMenu.new(bg, {"NOT READY","CHANGE TEAM","LOADOUT","MATCH SETTINGS","PLAYERS","OPTIONS","STATISTICS"}).Frame
  local preview = MapPreview(bg); preview.Position=UDim2.new(0,10,1,-180)
  local right=Instance.new("Frame"); right.Name="RightColumn"; right.Size=UDim2.new(1,-280,1,-20); right.Position=UDim2.new(0,270,0,10); right.BackgroundTransparency=1; right.Parent=bg
  local top=Instance.new("Frame"); top.Name="TeamsRow"; top.Size=UDim2.new(1,0,0,180); top.BackgroundTransparency=1; top.Parent=right
  local h=Instance.new("UIListLayout"); h.FillDirection=Enum.FillDirection.Horizontal; h.Padding=UDim.new(0,12); h.Parent=top
  local alpha = TeamPanel(top,"ALPHA TEAM",{{"World x Famous",38,12,false},{"[NwO]JeeNiNe",34,14,false},{"NwO x DoNTe",62,21,true},{"[X]TxkEoVeR",70,22,false}})
  alpha.Size=UDim2.new(0.5,-6,1,0)
  local bravo = TeamPanel(top,"BRAVO TEAM",{{"[GOD]Able In The Cut",36,5,true},{"Methodz",99,4,false},{"Fams Ringer Tag",44,6,false},{"CnC Killa Chris",47,6,false}})
  bravo.Size=UDim2.new(0.5,-6,1,0)
  local footer=Instance.new("TextLabel"); footer.Name="Footer"; footer.BackgroundTransparency=1; footer.Size=UDim2.new(1,-10,0,18); footer.Position=UDim2.new(0,270,1,-22)
  footer.Font=Theme.Fonts.Mono; footer.TextXAlignment=Enum.TextXAlignment.Right; footer.TextSize=14; footer.TextColor3=Theme.Colors.SubText; footer.Text="XP MODIFIER: -20%"; footer.Parent=bg
  return gui
end
return LobbyScreen
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000092a</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX3e67d5647326488fa2b685e0b693b3d3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">styles</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000092b</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX1d222177eff847fca72c368778b49355">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Theme</string>
								<string name="ScriptGuid">{5c9c31b0-35d6-4531-9a85-229aa21c2ae7}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
local Theme = {
  Colors = {
    Bg=Color3.fromRGB(20,20,24), Panel=Color3.fromRGB(36,36,42),
    Accent=Color3.fromRGB(160,20,20), AccentDim=Color3.fromRGB(120,16,16),
    Text=Color3.fromRGB(235,235,235), SubText=Color3.fromRGB(190,190,190),
    Line=Color3.fromRGB(80,80,86), Good=Color3.fromRGB(80,200,120),
    Warn=Color3.fromRGB(220,200,90),
  },
  Fonts={ Header=Enum.Font.GothamBold, Body=Enum.Font.Gotham, Mono=Enum.Font.Code }
}
return Theme
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000092c</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX2c1bc1e2cc0c48adbffbdbac6da9b115">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RB7_WeaponInputClient</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{62c8a57d-277a-404e-a633-adedc5ca53c0}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer

local Events  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local WConfig = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Weapons"):WaitForChild("Config"))

local function getEvent(name: string): any
	return (ReplicatedStorage
		:WaitForChild("Shared")
		:WaitForChild(Events.ROOT)
		:WaitForChild(Events.VERSION)
		:WaitForChild(name))
end

local RE_Equip : RemoteEvent = getEvent(Events.EQUIP_WEAPON)
local RE_Shoot : RemoteEvent = getEvent(Events.SHOOT)
local RE_AmmoUp: RemoteEvent = getEvent(Events.AMMO_UPDATE)
local RF_Loadout: RemoteFunction = getEvent(Events.GET_LOADOUT)

local equipped = "FAMAS"

-- HUD-Hook
local pg = player:WaitForChild("PlayerGui")
local hud = pg:FindFirstChild("RB7_HUD") or Instance.new("ScreenGui")
hud.Name = "RB7_HUD"; hud.ResetOnSpawn=false; hud.IgnoreGuiInset=true; hud.Parent = pg

local ammoLabel = hud:FindFirstChild("Ammo") :: TextLabel?
if not ammoLabel then
	ammoLabel = Instance.new("TextLabel")
	ammoLabel.Name = "Ammo"
	ammoLabel.Size = UDim2.new(0, 160, 0, 28)
	ammoLabel.Position = UDim2.new(0, 12, 0, 76)
	ammoLabel.BackgroundTransparency = 0.3
	ammoLabel.Text = "🔫 --/--"
	ammoLabel.Parent = hud
end

local function renderAmmo(name:string, mag:number?, reserve:number?)
	if mag and reserve then
		ammoLabel.Text = ("🔫 %s  %d/%d"):format(name, mag, reserve)
	end
end

-- Initial: Loadout & Start-Anzeige
local ok, loadout = pcall(function() return RF_Loadout:InvokeServer() end)
if ok and typeof(loadout)=="table" then
	equipped = loadout.Equipped or equipped
end
RE_Equip:FireServer({ name = equipped })

-- Bindings: Equip 1/2/3, Shoot (LMB)
local function bindEquip1(_,state) if state==Enum.UserInputState.Begin then equipped="FAMAS"; RE_Equip:FireServer({name=equipped}) end return Enum.ContextActionResult.Sink end
local function bindEquip2(_,state) if state==Enum.UserInputState.Begin then equipped="MP5";   RE_Equip:FireServer({name=equipped}) end return Enum.ContextActionResult.Sink end
local function bindEquip3(_,state) if state==Enum.UserInputState.Begin then equipped="PISTOL";RE_Equip:FireServer({name=equipped}) end return Enum.ContextActionResult.Sink end
local function bindShoot(_,state)
	if state==Enum.UserInputState.Begin then
		RE_Shoot:FireServer({ name = equipped })
	end
	return Enum.ContextActionResult.Sink
end

ContextActionService:BindAction("RB7_EQUIP_1", bindEquip1, true, Enum.KeyCode.One)
ContextActionService:BindAction("RB7_EQUIP_2", bindEquip2, true, Enum.KeyCode.Two)
ContextActionService:BindAction("RB7_EQUIP_3", bindEquip3, true, Enum.KeyCode.Three)
ContextActionService:BindAction("RB7_SHOOT",   bindShoot,  true, Enum.UserInputType.MouseButton1)

-- Live-Ammo-Updates vom Server
RE_AmmoUp.OnClientEvent:Connect(function(payload)
	if typeof(payload)=="table" then
		renderAmmo(payload.name, payload.mag, payload.reserve)
	end
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000092d</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX340be2eca78f4fd483773c4268a4ea8c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RoundReadyDebug</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{f84477c2-13bc-4889-9be6-a5ee91e1cd50}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Events = ReplicatedStorage:WaitForChild("Events")
local v1 = Events:WaitForChild("v1")
local RequestReadyToggle = v1:WaitForChild("RequestReadyToggle")
local PlayerReadyChanged = v1:WaitForChild("PlayerReadyChanged")
local RoundStateChanged = v1:WaitForChild("RoundStateChanged")
local GetRoundState = v1:WaitForChild("GetRoundState")

-- Taste R toggelt Ready (nur zum Testen)
game:GetService("UserInputService").InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.R then
		RequestReadyToggle:FireServer()
	end
end)

PlayerReadyChanged.OnClientEvent:Connect(function(userId: number, isReady: boolean)
	print(("[ReadyDebug] uid=%d ready=%s"):format(userId, tostring(isReady)))
end)

RoundStateChanged.OnClientEvent:Connect(function(state: string)
	print(("[RoundState] %s"):format(state))
end)

local ok, state = pcall(function()
	return GetRoundState:InvokeServer()
end)
if ok then print("[RoundState] initial:", state) end
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000092e</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBXe6ea0e1685d7430ab4512940ecedc317">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">UI</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000092f</UniqueId>
					</Properties>
					<Item class="LocalScript" referent="RBX42a33eb48a4d48d394ca36c1ce9e2fba">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">App</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{9876b9c6-8934-45f9-97b5-356f298b878d}</string>
							<ProtectedString name="Source"><![CDATA[-- RB7 UI App (safe)
local uiFolder = script.Parent
local components = uiFolder:FindFirstChild("Components")
if not components then
    warn("[UI/App] Components Ordner fehlte – wird erstellt")
    components = Instance.new("Folder")
    components.Name = "Components"
    components.Parent = uiFolder
end

local function req(name)
    local m = components:FindFirstChild(name)
    if not m then return end
    local ok, mod = pcall(function() return require(m) end)
    return ok and mod or nil
end

local HUDTimer = req("HUDTimer")
if HUDTimer and HUDTimer.mount then HUDTimer.mount(game:GetService("Players").LocalPlayer) end

local Menu = req("Menu")
if Menu and Menu.init then Menu.init() end

print("[RB7_UI] App initialisiert.")
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000930</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX391f505af53d48afab899bb08c5778e4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">App</string>
							<string name="ScriptGuid">{1b44715b-b1a9-4a5f-a7e6-3b08b030f25e}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local plr = Players.LocalPlayer
local pg = plr:WaitForChild("PlayerGui")

local componentsFolder = script.Parent:FindFirstChild("Components")
assert(componentsFolder ~= nil, "[UI/App] Components Ordner fehlt")
local compModule: ModuleScript? =
	componentsFolder:FindFirstChild("init") :: ModuleScript?
	or componentsFolder:FindFirstChildWhichIsA("ModuleScript") :: ModuleScript?
assert(compModule ~= nil, "[UI/App] Components ModuleScript fehlt (erwarte init.lua)")
local Components = require(compModule)

local v1 = ReplicatedStorage:WaitForChild("Events"):WaitForChild("v1")
local RoundTimeUpdated = v1:WaitForChild("RoundTimeUpdated")
local RoundStateChanged = v1:WaitForChild("RoundStateChanged")

local App = {}
local gui: ScreenGui? = nil
local timeLabel: TextLabel? = nil
local stateLabel: TextLabel? = nil

function App.mount()
	if gui then return gui end
	gui = Instance.new("ScreenGui")
	gui.IgnoreGuiInset = true
	gui.Name = "RB7_HUD"
	gui.ResetOnSpawn = false
	gui.Parent = pg

	local panel = Components.MakePanel({Name="HUDPanel", Size=UDim2.fromScale(0.26,0.14), Position=UDim2.new(0,12,0,12)})
	panel.Parent = gui

	stateLabel = Components.MakeLabel({Name="State", Text="State: —", Size=UDim2.fromScale(1,0.45), Position=UDim2.new(0,0,0,0)})
	stateLabel.Parent = panel

	timeLabel = Components.MakeLabel({Name="Timer", Text="Time: —", Size=UDim2.fromScale(1,0.45), Position=UDim2.new(0,0,0.5,0)})
	timeLabel.Parent = panel

	RoundTimeUpdated.OnClientEvent:Connect(function(remaining: number)
		if timeLabel then timeLabel.Text = ("Time: %ds"):format(tonumber(remaining) or -1) end
	end)
	RoundStateChanged.OnClientEvent:Connect(function(state: string)
		if stateLabel then stateLabel.Text = ("State: %s"):format(tostring(state)) end
	end)

	print("[RB7_UI/App] ✅ mounted")
	return gui
end

return App
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000931</UniqueId>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBXae40c83061214513976440f1c082be30">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Boot</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{39d99939-85f8-49b4-8d7f-77cb8ad67a6b}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
local App = require(script.Parent:WaitForChild("App"))
local ok, res = pcall(function() return App.mount() end)
if ok then
	print("[RB7_UI] App initialisiert.")
else
	warn("[RB7_UI] App-Start fehlgeschlagen:", res)
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000932</UniqueId>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBXba34e5d943134579afe13ad8f2c7d1ce">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Sanity</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{582d9572-bad7-4969-b42a-7e3e4e12598f}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
local folder = script.Parent:FindFirstChild("Components")
local mod = folder and folder:FindFirstChildWhichIsA("ModuleScript")
if folder and mod then
	print("[RB7_UI] ✅ Components vorhanden (", mod.Name, ")")
else
	warn("[RB7_UI] ❌ Components fehlen oder kein ModuleScript gefunden")
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000933</UniqueId>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX0cc9571a651a42a1bc5bf6298713bd72">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">State</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000934</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX99b3b2aa9c6a4cc5bdaa5c3d390a4d7c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Store</string>
								<string name="ScriptGuid">{ae843c74-b416-4b83-a799-cf48ebf6e531}</string>
								<ProtectedString name="Source"><![CDATA[local Store, Http = {}, game:GetService("HttpService")
local _s, _e = {}, Instance.new("BindableEvent")
function Store.get(k,d) return _s[k]==nil and d or _s[k] end
function Store.set(k,v) local o=_s[k]; _s[k]=v; _e:Fire(k,o,v) end
function Store.toggle(k,a,b) local c=Store.get(k,a); Store.set(k, c==a and b or a) end
function Store.changed(cb) return _e.Event:Connect(cb) end
function Store.snapshot() return Http:JSONDecode(Http:JSONEncode(_s)) end
if _s._init~=true then _s._init=true; _s.showFPS=true; _s.showPing=true end
return Store
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000935</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX90ca3ff7904f48c997377ba98a2cc82d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Styles</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000936</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX67529f2f61a54e8aa8e53e438dba5ee8">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Theme</string>
								<string name="ScriptGuid">{c1868dd6-d841-4676-af80-bc87cad23273}</string>
								<ProtectedString name="Source"><![CDATA[local Theme = {
  Colors={Bg=Color3.fromRGB(15,17,22),Panel=Color3.fromRGB(24,27,34),Accent=Color3.fromRGB(84,160,255),Accent2=Color3.fromRGB(255,160,84),Text=Color3.fromRGB(235,238,245),Subtle=Color3.fromRGB(170,178,191)},
  Fonts={Header=Enum.Font.GothamBold,Body=Enum.Font.Gotham,Mono=Enum.Font.Code},
  Sizes={Base=14,Small=12,Large=18,Title=24},Padding=12,Corner=12,Z={HUD=1,Overlay=10,Modal=20,Debug=1000}
}
return Theme
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000937</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX1504daca716f4fd1bee24100d56bbbc8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">assets</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000938</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX74ba4f0c2f884f22a98f83998413d660">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">components</string>
							<string name="ScriptGuid">{0bd249eb-72c7-4c8d-8464-60d445c050dd}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
local Components = {}
function Components.MakeLabel(props: {Name: string?, Text: string?, Size: UDim2?, Position: UDim2?})
	local l = Instance.new("TextLabel")
	l.Name = props.Name or "Label"
	l.Text = props.Text or ""
	l.Size = props.Size or UDim2.fromScale(0.3, 0.08)
	l.Position = props.Position or UDim2.new(0, 12, 0, 12)
	l.BackgroundTransparency = 0.25
	l.BackgroundColor3 = Color3.new(0,0,0)
	l.TextColor3 = Color3.new(1,1,1)
	l.TextScaled = true
	l.Font = Enum.Font.GothamMedium
	l.BorderSizePixel = 0
	return l
end
function Components.MakePanel(props: {Name: string?, Size: UDim2?, Position: UDim2?})
	local f = Instance.new("Frame")
	f.Name = props.Name or "Panel"
	f.Size = props.Size or UDim2.fromScale(0.35, 0.2)
	f.Position = props.Position or UDim2.new(0, 12, 0.1, 12)
	f.BackgroundTransparency = 0.2
	f.BackgroundColor3 = Color3.fromRGB(15,15,20)
	f.BorderSizePixel = 0
	local ui = Instance.new("UICorner"); ui.CornerRadius = UDim.new(0,10); ui.Parent = f
	local pad = Instance.new("UIPadding"); pad.PaddingLeft = UDim.new(0,10); pad.PaddingTop = UDim.new(0,8); pad.Parent = f
	return f
end
return Components
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000939</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX13334f5dc4484f03965e87d86fd2ecbb">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Button</string>
								<string name="ScriptGuid">{37d2a60e-bff3-4d68-91e8-adaf6510130b}</string>
								<ProtectedString name="Source"><![CDATA[local Theme = require(script.Parent.Parent.Styles.Theme)
return function(props)
  props = props or {}
  local btn = Instance.new("TextButton")
  btn.Name="RB7_Button"; btn.AutoButtonColor=false
  btn.Text = props.text or "Button"; btn.Size = props.size or UDim2.fromOffset(160,36)
  btn.BackgroundColor3 = Theme.Colors.Accent; btn.TextColor3 = Theme.Colors.Bg
  btn.Font = Theme.Fonts.Body; btn.TextSize = Theme.Sizes.Base
  Instance.new("UICorner", btn).CornerRadius = UDim.new(0, Theme.Corner)
  local pad=Instance.new("UIPadding", btn); pad.PaddingLeft=UDim.new(0,Theme.Padding); pad.PaddingRight=UDim.new(0,Theme.Padding)
  btn.MouseButton1Click:Connect(function() if typeof(props.onClick)=="function" then task.spawn(props.onClick) end end)
  btn.MouseEnter:Connect(function() btn.BackgroundColor3 = Theme.Colors.Accent2 end)
  btn.MouseLeave:Connect(function() btn.BackgroundColor3 = Theme.Colors.Accent end)
  return btn
end
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000093a</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX9ac18719af434320ad915a46ba66f721">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">EventBridge</string>
								<string name="ScriptGuid">{a3bb7168-da1c-4d99-9ab3-ff7ac19dc6ce}</string>
								<ProtectedString name="Source"><![CDATA[local RS = game:GetService("ReplicatedStorage")
local M = {}
function M.getEventsRoot()
    -- Erwartet: ReplicatedStorage.Shared.Events.v1
    local root = RS:FindFirstChild("Shared")
    if not root then
        warn("[Loadout/EventBridge] ReplicatedStorage.Shared fehlt")
        return nil
    end
    local ev = root:FindFirstChild("Events")
    if not ev then
        warn("[Loadout/EventBridge] Shared.Events fehlt")
        return nil
    end
    local v1 = ev:FindFirstChild("v1") or ev
    return v1
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000093b</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXf727f3d38b2443948ba8626102ae7578">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">HUDTimer</string>
								<string name="ScriptGuid">{751daf6b-fdd7-4b91-aa2e-f3023e19dcb5}</string>
								<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Events = ReplicatedStorage
    :WaitForChild("Shared")
    :WaitForChild("Events")
    :WaitForChild("v1")

local M = {}

function M.mount(player)
    local RoundTimerTick = Events:FindFirstChild("RoundTimerTick")
    if not RoundTimerTick or not RoundTimerTick:IsA("RemoteEvent") then
        warn("[RB7_HUD Timer] RoundTimerTick nicht gefunden")
        return
    end
    RoundTimerTick.OnClientEvent:Connect(function(t)
        -- hier könnte UI aktualisiert werden
        -- print(("[RB7_HUD Timer] t=%s"):format(t))
    end)
    print("[RB7_HUD Timer] ✅ aktiv (RoundTimerTick)")
end

return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000093c</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXf78f5ba528704257b148d09d51b5c9f6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Menu</string>
								<string name="ScriptGuid">{8af2cbbd-1b94-42e6-a95b-76da4cd0523b}</string>
								<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Events = ReplicatedStorage
    :WaitForChild("Shared")
    :WaitForChild("Events")
    :WaitForChild("v1")

local M = {}

function M.init()
    local OpenMenu = Events:FindFirstChild("OpenMenu")
    if OpenMenu and OpenMenu:IsA("RemoteEvent") then
        print("[RB7_UI] OpenMenu RemoteEvent ✅ vorhanden")
    else
        warn("[RB7_UI] OpenMenu RemoteEvent fehlt")
    end
end

return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000093d</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX5ea5713759fe4a50b3f83c5705da37d9">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">StatusBar</string>
								<string name="ScriptGuid">{18db634e-44d9-4cb0-9a07-fd725e962d77}</string>
								<ProtectedString name="Source"><![CDATA[local Theme = require(script.Parent.Parent.Styles.Theme)
local Store = require(script.Parent.Parent.State.Store)
local RunService = game:GetService("RunService"); local Stats = game:GetService("Stats")
return function()
  local frame=Instance.new("Frame"); frame.Name="RB7_StatusBar"; frame.Size=UDim2.new(1,0,0,28); frame.BackgroundTransparency=1; frame.ZIndex=Theme.Z.HUD
  local c=Instance.new("Frame"); c.Name="Container"; c.Parent=frame; c.Size=UDim2.fromScale(1,1); c.BackgroundColor3=Theme.Colors.Panel; c.BackgroundTransparency=0.2
  Instance.new("UICorner", c).CornerRadius=UDim.new(0,Theme.Corner)
  local pad=Instance.new("UIPadding", c); pad.PaddingLeft=UDim.new(0,Theme.Padding); pad.PaddingRight=UDim.new(0,Theme.Padding)
  local list=Instance.new("UIListLayout", c); list.FillDirection=Enum.FillDirection.Horizontal; list.HorizontalAlignment=Enum.HorizontalAlignment.Right; list.VerticalAlignment=Enum.VerticalAlignment.Center; list.Padding=UDim.new(0,12)
  local function mk(name) local l=Instance.new("TextLabel"); l.Name=name; l.BackgroundTransparency=1; l.Size=UDim2.fromOffset(100,28); l.Font=Theme.Fonts.Mono; l.TextSize=Theme.Sizes.Small; l.TextColor3=Theme.Colors.Subtle; l.TextXAlignment=Enum.TextXAlignment.Right; l.ZIndex=Theme.Z.HUD; return l end
  local fpsL=mk("FPS"); fpsL.Parent=c; local pingL=mk("Ping"); pingL.Parent=c
  local frames, last = 0, os.clock()
  RunService.Heartbeat:Connect(function()
    frames += 1; local now=os.clock()
    if now-last>=1 then fpsL.Visible=Store.get("showFPS",true); if fpsL.Visible then fpsL.Text=string.format("FPS %3d",frames) end; frames=0; last=now end
  end)
  task.spawn(function()
    while task.wait(0.5) do
      local it = Stats and Stats.Network and Stats.Network.ServerStatsItem and Stats.Network.ServerStatsItem["Data Ping"]
      local ping = it and tonumber(it:GetValueString():gsub(" ms","")) or nil
      pingL.Visible = Store.get("showPing",true) and ping~=nil; if pingL.Visible then pingL.Text = string.format("PING %3d ms", ping) end
    end
  end)
  return frame
end
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000093e</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX2dd18146b4e64473963d32814d10e430">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">TabBar</string>
								<string name="ScriptGuid">{cc3bb1f8-3835-4ccd-b0b8-7bf181609241}</string>
								<ProtectedString name="Source"><![CDATA[local TextButtonPrimary = require(script.Parent:WaitForChild("TextButtonPrimary"))
local M = {}
function M.create(tabNames, onSelect)
    local bar = Instance.new("Frame")
    bar.Name = "TabBar"
    bar.Size = UDim2.fromScale(1, 0.1)
    bar.BackgroundTransparency = 1

    local list = Instance.new("UIListLayout")
    list.FillDirection = Enum.FillDirection.Horizontal
    list.HorizontalAlignment = Enum.HorizontalAlignment.Left
    list.Padding = UDim.new(0, 8)
    list.Parent = bar

    for _,name in ipairs(tabNames) do
        local btn = TextButtonPrimary.create({ Size = UDim2.fromOffset(140, 36), Text = name })
        btn.Name = "Tab_"..name
        btn.Parent = bar
        btn.MouseButton1Click:Connect(function()
            if onSelect then onSelect(name) end
        end)
    end
    return bar
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000093f</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX6bc2834da756400b8ccf581b00839ae3">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">TextButtonPrimary</string>
								<string name="ScriptGuid">{be4650dd-a009-4e55-b936-b75896292672}</string>
								<ProtectedString name="Source"><![CDATA[local M = {}
function M.create(props)
    props = props or {}
    local b = Instance.new("TextButton")
    b.Name = props.Name or "Button"
    b.AutoButtonColor = true
    b.BackgroundTransparency = 0.1
    b.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    b.Size = props.Size or UDim2.fromOffset(160, 40)
    b.Text = props.Text or "Button"
    b.TextScaled = true
    b.TextColor3 = Color3.new(1,1,1)
    b.Font = Enum.Font.GothamBold
    local stroke = Instance.new("UIStroke"); stroke.Thickness = 1; stroke.Transparency = 0.3; stroke.Parent = b
    local corner = Instance.new("UICorner"); corner.CornerRadius = UDim.new(0, 10); corner.Parent = b
    return b
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000940</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXd0ae9e3e1cf84e75b14c4068221be004">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">UIState</string>
								<string name="ScriptGuid">{43222f99-f96a-4a67-9a5b-bd03c610f8ab}</string>
								<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local pg = Players.LocalPlayer:WaitForChild("PlayerGui")

local M = {
    _screens = {}, -- name -> ScreenGui
}

function M.register(name, gui)
    M._screens[name] = gui
end

function M.show(name)
    for n, gui in pairs(M._screens) do
        if gui and gui.Parent then
            if gui:IsA("ScreenGui") then
                gui.Enabled = (n == name) or (n == "HUD" and (name == "HUD" or name == "Lobby"))
            else
                gui.Visible = (n == name)
            end
        end
    end
    print("[UIState] show ->", name)
end

return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000941</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX2ce0c4c7cf1b437c9cc2ba3def5101eb">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">screens</string>
							<string name="ScriptGuid">{511ec562-e6ea-42ab-8f5a-f96c84c0aa26}</string>
							<ProtectedString name="Source"><![CDATA[local UIState        = require(script.Parent.Parent.Components.UIState)
local LobbyScreen    = require(script:WaitForChild("LobbyScreen"))
local LoadoutScreen  = require(script:WaitForChild("LoadoutScreen"))
local Hud            = require(script:WaitForChild("Hud"))

local M = {}

function M.boot(opts)
    opts = opts or {}
    local order = opts.displayOrder or {}
    local pg = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

    local lobby = LobbyScreen.create(); lobby.DisplayOrder = order.Lobby or 50; lobby.Parent = pg
    print(("[RB7_UI] LobbyScreen created; DisplayOrder = %d"):format(lobby.DisplayOrder))

    local load  = LoadoutScreen.create(); load.DisplayOrder  = order.Loadout or 55; load.Enabled=false; load.Parent=pg
    print("[RB7_UI] LoadoutScreen created")

    local hud   = Hud.create(); hud.DisplayOrder = order.HUD or 100; hud.Parent = pg
    print("[RB7_UI] Hud created")

    -- Screens registrieren
    UIState.register("Lobby", lobby)
    UIState.register("Loadout", load)
    UIState.register("HUD", hud)

    -- Startzustand: Lobby + HUD sichtbar
    lobby.Enabled = true
    hud.Enabled   = true
    load.Enabled  = false
end

return M
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000942</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXb99046656a434e29871631a3341e8501">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Hud</string>
								<string name="ScriptGuid">{15f96cd1-b48a-4a77-b95d-66d472bb0b2a}</string>
								<ProtectedString name="Source"><![CDATA[local UIState = require(script.Parent.Parent.Components.UIState)
local Button = require(script.Parent.Parent.Components.TextButtonPrimary)

local M = {}
function M.create()
    local gui = Instance.new("ScreenGui")
    gui.Name = "HUD"

    -- Ammo
    local ammo = Instance.new("TextLabel")
    ammo.Name = "Ammo"; ammo.Size = UDim2.fromScale(0.18, 0.08); ammo.Position = UDim2.fromScale(0.80, 0.90)
    ammo.BackgroundTransparency = 1; ammo.TextScaled = true; ammo.Text = "Ammo: 30/90"; ammo.TextColor3 = Color3.new(1,1,1)
    ammo.Parent = gui

    -- XP
    local xp = Instance.new("TextLabel")
    xp.Name = "XP"; xp.Size = UDim2.fromScale(0.18, 0.08); xp.Position = UDim2.fromScale(0.02, 0.90)
    xp.BackgroundTransparency = 1; xp.TextScaled = true; xp.Text = "XP: 0"; xp.TextColor3 = Color3.new(1,1,1)
    xp.Parent = gui

    -- Menu-Button
    local menuBtn = Button.create({ Name = "MenuButton", Text = "Menu", Size = UDim2.fromOffset(120, 36) })
    menuBtn.AnchorPoint = Vector2.new(1,0)
    menuBtn.Position = UDim2.fromScale(0.985, 0.02)
    menuBtn.Parent = gui
    menuBtn.MouseButton1Click:Connect(function()
        UIState.show("Lobby")
    end)

    return gui
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000943</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX6e151aa997064d2aa7db82ee58daac47">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LoadoutScreen</string>
								<string name="ScriptGuid">{2c9ba221-0135-49e0-943e-8c08d89b67de}</string>
								<ProtectedString name="Source"><![CDATA[local UIState = require(script.Parent.Parent.Components.UIState)
local Button = require(script.Parent.Parent.Components.TextButtonPrimary)

local M = {}

local WEAPONS = {
    {name="FAMAS", id="FAMAS"},
    {name="MP5",   id="MP5"},
    {name="Pistol",id="Pistol"},
}

local function header(parent, text)
    local t = Instance.new("TextLabel")
    t.Size = UDim2.fromScale(1, 0.12)
    t.Position = UDim2.fromScale(0,0)
    t.BackgroundTransparency = 1
    t.Text = text
    t.TextScaled = true
    t.Font = Enum.Font.GothamBold
    t.TextColor3 = Color3.new(1,1,1)
    t.Parent = parent
end

local function scroll(parent)
    local sc = Instance.new("ScrollingFrame")
    sc.Name = "List"; sc.Size = UDim2.fromScale(1, 0.70); sc.Position = UDim2.fromScale(0, 0.14)
    sc.CanvasSize = UDim2.new(0,0,0,0); sc.ScrollBarThickness = 6; sc.BackgroundTransparency = 0.2
    local padding = Instance.new("UIPadding"); padding.PaddingTop = UDim.new(0,8); padding.PaddingLeft = UDim.new(0,8); padding.PaddingRight = UDim.new(0,8); padding.Parent = sc
    local ly = Instance.new("UIListLayout"); ly.SortOrder = Enum.SortOrder.LayoutOrder; ly.Padding = UDim.new(0,8); ly.Parent = sc
    ly:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        sc.CanvasSize = UDim2.new(0,0,0,ly.AbsoluteContentSize.Y+16)
    end)
    sc.Parent = parent
    return sc
end

function M.create()
    local gui = Instance.new("ScreenGui")
    gui.Name = "LoadoutScreen"

    local frame = Instance.new("Frame")
    frame.Name = "Root"
    frame.Size = UDim2.fromScale(0.6, 0.7)
    frame.Position = UDim2.fromScale(0.2, 0.15)
    frame.BackgroundTransparency = 0.05
    frame.Parent = gui
    local corner = Instance.new("UICorner"); corner.CornerRadius = UDim.new(0, 12); corner.Parent = frame

    header(frame, "Loadout")

    -- Back-Button
    local back = Button.create({ Text = "← Zurück", Size = UDim2.fromOffset(140, 36) })
    back.Position = UDim2.fromScale(0.02, 0.02)
    back.Parent = frame
    back.MouseButton1Click:Connect(function() UIState.show("Lobby") end)

    -- Weapon List
    local list = scroll(frame)
    local selected = { weapon = nil }

    local function addRow(w)
        local row = Instance.new("Frame")
        row.Name = "Row_"..w.id; row.Size = UDim2.new(1, -16, 0, 48); row.BackgroundTransparency = 0.3; row.Parent = list
        local c = Instance.new("UICorner"); c.CornerRadius = UDim.new(0,8); c.Parent = row

        local label = Instance.new("TextLabel")
        label.Name = "Label"; label.Size = UDim2.fromScale(0.6, 1); label.BackgroundTransparency = 1
        label.Text = w.name; label.TextScaled = true; label.TextColor3 = Color3.new(1,1,1); label.Parent = row

        local pick = Button.create({ Text = "Select", Size = UDim2.fromOffset(120, 36) })
        pick.Position = UDim2.fromScale(0.7, 0.1); pick.Parent = row

        local status = Instance.new("TextLabel")
        status.Name = "Status"; status.Size = UDim2.fromOffset(120, 36); status.Position = UDim2.fromScale(0.85, 0.1)
        status.BackgroundTransparency = 1; status.TextScaled = true; status.Text = ""; status.TextColor3 = Color3.fromRGB(160,255,160)
        status.Parent = row

        local function mark(active) status.Text = active and "Selected" or "" end

        pick.MouseButton1Click:Connect(function()
            selected.weapon = w.id
            for _,child in ipairs(list:GetChildren()) do
                if child:IsA("Frame") and child:FindFirstChild("Status") then child.Status.Text = "" end
            end
            mark(true)
        end)
    end

    for _,w in ipairs(WEAPONS) do addRow(w) end

    -- Apply
    local apply = Button.create({ Text = "Apply Loadout", Size = UDim2.fromOffset(180, 44) })
    apply.Position = UDim2.fromScale(0.35, 0.88); apply.Parent = frame
    apply.MouseButton1Click:Connect(function()
        local weapon = selected.weapon
        if weapon then
            print("[Loadout] Selected:", weapon)
            UIState.show("HUD")
        else
            warn("[Loadout] Keine Waffe gewählt")
        end
    end)

    return gui
end

return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000944</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX5b2e752fe23e400e92e59cf9a6164d9d">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">LobbyScreen</string>
								<string name="ScriptGuid">{a7d81b31-2bb3-4108-a16b-742ebfaf3cd1}</string>
								<ProtectedString name="Source"><![CDATA[local UIState = require(script.Parent.Parent.Components.UIState)
local Button = require(script.Parent.Parent.Components.TextButtonPrimary)

local M = {}

local function makeTitle(parent, text)
    local t = Instance.new("TextLabel")
    t.Size = UDim2.fromScale(1, 0.12)
    t.Position = UDim2.fromScale(0,0)
    t.BackgroundTransparency = 1
    t.Text = text
    t.TextScaled = true
    t.Font = Enum.Font.GothamBold
    t.TextColor3 = Color3.new(1,1,1)
    t.Parent = parent
end

function M.create()
    local gui = Instance.new("ScreenGui")
    gui.Name = "LobbyScreen"

    local root = Instance.new("Frame")
    root.Name = "Root"
    root.Size = UDim2.fromScale(0.45, 0.6)
    root.Position = UDim2.fromScale(0.05, 0.2)
    root.BackgroundTransparency = 0.05
    root.Parent = gui

    local corner = Instance.new("UICorner"); corner.CornerRadius = UDim.new(0, 12); corner.Parent = root
    makeTitle(root, "RB7 • Lobby")

    local list = Instance.new("Frame")
    list.Name = "Menu"
    list.Size = UDim2.fromScale(1, 0.78)
    list.Position = UDim2.fromScale(0, 0.16)
    list.BackgroundTransparency = 1
    list.Parent = root

    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 10)
    layout.VerticalAlignment = Enum.VerticalAlignment.Top
    layout.Parent = list

    local function addItem(name, click)
        local b = Button.create({ Text = name, Size = UDim2.fromOffset(260, 44) })
        b.Parent = list
        b.MouseButton1Click:Connect(click)
        return b
    end

    -- Menüeinträge mit Funktion:
    addItem("▶ Loadout", function() UIState.show("Loadout") end)
    addItem("▶ Gear (demnächst)", function() end)
    addItem("▶ Armor (demnächst)", function() end)
    addItem("↩ Zurück ins HUD", function() UIState.show("HUD") end)

    return gui
end
return M
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000945</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX11e6ff115e814b899927054f94a72327">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">components</string>
								<string name="ScriptGuid">{4381f7b8-aeac-4bb4-8936-95bb5ce1f628}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
-- Legacy components module – exportiert neue Components
return require(script.Parent.Parent:WaitForChild("Components"):WaitForChild("init"))
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000946</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="LocalScript" referent="RBX4a8c54dc6a9b45568ac61a3f9b906654">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">screens</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{6725d1b3-a64b-4dc8-881d-f89cd8f78ba4}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Legacy screens-loader: delegiert auf App
local App = require(script.Parent:WaitForChild("App"))
local ok, res = pcall(function() return App.mount() end)
if ok then
	print("[RB7_UI Legacy] ✅ App mounted via screens")
else
	warn("[RB7_UI Legacy] ⚠️ mount fail:", res)
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000947</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBXd146b86e1cc944fa943792e2f8b27b30">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">UnlocksDebug</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{67ae9712-d904-4b2f-8478-0ac8eb16e5bc}</string>
						<ProtectedString name="Source"><![CDATA[-- RB7 UnlocksDebug – robust gegen Pfadabweichungen
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local function waitPath(root, names, timeout)
  local node = root; local t0 = os.clock(); timeout = timeout or 10
  for _,name in ipairs(names) do
    local child = node:FindFirstChild(name)
    while not child do
      if os.clock() - t0 > timeout then
        warn(("[UnlocksDebug] timeout on path: %s"):format(table.concat(names, "/")))
        return nil
      end
      child = node:FindFirstChild(name) or node:WaitForChild(name, 0.25)
    end
    node = child
  end
  return node
end

-- Offizieller Pfad laut Server: ReplicatedStorage/Shared/Events/v1
local events = waitPath(ReplicatedStorage, {"Shared","Events","v1"}, 8)
if not events then
  warn("[UnlocksDebug] Events/v1 nicht gefunden – Debug deaktiviert.")
  return
end

local RoundTimerTick = events:FindFirstChild("RoundTimerTick")
if not RoundTimerTick or not RoundTimerTick:IsA("RemoteEvent") then
  warn("[UnlocksDebug] RoundTimerTick RemoteEvent fehlt."); return
end

print("[UnlocksDebug] ✅ verbunden mit Events/v1.RoundTimerTick")
-- Beispiel: Lauschen ohne Spam
RoundTimerTick.OnClientEvent:Connect(function(data)
  -- data kann nil/irgendwas sein – nur minimal loggen
  -- print("[UnlocksDebug] Tick", data)
end)
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000948</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBXd55406344b43400780466247f268a46f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">hud</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c500000949</UniqueId>
					</Properties>
					<Item class="LocalScript" referent="RBX9a55948b55e440119f541fd75ae5eda8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Disabled">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Timer</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{2456b540-6d37-4ca9-b9ed-2253b202bc8f}</string>
							<ProtectedString name="Source"><![CDATA[-- RB7 HUD Timer (client)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local plr = Players.LocalPlayer
local PlayerGui = plr:WaitForChild("PlayerGui")

local Shared = ReplicatedStorage:WaitForChild("Shared")
local Events = Shared:WaitForChild("Events")
local V1     = Events:WaitForChild("v1")
local RoundTimerTick = V1:WaitForChild("RoundTimerTick")

local hud = PlayerGui:FindFirstChild("RB7_HUD") or Instance.new("ScreenGui")
hud.Name = "RB7_HUD"
hud.ResetOnSpawn = false
hud.IgnoreGuiInset = true
hud.DisplayOrder = 100
hud.Parent = PlayerGui

local label = hud:FindFirstChild("TimerLabel")
if not label then
    label = Instance.new("TextLabel")
    label.Name = "TimerLabel"
    label.Size = UDim2.fromOffset(180, 44)
    label.AnchorPoint = Vector2.new(0.5, 0)
    label.Position = UDim2.new(0.5, 0, 0, 18)
    label.BackgroundTransparency = 0.25
    label.BackgroundColor3 = Color3.fromRGB(10,10,10)
    label.BorderSizePixel = 0
    label.Font = Enum.Font.GothamBold
    label.TextSize = 28
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.TextStrokeTransparency = 0.5
    label.Text = "05:00"
    label.Parent = hud
end

local function fmt(seconds:number): string
    seconds = math.max(-1, math.floor(seconds))
    if seconds < 0 then return "00:00" end
    local m = math.floor(seconds / 60)
    local s = seconds % 60
    return string.format("%02d:%02d", m, s)
end

RoundTimerTick.OnClientEvent:Connect(function(remaining)
    label.Text = fmt(remaining)
end)

print("[RB7_HUD Timer] ✅ aktiv (RoundTimerTick)")
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c50000094a</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX8f7e9a5201a14a37bf76ba7572039866">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000039c</UniqueId>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXae20788856fa4a919413d35cf061f132">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">StarterPlayerScripts</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{3cc60b33-4ede-41bb-a65e-203932b3c4ba}</string>
				<ProtectedString name="Source"><![CDATA[-- client
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7f7ec7bb987e496708b876d3000007f6</UniqueId>
			</Properties>
			<Item class="LocalScript" referent="RBXcfc9f868103841aebbce324a007ad58c">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Init</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{c733a6da-dfdc-4ca3-9a96-26836c6ed007}</string>
					<ProtectedString name="Source"><![CDATA[-- client
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7f7ec7bb987e496708b876d3000007f7</UniqueId>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBXa5df590989434856896903e3f2bcb3d6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_Boot</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{9974974f-b3ef-4467-8737-135bee96a010}</string>
					<ProtectedString name="Source"><![CDATA[print("RB7: Client boot ok")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7f7ec7bb987e496708b876d30000085f</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX01d7e314b0184c66917bada4a36a54fd">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">UI</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7f7ec7bb987e496708b876d300000863</UniqueId>
				</Properties>
				<Item class="StringValue" referent="RBXf5e6917abdf448da8c0801aef671e7dc">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">KEEP</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7f7ec7bb987e496708b876d300000865</UniqueId>
						<string name="Value"><![CDATA[KEEP UI
]]></string>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBXf0fae5a9de77484eadfd82e640388637">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">KEEP</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7f7ec7bb987e496708b876d300000866</UniqueId>
					<string name="Value"><![CDATA[KEEP CLIENT
]]></string>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXf90eb3bc47eb47309064355f38d46ae1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000034b</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX4552c8292d294f5d878154d3b19a6ce8">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="RtlTextSupport">0</token>
			<token name="ScreenOrientation">2</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<Ref name="StudioDefaultStyleSheet">null</Ref>
			<Ref name="StudioInsertWidgetLayerCollectorAutoLinkStyleSheet">null</Ref>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000034c</UniqueId>
			<token name="VirtualCursorMode">0</token>
		</Properties>
		<Item class="Folder" referent="RBXf293fac8dc5e427880e2f5cc3d954b89">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">RB7_UI</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000855</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBXe8671ab747c8486e8d4aa06e6a0d50e7">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">ui</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009dc</UniqueId>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="LocalizationService" referent="RBX683ae9419b5443608dbeea9e854e4f31">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000034e</UniqueId>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX75aef786a58e4befb229f5bdb1c4647e">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000352</UniqueId>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX98477d1701594a849173fed83f42c552">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000354</UniqueId>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBX3b8ee5548c594a8b846031e710a7468c">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000355</UniqueId>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBXcdfd63d247bf454980a5dd252c2d57f8">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000358</UniqueId>
		</Properties>
		<Item class="StringValue" referent="RBX170bf160735e44a09f5757ff242601d7">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000754</UniqueId>
				<string name="Value">{9ed88885-7a8e-4353-baee-21a75de939a8}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBX0d24d9934dc6452482ad4c9088b9d56e">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000359</UniqueId>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBXf99e73a7c31147159153bd30d02203a9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000035a</UniqueId>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBXbf69139052144a5d9a4c870ffaacde3c">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000035b</UniqueId>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBX58699d2296994b479e851470d5835eeb">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000035c</UniqueId>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBX501e18f3e12247b187acd38943ba2c26">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AutomaticScaling">0</token>
			<bool name="AvatarGestures">false</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="ControllerModels">1</token>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="FadeOutViewOnCollision">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="LaserPointer">1</token>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000360</UniqueId>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX1428920a4b944fcbb6d3b8d2c61fd948">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000361</UniqueId>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBXfa2c156ed7324d2d958d59cc7f46d206">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000362</UniqueId>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX6c2ee16200c543d49878b52c8191c4cf">
		<Properties>
			<bool name="AllowInsertFreeAssets">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000363</UniqueId>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBX20d9091e8535417597ac6bc47235a888">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000364</UniqueId>
		</Properties>
	</Item>
	<Item class="AvatarSettings" referent="RBX9ba13a81a2a8476f899fdc72fc517418">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AvatarSettings</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000036a</UniqueId>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX0bd9fb073d5a4c3fbd338cd9ba9f8a31">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LuaWebService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000372</UniqueId>
		</Properties>
	</Item>
	<Item class="ProcessInstancePhysicsService" referent="RBXf93c0cc213644eccaa6c0c77c2d1da44">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ProcessInstancePhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000373</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBX013f6c84edd845a6b6b424a964ab6f0a">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000374</UniqueId>
		</Properties>
		<Item class="ModuleScript" referent="RBXcd2b706618f946b9abefe152152030ca">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Types</string>
				<string name="ScriptGuid">{0404d047-f9cd-4a01-9b14-367586565400}</string>
				<ProtectedString name="Source"><![CDATA[-- shared
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7f7ec7bb987e496708b876d3000007f0</UniqueId>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX209966cdac4c4561a038e3765f665e01">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">RB7_Init</string>
				<string name="ScriptGuid">{4ec3311d-a2d2-4cad-9c95-27e40e69321a}</string>
				<ProtectedString name="Source"><![CDATA[return { ok=true }
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7f7ec7bb987e496708b876d300000861</UniqueId>
			</Properties>
		</Item>
		<Item class="StringValue" referent="RBX7a81d3638be847629d77e19c092362a6">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">KEEP</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7f7ec7bb987e496708b876d300000867</UniqueId>
				<string name="Value"><![CDATA[KEEP SHARED
]]></string>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBXa067391c7d304326a787e5088f28f0ad">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Shared</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000815</UniqueId>
			</Properties>
			<Item class="StringValue" referent="RBX825063956697413a996963648c53c326">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">KEEP</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000816</UniqueId>
					<string name="Value"><![CDATA[KEEP SHARED
]]></string>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBXc4f5aecfd9744d42831ff83911eec945">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">RB7</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000817</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBXf5e0054f8fb9484695e57e94a732ba4e">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Config</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000818</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX870b72a5346842cdb62874f63aebc76c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">FeatureFlags</string>
							<string name="ScriptGuid">{147d67cc-45e0-4e3e-b45b-69fb23a6231c}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Feature-Flags für inkrementelles Aktivieren/Deaktivieren
local FF = {
	UseLegacyUIBridge = true,
	EnableRoundLoop   = true,
}
return FF
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000819</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX9ba60aae608d422baf243d0a86e063b0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Game</string>
							<string name="ScriptGuid">{d5bf9dc5-62dc-4dfe-8cd2-94cc48a965aa}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Zentrale Spiel-Config (nur Konstanten, kein Hardcode sonstwo)
local GameConfig = {
	ROUND_TIME_DEFAULT = 300, -- Sekunden
	TARGET_SCORE       = 25,
	RESPAWN_TIME       = 5,
	FRIENDLY_FIRE      = false,
}
return GameConfig
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000081a</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX7c0f71265e084145bbcc942631c3f4ef">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">UITheme</string>
							<string name="ScriptGuid">{43d9e00b-bd49-4421-bf46-e3ff84f4bc59}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- UI-Theming an einer Stelle (Farben/Fonts/Abstände)
local Theme = {
	Color = {
		PanelBg = Color3.fromRGB(25, 25, 30),
		Accent  = Color3.fromRGB(0, 170, 255),
		Text    = Color3.fromRGB(230, 230, 235),
	},
	Font  = Enum.Font.GothamSemibold,
	Pad   = 8,
}
return Theme
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000081b</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX28260066f65c480288d2d395d3e4e3b7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Env</string>
							<string name="ScriptGuid">{db5c4abe-403d-42d9-be96-4d5ea970e091}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
local RunService = game:GetService("RunService")
local Env = { NAME = RunService:IsStudio() and "dev" or "prod" }
return Env
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">351135725177085308b89db600000805</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX9b9e5f49abda4817836310c69f70a333">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Admins</string>
							<string name="ScriptGuid">{cf84a6f4-067c-475a-85d0-d947be14f023}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Admin-Allowlist: numerische IDs & Fallback über Username
local Admins = {}

Admins.IDs = {
  [9195365111] = true,
}

Admins.Usernames = {
  ["RorsTheGod"] = true,
}

function Admins.isAdmin(userId:number, playerName:string?)
  if Admins.IDs[userId] then return true end
  if playerName and Admins.Usernames[playerName] then return true end
  return false
end

return Admins
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7653e669c6135c0008b8a0c600000809</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX5ec986587d124425bbe7d37c702b43ef">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Constants</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000081c</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX2dbc9c35e46b47a082fc99d51cbfd5eb">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Events</string>
							<string name="ScriptGuid">{e306ac77-710b-4d88-bbbf-0e3ad74dcd51}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- RB7: zentrale Event-Konstanten (stabile Schnittstelle)
local Events = {
	ROOT            = "Events",
	VERSION         = "v1",

	-- Core
	PING            = "Ping",

	-- Runden/Match
	ROUND_START     = "RoundStart",
	ROUND_ENDED     = "RoundEnded",
	TIMER_TICK      = "TimerTick",

	-- Profile
	GET_PROFILE     = "GetProfile",
	PROFILE_UPDATED = "ProfileUpdated",

	-- Inputs (Client -> Server)
	SET_ADS         = "SetADS",
	SET_CROUCH      = "SetCrouchState",
	RELOAD          = "ReloadEvent",

	-- PlayerState
	GET_STATE       = "GetState",
	STATE_CHANGED   = "PlayerStateChanged",

	-- Weapons
	EQUIP_WEAPON    = "EquipWeapon",
	SHOOT           = "ShootEvent",
	AMMO_UPDATE     = "AmmoUpdated",
	GET_LOADOUT     = "GetLoadout",

	-- Admin / Diagnostics
	GET_SERVER_STATS = "GetServerStats", -- RemoteFunction (C->S) -> { ok, data|error }
}
return Events
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000081d</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXfa947ceae4f94f7f9a00ec6902ac2dbc">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Limits</string>
							<string name="ScriptGuid">{a6beb058-c589-4199-b68a-2c2001f632ff}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Raten (tokens/sec) & Burst-Kapazität je RemoteEvent-NAME
return {
	["SetADS"]         = { cap = 8,  rate = 8  },
	["SetCrouchState"] = { cap = 8,  rate = 8  },
	["ReloadEvent"]    = { cap = 2,  rate = 1  },
	["ShootEvent"]     = { cap = 12, rate = 10 },
	["EquipWeapon"]    = { cap = 3,  rate = 2  },
}
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">351135725177085308b89db600000807</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXc918919537624c73873501372c30bf56">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Input</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000081e</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXf2f748a6773440a1bd5ef71f66016d77">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Actions</string>
							<string name="ScriptGuid">{118e7b54-a009-4936-947e-87ce0eecb1a8}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- RB7 Input Actions (zentrale Bezeichner)
local A = {
	ADS_TOGGLE   = "ADS_TOGGLE",   -- Rechtsklick (toggle)
	CROUCH_TOGGLE= "CROUCH_TOGGLE",-- Taste C (toggle)
	RELOAD       = "RELOAD",       -- Taste R (impuls)
}
return A
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000081f</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXa71dfc936c7e470d94946d971b5bc394">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Meta</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000820</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX6128ea6fab5646eaaf0f3d2a0581b04b">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Build</string>
							<string name="ScriptGuid">{c49e6f39-c77f-4963-9eb6-5093c19bf90f}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Build-/Schema-Metadaten an einer Stelle
local Build = {
	Version     = "0.1.0",
	SchemaMajor = 1,
	SchemaName  = "Events_v1",
}
return Build
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000821</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXa90b7837fa694493a9b5ebcaeee4c50e">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Remotes</string>
							<string name="ScriptGuid">{27fd4aa3-c17d-4824-b697-6c31f1e4825a}</string>
							<ProtectedString name="Source"><![CDATA[return {
	remotes = {
		AMMO_UPDATE = "AmmoUpdated",
		EQUIP_WEAPON = "EquipWeapon",
		GET_LOADOUT = "GetLoadout",
		GET_PROFILE = "GetProfile",
		GET_STATE = "GetState",
		PING = "Ping",
		PROFILE_UPDATED = "ProfileUpdated",
		RELOAD = "ReloadEvent",
		ROUND_ENDED = "RoundEnded",
		ROUND_START = "RoundStart",
		SET_ADS = "SetADS",
		SET_CROUCH = "SetCrouchState",
		SHOOT = "ShootEvent",
		STATE_CHANGED = "PlayerStateChanged",
		TIMER_TICK = "TimerTick",
	},
	version = "v1",
}]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">123f7de4522a8ece08b88a68000007f9</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXb38a361fae8c4a4f8e202f3590921c58">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">State</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000822</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX7036adaa3d304b85a15da2380293c7df">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PlayerState</string>
							<string name="ScriptGuid">{860c2a33-6622-423e-9ae7-7f6d13b83883}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
export type PlayerState = {
	userId: number,
	ads: boolean,
	crouch: boolean,
	ammo: number?,
	updatedAt: number,
}

local S = {}
function S.default(userId:number): PlayerState
	return {
		userId   = userId,
		ads      = false,
		crouch   = false,
		ammo     = nil,     -- Platzhalter für Waffensystem
		updatedAt= os.time(),
	}
end
return S
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000823</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX367c3efe75674024a4b17695cf3ccd47">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Types</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000824</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX999745c5d0734c71bef13d29f35d1fd2">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PlayerProfile</string>
							<string name="ScriptGuid">{de532a81-af27-4223-ade1-6c70a40c6076}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
export type Profile = {
	userId: number,
	name: string,
	xp: number,
	rank: number,
	createdAt: number,
	updatedAt: number,
}
local T = {}
function T.default(userId:number, name:string): Profile
	return {
		userId = userId,
		name = name,
		xp = 0,
		rank = 1,
		createdAt = os.time(),
		updatedAt = os.time(),
	}
end
return T
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000825</UniqueId>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBXef4d729b22bb43178a04e04c9447471f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">RemoteSchema</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000826</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX25432fb307d34600b82612125566484e">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Events_v1</string>
								<string name="ScriptGuid">{f75f98c1-0297-40c3-9ee0-ee088f94f401}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
-- Definiert erlaubte Payloads für Events/v1
export type PingPayload       = { t: number }?           -- optional, falls leer gesendet
export type TimerTickPayload  = { t: number }            -- verbleibende Zeit in s
export type RoundStartPayload = { duration: number, endsAt: number }
export type RoundEndedPayload = { reason: string }       -- z.B. "timeup", "score"

local Schema = {}

function Schema.IsPing(p:any): boolean
	if p == nil then return true end
	return type(p)=="table" and type(p.t)=="number"
end

function Schema.IsTimerTick(p:any): boolean
	return type(p)=="table" and type(p.t)=="number"
end

function Schema.IsRoundStart(p:any): boolean
	return type(p)=="table" and type(p.duration)=="number" and type(p.endsAt)=="number"
end

function Schema.IsRoundEnded(p:any): boolean
	return type(p)=="table" and type(p.reason)=="string"
end

return Schema
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000827</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXde4325cb3b3d4fd19d18a0360e9ae4df">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Inputs_v1</string>
								<string name="ScriptGuid">{b648c8b0-cb3a-44ed-a05f-433ec02e5ada}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
local Inputs = {}

function Inputs.IsSetADS(p:any): boolean
	return type(p)=="table" and type(p.on)=="boolean"
end
function Inputs.IsSetCrouch(p:any): boolean
	return type(p)=="table" and type(p.on)=="boolean"
end
function Inputs.IsReload(p:any): boolean
	return p==nil or type(p)=="table"
end

return Inputs
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000828</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX6ddaf8981b8b4f2eabe7523c513a0e7a">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">State_v1</string>
								<string name="ScriptGuid">{adbfd222-d3ba-47fe-8dd5-f16028fdc845}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
local State = {}
function State.IsStatePayload(p:any): boolean
	return type(p)=="table"
		and type(p.userId)=="number"
		and type(p.state)=="table"
end
return State
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000829</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX38047f45cb574c6899243d153f806957">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Weapons_v1</string>
								<string name="ScriptGuid">{af8a48ec-cbab-4db6-9bbd-ede2514a3b05}</string>
								<ProtectedString name="Source"><![CDATA[--!strict
local S = {}
function S.IsEquip(p:any): boolean
	return type(p)=="table" and type(p.name)=="string"
end
function S.IsShoot(p:any): boolean
	return type(p)=="table" and type(p.name)=="string"
end
function S.IsAmmoUpdate(p:any): boolean
	return type(p)=="table" and type(p.name)=="string"
		and type(p.mag)=="number" and type(p.reserve)=="number"
end
return S
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">123f7de4522a8ece08b88a68000007f5</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX8aa850f352264a4d8b095738a75f7326">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Weapons</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">123f7de4522a8ece08b88a68000007f1</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX3597255247624449933ef7d249c948a1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Config</string>
							<string name="ScriptGuid">{33fa683d-dee7-436b-8ddc-ff04bd43570f}</string>
							<ProtectedString name="Source"><![CDATA[--!strict
-- Basiskonfig für Waffen (vereinfachtes Gerüst)
local W = {}

W.Weapons = {
	FAMAS = { slot="Primary",  magSize=30, reserve=90, rpm=900, burst=false },
	MP5   = { slot="Primary",  magSize=30, reserve=120, rpm=800, burst=false },
	PISTOL= { slot="Secondary",magSize=15, reserve=45, rpm=450, burst=false },
}

W.DefaultLoadout = { Primary="FAMAS", Secondary="PISTOL" }

return W
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">123f7de4522a8ece08b88a68000007f2</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX2c6138ef293947e79f6b5c58f167c3eb">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_Init</string>
					<string name="ScriptGuid">{6bb6f395-e74d-49e5-8948-9d92efb027a7}</string>
					<ProtectedString name="Source"><![CDATA[return { ok=true }
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000082a</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX35ed10d02b9247a0b4ae17ede30a9f6b">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Types</string>
					<string name="ScriptGuid">{5076c389-03c2-46f4-9ddf-abe0a7ffc079}</string>
					<ProtectedString name="Source"><![CDATA[-- shared
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000082b</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX4dc4aa537f8347bfb79e87862bdef372">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Meta</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009d3</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX7de5db7835574e1b8ed87b4af3f61642">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Build</string>
						<string name="ScriptGuid">{4d496a40-a7ae-455f-9d61-7f2b627d9da3}</string>
						<ProtectedString name="Source"><![CDATA[return {
	build = "0.1.0",
	generatedAt = "",
	schema = "Events_v1",
}]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009d4</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX497f387801ea49339b1f1c68949bdd79">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">First</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000084c</UniqueId>
			</Properties>
			<Item class="StringValue" referent="RBXbbde1e559fbc42e2b5a393333d4cb33c">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">KEEP</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000084d</UniqueId>
					<string name="Value"><![CDATA[KEEP first
]]></string>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBXfbcf8521760145bf998ddfb68c81192a">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">first</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009d6</UniqueId>
				</Properties>
				<Item class="StringValue" referent="RBX7ed94412941e450ba0793a088485d39c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">KEEP</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009d7</UniqueId>
						<string name="Value"><![CDATA[KEEP first
]]></string>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX56e18131495440c68c25b6b33b8441d0">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Extra</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">55fe72718ef752e408b8a00a00000808</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="ServerScriptService" referent="RBXfc1c7f37b3404995ae0eb8b009c7a1c9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000375</UniqueId>
		</Properties>
		<Item class="Script" referent="RBX079e7adca8774fc0a5203d3786c131b9">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">src/server</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{0db7e495-bfe1-4eef-bc04-a3e1439cda7e}</string>
				<ProtectedString name="Source">print(&quot;Hello world, from server!&quot;)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000393</UniqueId>
			</Properties>
			<Item class="Script" referent="RBX23316b294ee140ee95876915032d3191">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Hello</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{d62cdc51-404b-4e48-a92c-1f4830854b63}</string>
					<ProtectedString name="Source"><![CDATA[print("✅ Rojo Build Test: ServerScript wurde geladen.")

game:GetService("Players").PlayerAdded:Connect(function(p)
    print("👋 Spieler beigetreten:", p.Name)
end)
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000394</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXcad8100944dd4ac8ac749cc1d6d5e533">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RojoTest</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{7dafccb0-7762-4123-9cd0-218f9cc20d48}</string>
					<ProtectedString name="Source"><![CDATA[print("✅ Rojo Sync Test läuft! Änderungen angekommen.")

]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000395</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXb078f1df4b374b73b41a7ef00f99540a">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">test</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{ca637b2f-0742-4186-92fe-10c1a4c6fb7c}</string>
					<ProtectedString name="Source"><![CDATA[print("Hallo von Rojo! (kommt aus src/server/test.server.lua)")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000396</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX4a1f483079e44d829a028df590d67be3">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Server</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{b7124d3d-6ccc-47da-911d-9f8f0192e82d}</string>
				<ProtectedString name="Source"><![CDATA[-- server
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">09618a79faec3cc608b8863a000007fd</UniqueId>
			</Properties>
			<Item class="Script" referent="RBX2d4df445bed341b6801d54597f6d031d">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Init</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{f1bbafa1-9303-4cf3-b53d-6179590e09ff}</string>
					<ProtectedString name="Source"><![CDATA[-- server
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a000007fe</UniqueId>
				</Properties>
			</Item>
			<Item class="StringValue" referent="RBXc8b0377197e847a6a7c61e0dedddd474">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">KEEP</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a000007ff</UniqueId>
					<string name="Value"><![CDATA[KEEP SERVER
]]></string>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXb5e74b7745d24024a599c77449e483fd">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_Boot</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{1bfe1570-b632-4aa6-ac19-04148b46ff27}</string>
					<ProtectedString name="Source"><![CDATA[print("RB7: Server boot ok")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000800</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX7c7f7a5ae7b9413380d78a8705ece378">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_InputService</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{fcead7c6-2200-49eb-9c52-8a7eef14c34a}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Limits = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Limits"))
local InputsSchema = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("Inputs_v1"))
local RateLimiter = require(script.Parent:WaitForChild("Lib"):WaitForChild("RateLimiter"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRE(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end

local RS     = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

local RE_SetADS    = ensureRE(EV, Events.SET_ADS)
local RE_SetCrouch = ensureRE(EV, Events.SET_CROUCH)
local RE_Reload    = ensureRE(EV, Events.RELOAD)

local function allowed(uid:number, eventName:string): boolean
	local lim = Limits[eventName]
	if not lim then return true end
	return RateLimiter.check(uid, eventName, lim.cap, lim.rate)
end

RE_SetADS.OnServerEvent:Connect(function(player, payload)
	if not InputsSchema.IsSetADS(payload) then return end
	if not allowed(player.UserId, Events.SET_ADS) then return end
	-- (StateService setzt flags & broadcastet bereits)
end)

RE_SetCrouch.OnServerEvent:Connect(function(player, payload)
	if not InputsSchema.IsSetCrouch(payload) then return end
	if not allowed(player.UserId, Events.SET_CROUCH) then return end
end)

RE_Reload.OnServerEvent:Connect(function(player, payload)
	if not InputsSchema.IsReload(payload) then return end
	if not allowed(player.UserId, Events.RELOAD) then return end
end)

print("[RB7_InputService] ✅ mit Rate-Limiter aktiv")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000801</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX295a279e91bd421d83d56ec02102a14f">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_ProfileService</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{9186b851-15e2-4501-a3da-deae448623c1}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local ProfileTypes = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("PlayerProfile"))
-- Stores liegt unter ServerScriptService/Server/Stores → vom Skript aus: script.Parent:WaitForChild("Stores")
local ProfileStore = require(script.Parent:WaitForChild("Stores"):WaitForChild("ProfileStore"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRemoteEvent(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end
local function ensureRemoteFunction(parent: Instance, name: string): RemoteFunction
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteFunction"); r.Name = name; r.Parent = parent end
	return r :: RemoteFunction
end

-- Events-Struktur
local RS = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

local RF_GetProfile = ensureRemoteFunction(EV, Events.GET_PROFILE)
local RE_ProfileUpdated = ensureRemoteEvent(EV, Events.PROFILE_UPDATED)

RF_GetProfile.OnServerInvoke = function(player)
	local prof = ProfileStore.get(player.UserId, player.Name)
	return prof
end

Players.PlayerAdded:Connect(function(plr)
	local prof = ProfileStore.get(plr.UserId, plr.Name)
	RE_ProfileUpdated:FireClient(plr, prof)
end)

print("[RB7_ProfileService] ✅ Profile RF/RE aktiv")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000802</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX8e0e2e2030d84931a1a73f2d8ce7836b">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_RoundController</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{4c9eb7a1-8d90-4a45-9f93-7620c666620e}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- RB7_RoundController: Minimaler Rundenloop mit Timer (verwendet Game-Config)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local EventsConst = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local GameConfig = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("Game"))
local Schema     = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("Events_v1"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRemoteEvent(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end

local RSShared = ensureFolder(ReplicatedStorage, "Shared")
local ERoot    = ensureFolder(RSShared, EventsConst.ROOT)
local EV       = ensureFolder(ERoot, EventsConst.VERSION)

local E_RoundStart = ensureRemoteEvent(EV, EventsConst.ROUND_START)
local E_RoundEnded = ensureRemoteEvent(EV, EventsConst.ROUND_ENDED)
local E_TimerTick  = ensureRemoteEvent(EV, EventsConst.TIMER_TICK)

local roundActive = false
local roundEndsAt = 0

local function broadcastTick(remain: number)
	local payload = { t = remain }
	if Schema.IsTimerTick(payload) then
		E_TimerTick:FireAllClients(payload)
	end
end

local function endRound()
	if not roundActive then return end
	roundActive = false
	E_RoundEnded:FireAllClients({ reason = "timeup" })
	print("[RB7_RoundController] ⏹ Runde ENDE (reason=timeup)")
end

local function startRound(duration: number?)
	if roundActive then endRound() end
	local dur = typeof(duration) == "number" and duration or GameConfig.ROUND_TIME_DEFAULT
	roundActive = true
	roundEndsAt = os.time() + dur
	E_RoundStart:FireAllClients({ duration = dur, endsAt = roundEndsAt })
	print(("[RB7_RoundController] ▶ Runde START (dauer=%ds)"):format(dur))
	task.spawn(function()
		while roundActive do
			local remain = math.max(0, roundEndsAt - os.time())
			broadcastTick(remain)
			if remain <= 0 then endRound() break end
			task.wait(1)
		end
	end)
end

local firstPlayerJoined = false
game:GetService("Players").PlayerAdded:Connect(function(_)
	if not firstPlayerJoined then
		firstPlayerJoined = true
		task.delay(2, function() startRound(GameConfig.ROUND_TIME_DEFAULT) end)
	end
end)
if #Players:GetPlayers() > 0 then
	task.delay(1, function() startRound(GameConfig.ROUND_TIME_DEFAULT) end)
end

print("[RB7_RoundController] ✅ bereit (Config-gestützt)")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000803</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX9fa5bc79cc154bcda1f4da4156abfba4">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_ServerMain</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{dd134a19-55ce-4a4c-8dc0-baf244ddd3ef}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- RB7_ServerMain: Stellt Remotes bereit und validiert eingehende Payloads
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players           = game:GetService("Players")

local Build  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Meta"):WaitForChild("Build"))
local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Schema = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("Events_v1"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRemoteEvent(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end

-- Pfad: ReplicatedStorage/Shared/Events/v1
local Shared = ensureFolder(ReplicatedStorage, "Shared")
local EventsRoot = ensureFolder(Shared, Events.ROOT)
local V = ensureFolder(EventsRoot, Events.VERSION)

local Ping = ensureRemoteEvent(V, Events.PING)

Ping.OnServerEvent:Connect(function(player: Player, payload)
	if not Schema.IsPing(payload) then
		warn(string.format("[RB7][Ping][SchemaError] Spieler=%s payload invalid", player.Name))
		return
	end
	print(string.format("[RB7][Ping] from %s ok", player.Name))
end)

print(("[RB7_ServerMain] ✅ Remotes bereit unter ReplicatedStorage/Shared/Events/%s • Build %s (Schema=%s)")
	:format(Events.VERSION, Build.Version, Build.SchemaName))
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000804</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX93455d002c874b64bb2a9af0392a0d69">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Services</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000805</UniqueId>
				</Properties>
				<Item class="Script" referent="RBX0949bc275fcb418dace832a133771d96">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">StateService</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{84d0c6e3-63dd-4f13-a466-7e09f1eac5d5}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Events  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local STypes  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("State"):WaitForChild("PlayerState"))
local StateSchema = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("State_v1"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRE(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end
local function ensureRF(parent: Instance, name: string): RemoteFunction
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteFunction"); r.Name = name; r.Parent = parent end
	return r :: RemoteFunction
end

-- Events-Struktur
local RS = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

-- Eingangs-Events (vom Client)
local RE_SetADS    = ensureRE(EV, Events.SET_ADS)
local RE_SetCrouch = ensureRE(EV, Events.SET_CROUCH)
local RE_Reload    = ensureRE(EV, Events.RELOAD)

-- State-Schnittstellen (Server -> Client, Client -> Server)
local RE_StateChanged = ensureRE(EV, Events.STATE_CHANGED)
local RF_GetState     = ensureRF(EV, Events.GET_STATE)

-- interner Cache
local cache: {[number]: any} = {}

local function getOrCreate(uid:number)
	local st = cache[uid]
	if not st then
		st = STypes.default(uid)
		cache[uid] = st
	end
	return st
end

local function syncToClient(uid:number)
	local st = cache[uid]; if not st then return end
	local payload = { userId = uid, state = st }
	if StateSchema.IsStatePayload(payload) then
		RE_StateChanged:FireAllClients(payload)
	end
end

-- RemoteFunction: Client fragt aktuellen eigenen Zustand ab
RF_GetState.OnServerInvoke = function(player)
	return getOrCreate(player.UserId)
end

-- Input-Events: Zustand setzen + syncen
RE_SetADS.OnServerEvent:Connect(function(player, payload)
	if type(payload)=="table" and type(payload.on)=="boolean" then
		local st = getOrCreate(player.UserId)
		st.ads = payload.on
		st.updatedAt = os.time()
		syncToClient(player.UserId)
	end
end)

RE_SetCrouch.OnServerEvent:Connect(function(player, payload)
	if type(payload)=="table" and type(payload.on)=="boolean" then
		local st = getOrCreate(player.UserId)
		st.crouch = payload.on
		st.updatedAt = os.time()
		syncToClient(player.UserId)
	end
end)

RE_Reload.OnServerEvent:Connect(function(player, _)
	-- Platzhalter: Hier später Munition prüfen/setzen
	local st = getOrCreate(player.UserId)
	st.updatedAt = os.time()
	syncToClient(player.UserId)
end)

-- Lifecycle
Players.PlayerAdded:Connect(function(plr)
	getOrCreate(plr.UserId)
	syncToClient(plr.UserId)
end)
Players.PlayerRemoving:Connect(function(plr)
	cache[plr.UserId] = nil
end)

print("[RB7_StateService] ✅ PlayerState aktiv (ADS/Crouch/Reload Hooks)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000806</UniqueId>
					</Properties>
				</Item>
				<Item class="Script" referent="RBX23baeae2abeb430ab3537d496961fa4c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">WeaponsService</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{15ebdf9c-5eb9-432b-afb6-56659afed43b}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Events   = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Limits   = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Limits"))
local WConfig  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Weapons"):WaitForChild("Config"))
local WSchema  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("Weapons_v1"))
local RateLimiter = require(script.Parent.Parent:WaitForChild("Lib"):WaitForChild("RateLimiter"))
local LoadoutStore = require(script.Parent.Parent:WaitForChild("Stores"):WaitForChild("LoadoutStore"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRE(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end
local function ensureRF(parent: Instance, name: string): RemoteFunction
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteFunction"); r.Name = name; r.Parent = parent end
	return r :: RemoteFunction
end

local RS     = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

local RE_Equip      = ensureRE(EV, Events.EQUIP_WEAPON)
local RE_Shoot      = ensureRE(EV, Events.SHOOT)
local RE_Reload     = ensureRE(EV, Events.RELOAD)
local RE_AmmoUp     = ensureRE(EV, Events.AMMO_UPDATE)
local RF_GetLoadout = ensureRF(EV, Events.GET_LOADOUT)

type AmmoState = { [string]: { mag:number, reserve:number } }
local ammoCache: {[number]: AmmoState} = {}
local equipped:  {[number]: string}    = {}

local function cloneAmmoState(src: AmmoState): AmmoState
	local t: AmmoState = {}
	for k,v in pairs(src) do t[k] = { mag = v.mag, reserve = v.reserve } end
	return t
end

local function initDefaults(): AmmoState
	local a:AmmoState = {}
	for name,cfg in pairs(WConfig.Weapons) do
		a[name] = { mag = cfg.magSize, reserve = cfg.reserve }
	end
	return a
end

local function initPlayer(uid:number)
	if ammoCache[uid] then return end
	local saved = require(script.Parent.Parent:WaitForChild("Stores"):WaitForChild("LoadoutStore")).get(uid)
	if typeof(saved)=="table" then
		ammoCache[uid] = {}
		local defaults = initDefaults()
		for name,cfg in pairs(WConfig.Weapons) do
			local s = (saved.ammo and saved.ammo[name]) or defaults[name]
			ammoCache[uid][name] = { mag = s.mag, reserve = s.reserve }
		end
		equipped[uid] = saved.equipped or WConfig.DefaultLoadout.Primary
	else
		ammoCache[uid] = initDefaults()
		equipped[uid] = WConfig.DefaultLoadout.Primary
	end
end

local function persist(uid:number)
	local data = { equipped = equipped[uid], ammo = ammoCache[uid] and cloneAmmoState(ammoCache[uid]) or nil }
	LoadoutStore.set(uid, data)
end

local function sendAmmo(player: Player, name:string)
	local a = ammoCache[player.UserId]
	if not a or not a[name] then return end
	local payload = { name=name, mag=a[name].mag, reserve=a[name].reserve }
	if WSchema.IsAmmoUpdate(payload) then RE_AmmoUp:FireClient(player, payload) end
end

local function allowed(uid:number, eventName:string): boolean
	local lim = Limits[eventName]
	if not lim then return true end
	return RateLimiter.check(uid, eventName, lim.cap, lim.rate)
end

RF_GetLoadout.OnServerInvoke = function(player)
	initPlayer(player.UserId)
	return { Primary = WConfig.DefaultLoadout.Primary, Secondary = WConfig.DefaultLoadout.Secondary, Equipped = equipped[player.UserId] }
end

RE_Equip.OnServerEvent:Connect(function(player, payload)
	if not WSchema.IsEquip(payload) then return end
	if not allowed(player.UserId, Events.EQUIP_WEAPON) then return end
	initPlayer(player.UserId)
	local name = payload.name
	if WConfig.Weapons[name] then
		equipped[player.UserId] = name
		sendAmmo(player, name)
		persist(player.UserId)
	end
end)

RE_Shoot.OnServerEvent:Connect(function(player, payload)
	if not WSchema.IsShoot(payload) then return end
	if not allowed(player.UserId, Events.SHOOT) then return end
	initPlayer(player.UserId)
	local name = payload.name
	local a = ammoCache[player.UserId]; if not a or not a[name] then return end
	if a[name].mag > 0 then
		a[name].mag -= 1
		sendAmmo(player, name)
		persist(player.UserId)
	end
end)

RE_Reload.OnServerEvent:Connect(function(player, _)
	if not allowed(player.UserId, Events.RELOAD) then return end
	initPlayer(player.UserId)
	local curr = equipped[player.UserId]; if not curr then return end
	local cfg = WConfig.Weapons[curr]; if not cfg then return end
	local a = ammoCache[player.UserId][curr]; if not a then return end
	local needed = cfg.magSize - a.mag
	if needed > 0 and a.reserve > 0 then
		local take = math.min(needed, a.reserve)
		a.mag += take
		a.reserve -= take
		sendAmmo(player, curr)
		persist(player.UserId)
	end
end)

Players.PlayerAdded:Connect(function(plr)
	initPlayer(plr.UserId)
	task.defer(function() sendAmmo(plr, equipped[plr.UserId]) end)
end)
Players.PlayerRemoving:Connect(function(plr)
	if ammoCache[plr.UserId] or equipped[plr.UserId] then persist(plr.UserId) end
	ammoCache[plr.UserId] = nil; equipped[plr.UserId] = nil
end)

print("[RB7_WeaponsService] ✅ aktiv (mit Rate-Limiter)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">123f7de4522a8ece08b88a68000007fd</UniqueId>
					</Properties>
				</Item>
				<Item class="Script" referent="RBX714dfc45753d4e499a910c30bb18a393">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Telemetry</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{ac57c97c-1cc1-47b5-b0b7-f74d2364fe8e}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Logger = require(script.Parent.Parent:WaitForChild("Lib"):WaitForChild("Logger"))
local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local RS = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

-- Wir hängen uns nur LESEND an RemoteEvents (keine Logikänderung)
local EVENT_NAMES = {
	Events.SET_ADS,
	Events.SET_CROUCH,
	Events.RELOAD,
	Events.EQUIP_WEAPON,
	Events.SHOOT,
}

local counters : {[string]: number} = {}
local perUser  : {[number]: {[string]: number}} = {}

local function inc(name:string, uid:number)
	counters[name] = (counters[name] or 0) + 1
	local u = perUser[uid]; if not u then u = {}; perUser[uid] = u end
	u[name] = (u[name] or 0) + 1
end

local function tryConnect(evName:string)
	local ok, inst = pcall(function() return EV:WaitForChild(evName, 1) end)
	if ok and inst and inst:IsA("RemoteEvent") then
		(inst :: RemoteEvent).OnServerEvent:Connect(function(player: Player, _payload)
			inc(evName, player.UserId)
		end)
		Logger.info("Telemetry hooked:", evName)
	else
		Logger.warn("Telemetry miss: RemoteEvent nicht gefunden:", tostring(evName))
	end
end

for _,n in ipairs(EVENT_NAMES) do
	if typeof(n)=="string" then tryConnect(n) end
end

-- alle 60s kurze Zusammenfassung (nur dev)
task.spawn(function()
	while true do
		task.wait(60)
		Logger.info("Telemetry snapshot:", counters)
	end
end)

print("[RB7_Telemetry] ✅ aktiv (RemoteEvent-Counter, read-only)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">55fe72718ef752e408b8a00a00000806</UniqueId>
					</Properties>
				</Item>
				<Item class="Script" referent="RBX1db7787f77774d6fb8040501fde6dc88">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">AdminService</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{9c397589-284f-4e2a-9411-d745cf7f095f}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Env    = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("Env"))
local Build  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Meta"):WaitForChild("Build"))
local Admins = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("Admins"))

local START = os.clock()

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRF(parent: Instance, name: string): RemoteFunction
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteFunction"); r.Name = name; r.Parent = parent end
	return r :: RemoteFunction
end

local RS     = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

local RF_GetServerStats = ensureRF(EV, Events.GET_SERVER_STATS)

local lastCall:{[number]:number} = {}

local function makeStats()
	local players = #Players:GetPlayers()
	local uptime  = math.floor(os.clock() - START)
	return {
		env     = Env.NAME,
		build   = Build.Version,
		players = players,
		uptime  = uptime,
	}
end

RF_GetServerStats.OnServerInvoke = function(player)
	if not Admins.isAdmin(player.UserId, player.Name) then
		return { ok=false, error="forbidden" }
	end
	local now = os.clock()
	local prev = lastCall[player.UserId] or 0
	if now - prev < 3 then
		return { ok=false, error="rate_limited" }
	end
	lastCall[player.UserId] = now
	return { ok=true, data=makeStats() }
end

print("[RB7_AdminService] ✅ GetServerStats aktiv (RBAC + RateLimit)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7653e669c6135c0008b8a0c60000080c</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXd1af6a67707f4d978fb479e6fea7a746">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Stores</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000807</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX2355644b9ed647cea8757eeb288e4593">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DataStoreAdapter</string>
						<string name="ScriptGuid">{161aa0ae-0939-45d3-a616-352bb916942e}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local RunService = game:GetService("RunService")
local DataStoreService = game:GetService("DataStoreService")
local inStudio = RunService:IsStudio()
local Store = {}
local mem:any = {}

function Store.getStore(name:string)
	if inStudio then
		mem[name] = mem[name] or {}
		local ns = mem[name]
		return {
			GetAsync = function(_, key:string) return ns[key] end,
			SetAsync = function(_, key:string, value:any) ns[key]=value return true end,
		}
	else
		local ds = DataStoreService:GetDataStore(name)
		return {
			GetAsync = function(_, key:string) return ds:GetAsync(key) end,
			SetAsync = function(_, key:string, value:any) return ds:SetAsync(key, value) end,
		}
	end
end

return Store
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000808</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXfa7d6d51d5e2452f94a4eac580d57d88">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ProfileStore</string>
						<string name="ScriptGuid">{24252480-bc94-4e51-a7ac-01e6a54753bb}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local DataStore = require(script.Parent:WaitForChild("DataStoreAdapter"))
local ProfileTypes = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("PlayerProfile"))

local store = DataStore.getStore("RB7_PlayerProfiles")
local cache:{[number]:ProfileTypes.Profile} = {}

local ProfileStore = {}

function ProfileStore.get(userId:number, name:string?): ProfileTypes.Profile
	local p = cache[userId]
	if p then return p end
	local key = tostring(userId)
	local data = store:GetAsync(key)
	if typeof(data)=="table" and data.userId == userId then
		cache[userId]=data; return data
	end
	local fresh = ProfileTypes.default(userId, name or ("User"..userId))
	cache[userId]=fresh
	store:SetAsync(key, fresh)
	return fresh
end

function ProfileStore.save(userId:number)
	local p = cache[userId]; if not p then return end
	p.updatedAt = os.time()
	store:SetAsync(tostring(userId), p)
end

function ProfileStore.addXp(userId:number, amount:number)
	local p = ProfileStore.get(userId)
	p.xp = math.max(0, (p.xp or 0) + amount)
	ProfileStore.save(userId)
	return p
end

Players.PlayerRemoving:Connect(function(plr)
	ProfileStore.save(plr.UserId)
end)

return ProfileStore
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000809</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX77ca1494346a43cca210447cc439dac9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">LoadoutStore</string>
						<string name="ScriptGuid">{38ce326a-b949-4730-a533-fc4f490bc41f}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local DataStoreService = game:GetService("DataStoreService")
local RunService = game:GetService("RunService")
local inStudio = RunService:IsStudio()

local Adapter = require(script.Parent:WaitForChild("DataStoreAdapter"))

export type SaveData = {
	equipped: string?,
	ammo: { [string]: { mag:number, reserve:number } }?,
}

local Store = {}
local ds = Adapter.getStore("RB7_LoadoutAmmo")

function Store.get(userId:number): SaveData?
	local key = tostring(userId)
	local ok, result = pcall(function() return ds:GetAsync(key) end)
	if ok then return result else warn("[LoadoutStore:Get] "..tostring(result)); return nil end
end

function Store.set(userId:number, data:SaveData)
	local key = tostring(userId)
	local ok, err = pcall(function() return ds:SetAsync(key, data) end)
	if not ok then warn("[LoadoutStore:Set] "..tostring(err)) end
end

return Store
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">123f7de4522a8ece08b88a68000007fb</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX4a40b71baee440ac8de76c44f26db304">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Lib</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">351135725177085308b89db600000801</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBXef04e4a80e844b9a985cbdc1d9f709ae">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RateLimiter</string>
						<string name="ScriptGuid">{37aa457b-23c8-49ac-b539-c2e3bcd4b6e8}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- Einfacher Token-Bucket pro (userId,key)
local RateLimiter = {}
local buckets:{[number]:{[string]:{t:number,tokens:number}}} = {}

local function refill(b:{t:number,tokens:number}, now:number, rate:number, cap:number)
	local elapsed = math.max(0, now - b.t)
	b.tokens = math.min(cap, b.tokens + elapsed * rate)
	b.t = now
end

function RateLimiter.check(userId:number, key:string, cap:number, rate:number): boolean
	local u = buckets[userId]; if not u then u = {}; buckets[userId] = u end
	local b = u[key]; local now = os.clock()
	if not b then b = { t = now, tokens = cap }; u[key] = b end
	refill(b, now, rate, cap)
	if b.tokens >= 1 then b.tokens -= 1; return true end
	return false
end

return RateLimiter
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">351135725177085308b89db600000802</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX4c5d72f32be044948b0a870f91ac24ea">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Logger</string>
						<string name="ScriptGuid">{c4023b3e-242a-48fb-80c8-da7ba5930dc5}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Env = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("Env"))
local Logger = {}
local function tag(l) return ("[RB7][%s] "):format(l) end
function Logger.info(...) if Env.NAME=="dev" then print(tag("INFO"), ...) end end
function Logger.warn(...) warn(tag("WARN"), ...) end
function Logger.err(...) warn(tag("ERR"), ...) end
return Logger
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">55fe72718ef752e408b8a00a00000803</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBXcd1c46b65b464251b21dfcf2896ef70f">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">R6V_TimerPublisher</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{a7d1e7de-1116-449a-8f09-abd7c842fa18}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- R6V_TimerPublisher.server.lua
-- Robuster Runden-Timer Publisher (ersetzt fehlerhafte Zuweisungen wie "RoundTime: 300")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService        = game:GetService("RunService")

-- Fallback-Konfiguration
local ROUND_TIME_SECONDS: number = 300

-- Optional: GameConfig laden, falls vorhanden
do
	local Modules = ReplicatedStorage:FindFirstChild("Modules")
	if Modules and Modules:FindFirstChild("Shared") then
		local Config = Modules.Shared:FindFirstChild("Config")
		if Config and Config:FindFirstChild("GameConfig") and Config.GameConfig:IsA("ModuleScript") then
			local ok, cfg = pcall(require, Config.GameConfig)
			if ok and type(cfg) == "table" and tonumber(cfg.RoundTime) then
				ROUND_TIME_SECONDS = tonumber(cfg.RoundTime) :: number
			end
		end
	end
end

-- Events/v1 Pfad sicherstellen
local Events = ReplicatedStorage:FindFirstChild("Events")
if not Events then
	Events = Instance.new("Folder")
	Events.Name = "Events"
	Events.Parent = ReplicatedStorage
end

local v1 = Events:FindFirstChild("v1")
if not v1 then
	v1 = Instance.new("Folder")
	v1.Name = "v1"
	v1.Parent = Events
end

local RoundTimeUpdated = v1:FindFirstChild("RoundTimeUpdated")
if not RoundTimeUpdated then
	RoundTimeUpdated = Instance.new("RemoteEvent")
	RoundTimeUpdated.Name = "RoundTimeUpdated"
	RoundTimeUpdated.Parent = v1
end

-- Timer-Logik
local startClock = os.clock()
local lastSent = -1

local function getRemainingSeconds(): number
	local elapsed = os.clock() - startClock
	local remaining = ROUND_TIME_SECONDS - math.floor(elapsed)
	if remaining < 0 then remaining = 0 end
	return remaining
end

-- Initial push
RoundTimeUpdated:FireAllClients(getRemainingSeconds())

-- Herzschlag: nur senden, wenn sich der Sekundenwert ändert
RunService.Heartbeat:Connect(function()
	local remaining = getRemainingSeconds()
	if remaining ~= lastSent then
		lastSent = remaining
		RoundTimeUpdated:FireAllClients(remaining)
		if remaining == 0 then
			-- Hier könnte man eine neue Runde triggern o. Ä.
		end
	end
end)

print(("[R6V_TimerPublisher] ✅ läuft. RoundTime=%d s"):format(ROUND_TIME_SECONDS))
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">4d82c8a0b9b0644408b8a0ef0000080c</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXa152d538b3234d1985d18d1ed1dfc7cf">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">R6V_UnlocksManager</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{f5e7bc50-3521-4166-b36b-397389f91862}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- R6V_UnlocksManager.server.lua
-- Robuste Unlock-Verwaltung (verhindert nil calls, validiert Eingaben)
local Players            = game:GetService("Players")
local ReplicatedStorage  = game:GetService("ReplicatedStorage")

-- ===== Events/v1 sichern =====
local Events = ReplicatedStorage:FindFirstChild("Events")
if not Events then
	Events = Instance.new("Folder")
	Events.Name = "Events"
	Events.Parent = ReplicatedStorage
end

local v1 = Events:FindFirstChild("v1")
if not v1 then
	v1 = Instance.new("Folder")
	v1.Name = "v1"
	v1.Parent = Events
end

local UnlocksChanged = v1:FindFirstChild("UnlocksChanged")
if not UnlocksChanged then
	UnlocksChanged = Instance.new("RemoteEvent")
	UnlocksChanged.Name = "UnlocksChanged"
	UnlocksChanged.Parent = v1
end

local GetUnlocks = v1:FindFirstChild("GetUnlocks")
if not GetUnlocks then
	GetUnlocks = Instance.new("RemoteFunction")
	GetUnlocks.Name = "GetUnlocks"
	GetUnlocks.Parent = v1
end

-- ===== Datenhaltung =====
type UnlockState = { [string]: boolean }
local PlayerUnlocks: { [number]: UnlockState } = {}

local function getState(userId: number): UnlockState
	PlayerUnlocks[userId] = PlayerUnlocks[userId] or {}
	return PlayerUnlocks[userId]
end

local function setUnlocked(userId: number, key: string, value: boolean)
	local state = getState(userId)
	state[key] = value
end

local function tableClone(t: UnlockState): UnlockState
	local out: UnlockState = {}
	for k,v in pairs(t) do out[k] = v end
	return out
end

-- ===== API (Server-seitig) =====
local function validateKey(key: any): (boolean, string?)
	if typeof(key) ~= "string" or #key == 0 or #key > 64 then
		return false, "bad_key"
	end
	return true, nil
end

local function validateBool(b: any): (boolean, string?)
	if typeof(b) ~= "boolean" then
		return false, "bad_value"
	end
	return true, nil
end

-- Clients können ihren aktuellen Stand abrufen
GetUnlocks.OnServerInvoke = function(player: Player)
	local ok, result = pcall(function()
		return tableClone(getState(player.UserId))
	end)
	if ok then return result end
	warn("[R6V_UnlocksManager] GetUnlocks pcall fail:", result)
	return {}
end

-- Serverseitige Setter-API (z. B. aus GameLogic/Rewards aufrufen)
local function SafeSet(player: Player, key: string, value: boolean)
	local ok1, err1 = validateKey(key)
	if not ok1 then return false, err1 end
	local ok2, err2 = validateBool(value)
	if not ok2 then return false, err2 end

	local ok, err = pcall(function()
		setUnlocked(player.UserId, key, value)
		UnlocksChanged:FireClient(player, key, value)
	end)
	if not ok then
		warn("[R6V_UnlocksManager] SafeSet pcall fail:", err)
		return false, "set_failed"
	end
	return true, nil
end

-- Beispiel-Hooks (optional): gewähre Basis-Unlocks beim Join
Players.PlayerAdded:Connect(function(plr)
	local state = getState(plr.UserId)
	-- Initial Defaults (nur wenn leer)
	if next(state) == nil then
		state["Loadout/Primary/Default"] = true
		state["Loadout/Secondary/Default"] = true
	end
	-- Client initial informieren
	task.defer(function()
		for k,v in pairs(state) do
			UnlocksChanged:FireClient(plr, k, v)
		end
	end)
end)

Players.PlayerRemoving:Connect(function(plr)
	PlayerUnlocks[plr.UserId] = nil
end)

-- ===== Exporte für andere ServerScripts =====
local Module = {}
function Module.Get(player: Player): UnlockState
	return tableClone(getState(player.UserId))
end
function Module.Set(player: Player, key: string, value: boolean): boolean
	local ok = SafeSet(player, key, value)
	return ok and true or false
end
function Module.Grant(player: Player, key: string): boolean
	return Module.Set(player, key, true)
end
function Module.Revoke(player: Player, key: string): boolean
	return Module.Set(player, key, false)
end

print("[R6V_UnlocksManager] ✅ bereit.")
return Module
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">4d82c8a0b9b0644408b8a0ef0000080f</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXcb99bd2d97a8461aa2c360c0c2d5e8b6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_EventsEnsure</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{f22e9e10-ec64-494b-a96b-058a522c68fa}</string>
					<ProtectedString name="Source"><![CDATA[-- RB7_EventsEnsure: vereinheitlicht Remotes unter ReplicatedStorage/Shared/Events/v1
local RS = game:GetService("ReplicatedStorage")

local function ensureFolder(parent, name)
    local f = parent:FindFirstChild(name)
    if not f then
        f = Instance.new("Folder")
        f.Name = name
        f.Parent = parent
    end
    return f
end

local Shared  = ensureFolder(RS, "Shared")
local Events  = ensureFolder(Shared, "Events")
local V1      = ensureFolder(Events, "v1")

local function ensureRemoteEvent(parent, name)
    local ev = parent:FindFirstChild(name)
    if not ev then
        ev = Instance.new("RemoteEvent")
        ev.Name = name
        ev.Parent = parent
    end
    return ev
end

local function ensureRemoteFunction(parent, name)
    local rf = parent:FindFirstChild(name)
    if not rf then
        rf = Instance.new("RemoteFunction")
        rf.Name = name
        rf.Parent = parent
    end
    return rf
end

-- Kern-Remotes, die UI/Services erwarten
local neededEvents = {
    "OpenMenu",
    "RoundTimerTick",
    "ReloadEvent",
    "EquipWeapon",
    "ShootEvent",
}
for _,n in ipairs(neededEvents) do
    ensureRemoteEvent(V1, n)
end

-- Migration: falls noch altes 'ReplicatedStorage/Events/v1' existiert → Kinder nach Shared/Events/v1 verschieben
do
    local oldRoot = RS:FindFirstChild("Events")
    if oldRoot and oldRoot:FindFirstChild("v1") then
        local oldV1 = oldRoot.v1
        for _,child in ipairs(oldV1:GetChildren()) do
            if not V1:FindFirstChild(child.Name) then
                child.Parent = V1
            end
        end
        -- optional: alten Knoten bereinigen
        oldRoot:Destroy()
    end
end

print("[RB7_EventsEnsure] ✅ Remotes unter ReplicatedStorage/Shared/Events/v1 vereinheitlicht")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">4d82c8a0b9b0644408b8a0ef00000918</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX1ec3f6f330a8469a9a4c298ff00c448b">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">R6V_RoundController</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{a39b8447-80c2-4161-9a07-c64ca4037d8a}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- R6V_RoundController.server.lua
-- Zustandsmaschine für Lobby/Countdown/In-Round/Post-Round
-- Stellt fehlende Funktionen setState / markPlayerReady bereit und sichert Events.

local Players            = game:GetService("Players")
local ReplicatedStorage  = game:GetService("ReplicatedStorage")
local RunService         = game:GetService("RunService")

-- ==== Konfig (Fallback, kann via Modules.Shared.Config.GameConfig überschrieben werden) ====
local CFG = {
	RoundTime = 300,      -- Sekunden
	TargetScore = 25,
	RespawnTime = 5,
	FriendlyFire = false,
	MinReadyToStart = 1,  -- Mindestanzahl "Ready"-Spieler zum Starten
	Countdown = 3         -- Sekunden Lobby -> InRound
}

do
	local Modules = ReplicatedStorage:FindFirstChild("Modules")
	if Modules and Modules:FindFirstChild("Shared") then
		local Config = Modules.Shared:FindFirstChild("Config")
		if Config and Config:FindFirstChild("GameConfig") and Config.GameConfig:IsA("ModuleScript") then
			local ok, userCfg = pcall(require, Config.GameConfig)
			if ok and type(userCfg) == "table" then
				for k,v in pairs(userCfg) do CFG[k] = v end
			end
		end
	end
end

-- ==== Events/v1 sichern ====
local function ensureFolder(parent: Instance, name: string): Instance
	local f = parent:FindFirstChild(name)
	if not f then
		f = Instance.new("Folder")
		f.Name = name
		f.Parent = parent
	end
	return f
end

local function ensureRemoteEvent(parent: Instance, name: string): RemoteEvent
	local ev = parent:FindFirstChild(name)
	if not ev then
		ev = Instance.new("RemoteEvent")
		ev.Name = name
		ev.Parent = parent
	end
	return ev :: RemoteEvent
end

local function ensureRemoteFunction(parent: Instance, name: string): RemoteFunction
	local rf = parent:FindFirstChild(name)
	if not rf then
		rf = Instance.new("RemoteFunction")
		rf.Name = name
		rf.Parent = parent
	end
	return rf :: RemoteFunction
end

local Events = ensureFolder(ReplicatedStorage, "Events")
local v1     = ensureFolder(Events, "v1")

local RequestReadyToggle  = ensureRemoteEvent(v1, "RequestReadyToggle")   -- Client -> Server: ready toggeln
local PlayerReadyChanged  = ensureRemoteEvent(v1, "PlayerReadyChanged")   -- Server -> Client: ready eines Spielers
local RoundStateChanged   = ensureRemoteEvent(v1, "RoundStateChanged")    -- Server -> Client: neuer RoundState
local RequestStartRound   = ensureRemoteEvent(v1, "RequestStartRound")    -- (optional) Client -> Server: Startwunsch
local GetRoundState       = ensureRemoteFunction(v1, "GetRoundState")     -- Client -> Server: aktuellen State abfragen

-- ==== interner Zustand ====
export type RoundStateT = "LOBBY" | "COUNTDOWN" | "IN_ROUND" | "POST_ROUND"
local RoundState: RoundStateT = "LOBBY"
local RoundStartedAt: number = 0
local Ready: { [number]: boolean } = {}        -- userId -> ready?
local Score: { [number]: number } = {}         -- userId -> score (Beispiel)

-- ==== Hilfen ====
local function broadcastReady(plr: Player, val: boolean)
	PlayerReadyChanged:FireAllClients(plr.UserId, val)
end

local function everyoneReadyCount(): number
	local n = 0
	for _,plr in ipairs(Players:GetPlayers()) do
		if Ready[plr.UserId] then n += 1 end
	end
	return n
end

local function secondsSince(t0: number): number
	return os.clock() - t0
end

-- ==== API: setState / markPlayerReady (die vorher fehlten) ====
local function setState(nextState: RoundStateT)
	if RoundState == nextState then return end
	RoundState = nextState
	RoundStateChanged:FireAllClients(RoundState)
	print(("[R6V_RoundController][STATE] ➜ %s"):format(RoundState))

	if RoundState == "COUNTDOWN" then
		task.spawn(function()
			for i = CFG.Countdown,1,-1 do
				print(("[R6V_RC][COUNTDOWN] %d"):format(i))
				task.wait(1)
				-- Falls während Countdown die Voraussetzungen wegfallen, abbrechen:
				if everyoneReadyCount() < math.max(CFG.MinReadyToStart, 1) then
					print("[R6V_RC] ❌ Countdown abgebrochen (zu wenige Ready).")
					setState("LOBBY")
					return
				end
			end
			setState("IN_ROUND")
		end)
	elseif RoundState == "IN_ROUND" then
		RoundStartedAt = os.clock()
		task.spawn(function()
			while RoundState == "IN_ROUND" do
				local elapsed = secondsSince(RoundStartedAt)
				if elapsed >= CFG.RoundTime then
					print("[R6V_RC] ⏱️ RoundTime abgelaufen.")
					setState("POST_ROUND")
					break
				end
				task.wait(0.25)
			end
		end)
	elseif RoundState == "POST_ROUND" then
		-- Kurze Auswertung / Reset
		task.delay(3, function()
			-- Reset:
			for uid,_ in pairs(Ready) do Ready[uid] = false end
			for uid,_ in pairs(Score) do Score[uid] = 0 end
			for _,plr in ipairs(Players:GetPlayers()) do
				broadcastReady(plr, false)
			end
			setState("LOBBY")
		end)
	end
end

local function markPlayerReady(plr: Player, isReady: boolean)
	Ready[plr.UserId] = isReady and true or false
	broadcastReady(plr, Ready[plr.UserId])
	print(("[R6V_RoundController] ▶ %s ready=%s"):format(plr.Name, tostring(Ready[plr.UserId])))

	-- Auto-Start-Logik: Wenn genug Spieler ready, in Countdown wechseln:
	if RoundState == "LOBBY" and everyoneReadyCount() >= math.max(CFG.MinReadyToStart, 1) then
		setState("COUNTDOWN")
	end
end

-- ==== Remote-Bindings ====
RequestReadyToggle.OnServerEvent:Connect(function(plr: Player, want: any?)
	-- nur bool oder nil (toggle)
	local wantBool: boolean
	if typeof(want) == "boolean" then
		wantBool = want
	else
		wantBool = not (Ready[plr.UserId] == true)
	end
	markPlayerReady(plr, wantBool)
end)

RequestStartRound.OnServerEvent:Connect(function(plr: Player)
	-- Nur in LOBBY erlaubt und wenn genug Ready
	if RoundState == "LOBBY" and everyoneReadyCount() >= math.max(CFG.MinReadyToStart, 1) then
		setState("COUNTDOWN")
	end
end)

GetRoundState.OnServerInvoke = function(_plr: Player)
	return RoundState
end

-- ==== Player-Lifecycle ====
Players.PlayerAdded:Connect(function(plr)
	Ready[plr.UserId] = false
	Score[plr.UserId] = 0
	broadcastReady(plr, false)
end)

Players.PlayerRemoving:Connect(function(plr)
	Ready[plr.UserId] = nil
	Score[plr.UserId] = nil
	-- Falls LOBBY und jetzt zu wenige ready ➜ bleibt einfach LOBBY.
end)

-- ==== Boot-Log ====
print(("R6V_RoundController bereit: RoundTime=%d, TargetScore=%d, Respawn=%d, FF=%s")
	:format(CFG.RoundTime, CFG.TargetScore, CFG.RespawnTime, tostring(CFG.FriendlyFire)))
print("[R6V_RC] ✅ Events-Ordner gefunden")
print("[R6V_RC] ✅ RequestReadyToggle gefunden")

-- Falls jemand anders setState/markPlayerReady erwartet:
_G.R6V_RoundController = {
	setState = setState,
	markPlayerReady = markPlayerReady
}

-- Start in LOBBY
setState("LOBBY")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7a5c6b4348e26bae08b8abf200000881</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXf8277c4c9bf74c54a6fdd63da0e34bcb">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Server</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{91756e59-7cc2-4365-b912-03cce6f4549b}</string>
				<ProtectedString name="Source"><![CDATA[-- server
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009a2</UniqueId>
			</Properties>
			<Item class="Script" referent="RBX0c11dc0b22ae47948b7af6faea8900d6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Init</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{8c643fd5-b22b-4bbf-aba0-2e8a425660f1}</string>
					<ProtectedString name="Source"><![CDATA[-- server
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009a3</UniqueId>
				</Properties>
			</Item>
			<Item class="StringValue" referent="RBX171674fcf21644bd92e0a736712fb546">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">KEEP</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009a4</UniqueId>
					<string name="Value"><![CDATA[KEEP SERVER
]]></string>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX159b1b5adf164f13b9cca47ad04e10e2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Lib</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009a5</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX020aa20ef77e40e7ada8f64f38b39f4d">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Logger</string>
						<string name="ScriptGuid">{fc4e206c-24f3-4df7-b4bd-e70bf0085404}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Env = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("Env"))
local Logger = {}
local function tag(l) return ("[RB7][%s] "):format(l) end
function Logger.info(...) if Env.NAME=="dev" then print(tag("INFO"), ...) end end
function Logger.warn(...) warn(tag("WARN"), ...) end
function Logger.err(...) warn(tag("ERR"), ...) end
return Logger
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009a6</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX143314aa0b76440db848524a9d2c9ef0">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RateLimiter</string>
						<string name="ScriptGuid">{0236e010-e687-4db6-bab3-8537b7a21eef}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- Einfacher Token-Bucket pro (userId,key)
local RateLimiter = {}
local buckets:{[number]:{[string]:{t:number,tokens:number}}} = {}

local function refill(b:{t:number,tokens:number}, now:number, rate:number, cap:number)
	local elapsed = math.max(0, now - b.t)
	b.tokens = math.min(cap, b.tokens + elapsed * rate)
	b.t = now
end

function RateLimiter.check(userId:number, key:string, cap:number, rate:number): boolean
	local u = buckets[userId]; if not u then u = {}; buckets[userId] = u end
	local b = u[key]; local now = os.clock()
	if not b then b = { t = now, tokens = cap }; u[key] = b end
	refill(b, now, rate, cap)
	if b.tokens >= 1 then b.tokens -= 1; return true end
	return false
end

return RateLimiter
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009a7</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX3c824ee2c4974056a98bff144068a836">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">R6V_RoundController</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{fe57fd12-a0c5-4c39-8e29-99fb4228e746}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- R6V_RoundController.server.lua
-- Zustandsmaschine für Lobby/Countdown/In-Round/Post-Round
-- Stellt fehlende Funktionen setState / markPlayerReady bereit und sichert Events.

local Players            = game:GetService("Players")
local ReplicatedStorage  = game:GetService("ReplicatedStorage")
local RunService         = game:GetService("RunService")

-- ==== Konfig (Fallback, kann via Modules.Shared.Config.GameConfig überschrieben werden) ====
local CFG = {
	RoundTime = 300,      -- Sekunden
	TargetScore = 25,
	RespawnTime = 5,
	FriendlyFire = false,
	MinReadyToStart = 1,  -- Mindestanzahl "Ready"-Spieler zum Starten
	Countdown = 3         -- Sekunden Lobby -> InRound
}

do
	local Modules = ReplicatedStorage:FindFirstChild("Modules")
	if Modules and Modules:FindFirstChild("Shared") then
		local Config = Modules.Shared:FindFirstChild("Config")
		if Config and Config:FindFirstChild("GameConfig") and Config.GameConfig:IsA("ModuleScript") then
			local ok, userCfg = pcall(require, Config.GameConfig)
			if ok and type(userCfg) == "table" then
				for k,v in pairs(userCfg) do CFG[k] = v end
			end
		end
	end
end

-- ==== Events/v1 sichern ====
local function ensureFolder(parent: Instance, name: string): Instance
	local f = parent:FindFirstChild(name)
	if not f then
		f = Instance.new("Folder")
		f.Name = name
		f.Parent = parent
	end
	return f
end

local function ensureRemoteEvent(parent: Instance, name: string): RemoteEvent
	local ev = parent:FindFirstChild(name)
	if not ev then
		ev = Instance.new("RemoteEvent")
		ev.Name = name
		ev.Parent = parent
	end
	return ev :: RemoteEvent
end

local function ensureRemoteFunction(parent: Instance, name: string): RemoteFunction
	local rf = parent:FindFirstChild(name)
	if not rf then
		rf = Instance.new("RemoteFunction")
		rf.Name = name
		rf.Parent = parent
	end
	return rf :: RemoteFunction
end

local Events = ensureFolder(ReplicatedStorage, "Events")
local v1     = ensureFolder(Events, "v1")

local RequestReadyToggle  = ensureRemoteEvent(v1, "RequestReadyToggle")   -- Client -> Server: ready toggeln
local PlayerReadyChanged  = ensureRemoteEvent(v1, "PlayerReadyChanged")   -- Server -> Client: ready eines Spielers
local RoundStateChanged   = ensureRemoteEvent(v1, "RoundStateChanged")    -- Server -> Client: neuer RoundState
local RequestStartRound   = ensureRemoteEvent(v1, "RequestStartRound")    -- (optional) Client -> Server: Startwunsch
local GetRoundState       = ensureRemoteFunction(v1, "GetRoundState")     -- Client -> Server: aktuellen State abfragen

-- ==== interner Zustand ====
export type RoundStateT = "LOBBY" | "COUNTDOWN" | "IN_ROUND" | "POST_ROUND"
local RoundState: RoundStateT = "LOBBY"
local RoundStartedAt: number = 0
local Ready: { [number]: boolean } = {}        -- userId -> ready?
local Score: { [number]: number } = {}         -- userId -> score (Beispiel)

-- ==== Hilfen ====
local function broadcastReady(plr: Player, val: boolean)
	PlayerReadyChanged:FireAllClients(plr.UserId, val)
end

local function everyoneReadyCount(): number
	local n = 0
	for _,plr in ipairs(Players:GetPlayers()) do
		if Ready[plr.UserId] then n += 1 end
	end
	return n
end

local function secondsSince(t0: number): number
	return os.clock() - t0
end

-- ==== API: setState / markPlayerReady (die vorher fehlten) ====
local function setState(nextState: RoundStateT)
	if RoundState == nextState then return end
	RoundState = nextState
	RoundStateChanged:FireAllClients(RoundState)
	print(("[R6V_RoundController][STATE] ➜ %s"):format(RoundState))

	if RoundState == "COUNTDOWN" then
		task.spawn(function()
			for i = CFG.Countdown,1,-1 do
				print(("[R6V_RC][COUNTDOWN] %d"):format(i))
				task.wait(1)
				-- Falls während Countdown die Voraussetzungen wegfallen, abbrechen:
				if everyoneReadyCount() < math.max(CFG.MinReadyToStart, 1) then
					print("[R6V_RC] ❌ Countdown abgebrochen (zu wenige Ready).")
					setState("LOBBY")
					return
				end
			end
			setState("IN_ROUND")
		end)
	elseif RoundState == "IN_ROUND" then
		RoundStartedAt = os.clock()
		task.spawn(function()
			while RoundState == "IN_ROUND" do
				local elapsed = secondsSince(RoundStartedAt)
				if elapsed >= CFG.RoundTime then
					print("[R6V_RC] ⏱️ RoundTime abgelaufen.")
					setState("POST_ROUND")
					break
				end
				task.wait(0.25)
			end
		end)
	elseif RoundState == "POST_ROUND" then
		-- Kurze Auswertung / Reset
		task.delay(3, function()
			-- Reset:
			for uid,_ in pairs(Ready) do Ready[uid] = false end
			for uid,_ in pairs(Score) do Score[uid] = 0 end
			for _,plr in ipairs(Players:GetPlayers()) do
				broadcastReady(plr, false)
			end
			setState("LOBBY")
		end)
	end
end

local function markPlayerReady(plr: Player, isReady: boolean)
	Ready[plr.UserId] = isReady and true or false
	broadcastReady(plr, Ready[plr.UserId])
	print(("[R6V_RoundController] ▶ %s ready=%s"):format(plr.Name, tostring(Ready[plr.UserId])))

	-- Auto-Start-Logik: Wenn genug Spieler ready, in Countdown wechseln:
	if RoundState == "LOBBY" and everyoneReadyCount() >= math.max(CFG.MinReadyToStart, 1) then
		setState("COUNTDOWN")
	end
end

-- ==== Remote-Bindings ====
RequestReadyToggle.OnServerEvent:Connect(function(plr: Player, want: any?)
	-- nur bool oder nil (toggle)
	local wantBool: boolean
	if typeof(want) == "boolean" then
		wantBool = want
	else
		wantBool = not (Ready[plr.UserId] == true)
	end
	markPlayerReady(plr, wantBool)
end)

RequestStartRound.OnServerEvent:Connect(function(plr: Player)
	-- Nur in LOBBY erlaubt und wenn genug Ready
	if RoundState == "LOBBY" and everyoneReadyCount() >= math.max(CFG.MinReadyToStart, 1) then
		setState("COUNTDOWN")
	end
end)

GetRoundState.OnServerInvoke = function(_plr: Player)
	return RoundState
end

-- ==== Player-Lifecycle ====
Players.PlayerAdded:Connect(function(plr)
	Ready[plr.UserId] = false
	Score[plr.UserId] = 0
	broadcastReady(plr, false)
end)

Players.PlayerRemoving:Connect(function(plr)
	Ready[plr.UserId] = nil
	Score[plr.UserId] = nil
	-- Falls LOBBY und jetzt zu wenige ready ➜ bleibt einfach LOBBY.
end)

-- ==== Boot-Log ====
print(("R6V_RoundController bereit: RoundTime=%d, TargetScore=%d, Respawn=%d, FF=%s")
	:format(CFG.RoundTime, CFG.TargetScore, CFG.RespawnTime, tostring(CFG.FriendlyFire)))
print("[R6V_RC] ✅ Events-Ordner gefunden")
print("[R6V_RC] ✅ RequestReadyToggle gefunden")

-- Falls jemand anders setState/markPlayerReady erwartet:
_G.R6V_RoundController = {
	setState = setState,
	markPlayerReady = markPlayerReady
}

-- Start in LOBBY
setState("LOBBY")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009a8</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXf991598ee7404d50926a5b13a7d231e6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">R6V_TimerPublisher</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{187d2b10-5e10-4785-9ace-5fce0805a7bd}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- R6V_TimerPublisher.server.lua
-- Robuster Runden-Timer Publisher (ersetzt fehlerhafte Zuweisungen wie "RoundTime: 300")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService        = game:GetService("RunService")

-- Fallback-Konfiguration
local ROUND_TIME_SECONDS: number = 300

-- Optional: GameConfig laden, falls vorhanden
do
	local Modules = ReplicatedStorage:FindFirstChild("Modules")
	if Modules and Modules:FindFirstChild("Shared") then
		local Config = Modules.Shared:FindFirstChild("Config")
		if Config and Config:FindFirstChild("GameConfig") and Config.GameConfig:IsA("ModuleScript") then
			local ok, cfg = pcall(require, Config.GameConfig)
			if ok and type(cfg) == "table" and tonumber(cfg.RoundTime) then
				ROUND_TIME_SECONDS = tonumber(cfg.RoundTime) :: number
			end
		end
	end
end

-- Events/v1 Pfad sicherstellen
local Events = ReplicatedStorage:FindFirstChild("Events")
if not Events then
	Events = Instance.new("Folder")
	Events.Name = "Events"
	Events.Parent = ReplicatedStorage
end

local v1 = Events:FindFirstChild("v1")
if not v1 then
	v1 = Instance.new("Folder")
	v1.Name = "v1"
	v1.Parent = Events
end

local RoundTimeUpdated = v1:FindFirstChild("RoundTimeUpdated")
if not RoundTimeUpdated then
	RoundTimeUpdated = Instance.new("RemoteEvent")
	RoundTimeUpdated.Name = "RoundTimeUpdated"
	RoundTimeUpdated.Parent = v1
end

-- Timer-Logik
local startClock = os.clock()
local lastSent = -1

local function getRemainingSeconds(): number
	local elapsed = os.clock() - startClock
	local remaining = ROUND_TIME_SECONDS - math.floor(elapsed)
	if remaining < 0 then remaining = 0 end
	return remaining
end

-- Initial push
RoundTimeUpdated:FireAllClients(getRemainingSeconds())

-- Herzschlag: nur senden, wenn sich der Sekundenwert ändert
RunService.Heartbeat:Connect(function()
	local remaining = getRemainingSeconds()
	if remaining ~= lastSent then
		lastSent = remaining
		RoundTimeUpdated:FireAllClients(remaining)
		if remaining == 0 then
			-- Hier könnte man eine neue Runde triggern o. Ä.
		end
	end
end)

print(("[R6V_TimerPublisher] ✅ läuft. RoundTime=%d s"):format(ROUND_TIME_SECONDS))
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009a9</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX8fc19130e0194e82b04e2847847c90cb">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">R6V_UnlocksManager</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{b2fe6437-e151-4987-afc9-527cc55dd4c1}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- R6V_UnlocksManager.server.lua
-- Robuste Unlock-Verwaltung (verhindert nil calls, validiert Eingaben)
local Players            = game:GetService("Players")
local ReplicatedStorage  = game:GetService("ReplicatedStorage")

-- ===== Events/v1 sichern =====
local Events = ReplicatedStorage:FindFirstChild("Events")
if not Events then
	Events = Instance.new("Folder")
	Events.Name = "Events"
	Events.Parent = ReplicatedStorage
end

local v1 = Events:FindFirstChild("v1")
if not v1 then
	v1 = Instance.new("Folder")
	v1.Name = "v1"
	v1.Parent = Events
end

local UnlocksChanged = v1:FindFirstChild("UnlocksChanged")
if not UnlocksChanged then
	UnlocksChanged = Instance.new("RemoteEvent")
	UnlocksChanged.Name = "UnlocksChanged"
	UnlocksChanged.Parent = v1
end

local GetUnlocks = v1:FindFirstChild("GetUnlocks")
if not GetUnlocks then
	GetUnlocks = Instance.new("RemoteFunction")
	GetUnlocks.Name = "GetUnlocks"
	GetUnlocks.Parent = v1
end

-- ===== Datenhaltung =====
type UnlockState = { [string]: boolean }
local PlayerUnlocks: { [number]: UnlockState } = {}

local function getState(userId: number): UnlockState
	PlayerUnlocks[userId] = PlayerUnlocks[userId] or {}
	return PlayerUnlocks[userId]
end

local function setUnlocked(userId: number, key: string, value: boolean)
	local state = getState(userId)
	state[key] = value
end

local function tableClone(t: UnlockState): UnlockState
	local out: UnlockState = {}
	for k,v in pairs(t) do out[k] = v end
	return out
end

-- ===== API (Server-seitig) =====
local function validateKey(key: any): (boolean, string?)
	if typeof(key) ~= "string" or #key == 0 or #key > 64 then
		return false, "bad_key"
	end
	return true, nil
end

local function validateBool(b: any): (boolean, string?)
	if typeof(b) ~= "boolean" then
		return false, "bad_value"
	end
	return true, nil
end

-- Clients können ihren aktuellen Stand abrufen
GetUnlocks.OnServerInvoke = function(player: Player)
	local ok, result = pcall(function()
		return tableClone(getState(player.UserId))
	end)
	if ok then return result end
	warn("[R6V_UnlocksManager] GetUnlocks pcall fail:", result)
	return {}
end

-- Serverseitige Setter-API (z. B. aus GameLogic/Rewards aufrufen)
local function SafeSet(player: Player, key: string, value: boolean)
	local ok1, err1 = validateKey(key)
	if not ok1 then return false, err1 end
	local ok2, err2 = validateBool(value)
	if not ok2 then return false, err2 end

	local ok, err = pcall(function()
		setUnlocked(player.UserId, key, value)
		UnlocksChanged:FireClient(player, key, value)
	end)
	if not ok then
		warn("[R6V_UnlocksManager] SafeSet pcall fail:", err)
		return false, "set_failed"
	end
	return true, nil
end

-- Beispiel-Hooks (optional): gewähre Basis-Unlocks beim Join
Players.PlayerAdded:Connect(function(plr)
	local state = getState(plr.UserId)
	-- Initial Defaults (nur wenn leer)
	if next(state) == nil then
		state["Loadout/Primary/Default"] = true
		state["Loadout/Secondary/Default"] = true
	end
	-- Client initial informieren
	task.defer(function()
		for k,v in pairs(state) do
			UnlocksChanged:FireClient(plr, k, v)
		end
	end)
end)

Players.PlayerRemoving:Connect(function(plr)
	PlayerUnlocks[plr.UserId] = nil
end)

-- ===== Exporte für andere ServerScripts =====
local Module = {}
function Module.Get(player: Player): UnlockState
	return tableClone(getState(player.UserId))
end
function Module.Set(player: Player, key: string, value: boolean): boolean
	local ok = SafeSet(player, key, value)
	return ok and true or false
end
function Module.Grant(player: Player, key: string): boolean
	return Module.Set(player, key, true)
end
function Module.Revoke(player: Player, key: string): boolean
	return Module.Set(player, key, false)
end

print("[R6V_UnlocksManager] ✅ bereit.")
return Module
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009aa</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX3a3cc2f2e94e4179b8bd7511babb7407">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_Boot</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{00ca9bb5-37ec-4ad5-869a-e6719de97d9d}</string>
					<ProtectedString name="Source"><![CDATA[print("RB7: Server boot ok")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009ab</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX3b78a86732384b118ce3c0989f632da8">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_EventsEnsure</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{4cdff05e-c7d6-4797-9c35-81f69c52ec9c}</string>
					<ProtectedString name="Source"><![CDATA[-- RB7_EventsEnsure: vereinheitlicht Remotes unter ReplicatedStorage/Shared/Events/v1
local RS = game:GetService("ReplicatedStorage")

local function ensureFolder(parent, name)
    local f = parent:FindFirstChild(name)
    if not f then
        f = Instance.new("Folder")
        f.Name = name
        f.Parent = parent
    end
    return f
end

local Shared  = ensureFolder(RS, "Shared")
local Events  = ensureFolder(Shared, "Events")
local V1      = ensureFolder(Events, "v1")

local function ensureRemoteEvent(parent, name)
    local ev = parent:FindFirstChild(name)
    if not ev then
        ev = Instance.new("RemoteEvent")
        ev.Name = name
        ev.Parent = parent
    end
    return ev
end

local function ensureRemoteFunction(parent, name)
    local rf = parent:FindFirstChild(name)
    if not rf then
        rf = Instance.new("RemoteFunction")
        rf.Name = name
        rf.Parent = parent
    end
    return rf
end

-- Kern-Remotes, die UI/Services erwarten
local neededEvents = {
    "OpenMenu",
    "RoundTimerTick",
    "ReloadEvent",
    "EquipWeapon",
    "ShootEvent",
}
for _,n in ipairs(neededEvents) do
    ensureRemoteEvent(V1, n)
end

-- Migration: falls noch altes 'ReplicatedStorage/Events/v1' existiert → Kinder nach Shared/Events/v1 verschieben
do
    local oldRoot = RS:FindFirstChild("Events")
    if oldRoot and oldRoot:FindFirstChild("v1") then
        local oldV1 = oldRoot.v1
        for _,child in ipairs(oldV1:GetChildren()) do
            if not V1:FindFirstChild(child.Name) then
                child.Parent = V1
            end
        end
        -- optional: alten Knoten bereinigen
        oldRoot:Destroy()
    end
end

print("[RB7_EventsEnsure] ✅ Remotes unter ReplicatedStorage/Shared/Events/v1 vereinheitlicht")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009ac</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXf38e6ebaa0b746878f1d06b2cddc2bf8">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_InputService</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{24eef0c3-5ff9-43f4-89a1-32babcd0c096}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Limits = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Limits"))
local InputsSchema = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("Inputs_v1"))
local RateLimiter = require(script.Parent:WaitForChild("Lib"):WaitForChild("RateLimiter"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRE(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end

local RS     = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

local RE_SetADS    = ensureRE(EV, Events.SET_ADS)
local RE_SetCrouch = ensureRE(EV, Events.SET_CROUCH)
local RE_Reload    = ensureRE(EV, Events.RELOAD)

local function allowed(uid:number, eventName:string): boolean
	local lim = Limits[eventName]
	if not lim then return true end
	return RateLimiter.check(uid, eventName, lim.cap, lim.rate)
end

RE_SetADS.OnServerEvent:Connect(function(player, payload)
	if not InputsSchema.IsSetADS(payload) then return end
	if not allowed(player.UserId, Events.SET_ADS) then return end
	-- (StateService setzt flags & broadcastet bereits)
end)

RE_SetCrouch.OnServerEvent:Connect(function(player, payload)
	if not InputsSchema.IsSetCrouch(payload) then return end
	if not allowed(player.UserId, Events.SET_CROUCH) then return end
end)

RE_Reload.OnServerEvent:Connect(function(player, payload)
	if not InputsSchema.IsReload(payload) then return end
	if not allowed(player.UserId, Events.RELOAD) then return end
end)

print("[RB7_InputService] ✅ mit Rate-Limiter aktiv")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009ad</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX0482526dd1454277b0d0250e7a9d23b6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_ProfileService</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{589fbbe7-7b39-4a17-947f-e91055440158}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local ProfileTypes = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("PlayerProfile"))
-- Stores liegt unter ServerScriptService/Server/Stores → vom Skript aus: script.Parent:WaitForChild("Stores")
local ProfileStore = require(script.Parent:WaitForChild("Stores"):WaitForChild("ProfileStore"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRemoteEvent(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end
local function ensureRemoteFunction(parent: Instance, name: string): RemoteFunction
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteFunction"); r.Name = name; r.Parent = parent end
	return r :: RemoteFunction
end

-- Events-Struktur
local RS = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

local RF_GetProfile = ensureRemoteFunction(EV, Events.GET_PROFILE)
local RE_ProfileUpdated = ensureRemoteEvent(EV, Events.PROFILE_UPDATED)

RF_GetProfile.OnServerInvoke = function(player)
	local prof = ProfileStore.get(player.UserId, player.Name)
	return prof
end

Players.PlayerAdded:Connect(function(plr)
	local prof = ProfileStore.get(plr.UserId, plr.Name)
	RE_ProfileUpdated:FireClient(plr, prof)
end)

print("[RB7_ProfileService] ✅ Profile RF/RE aktiv")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009ae</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX332439782834488b9e7387ba4f6b3a53">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_RoundController</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{3b37c82c-d620-42e1-9b51-92628a56c6ac}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- RB7_RoundController: Minimaler Rundenloop mit Timer (verwendet Game-Config)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local EventsConst = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local GameConfig = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("Game"))
local Schema     = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("Events_v1"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRemoteEvent(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end

local RSShared = ensureFolder(ReplicatedStorage, "Shared")
local ERoot    = ensureFolder(RSShared, EventsConst.ROOT)
local EV       = ensureFolder(ERoot, EventsConst.VERSION)

local E_RoundStart = ensureRemoteEvent(EV, EventsConst.ROUND_START)
local E_RoundEnded = ensureRemoteEvent(EV, EventsConst.ROUND_ENDED)
local E_TimerTick  = ensureRemoteEvent(EV, EventsConst.TIMER_TICK)

local roundActive = false
local roundEndsAt = 0

local function broadcastTick(remain: number)
	local payload = { t = remain }
	if Schema.IsTimerTick(payload) then
		E_TimerTick:FireAllClients(payload)
	end
end

local function endRound()
	if not roundActive then return end
	roundActive = false
	E_RoundEnded:FireAllClients({ reason = "timeup" })
	print("[RB7_RoundController] ⏹ Runde ENDE (reason=timeup)")
end

local function startRound(duration: number?)
	if roundActive then endRound() end
	local dur = typeof(duration) == "number" and duration or GameConfig.ROUND_TIME_DEFAULT
	roundActive = true
	roundEndsAt = os.time() + dur
	E_RoundStart:FireAllClients({ duration = dur, endsAt = roundEndsAt })
	print(("[RB7_RoundController] ▶ Runde START (dauer=%ds)"):format(dur))
	task.spawn(function()
		while roundActive do
			local remain = math.max(0, roundEndsAt - os.time())
			broadcastTick(remain)
			if remain <= 0 then endRound() break end
			task.wait(1)
		end
	end)
end

local firstPlayerJoined = false
game:GetService("Players").PlayerAdded:Connect(function(_)
	if not firstPlayerJoined then
		firstPlayerJoined = true
		task.delay(2, function() startRound(GameConfig.ROUND_TIME_DEFAULT) end)
	end
end)
if #Players:GetPlayers() > 0 then
	task.delay(1, function() startRound(GameConfig.ROUND_TIME_DEFAULT) end)
end

print("[RB7_RoundController] ✅ bereit (Config-gestützt)")
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009af</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXae758fa6fbba4090ad44b1468afd98c2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RB7_ServerMain</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{bfbd2160-1b3a-4cc7-8860-e4b52d1031d6}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- RB7_ServerMain: Stellt Remotes bereit und validiert eingehende Payloads
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players           = game:GetService("Players")

local Build  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Meta"):WaitForChild("Build"))
local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Schema = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("Events_v1"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRemoteEvent(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end

-- Pfad: ReplicatedStorage/Shared/Events/v1
local Shared = ensureFolder(ReplicatedStorage, "Shared")
local EventsRoot = ensureFolder(Shared, Events.ROOT)
local V = ensureFolder(EventsRoot, Events.VERSION)

local Ping = ensureRemoteEvent(V, Events.PING)

Ping.OnServerEvent:Connect(function(player: Player, payload)
	if not Schema.IsPing(payload) then
		warn(string.format("[RB7][Ping][SchemaError] Spieler=%s payload invalid", player.Name))
		return
	end
	print(string.format("[RB7][Ping] from %s ok", player.Name))
end)

print(("[RB7_ServerMain] ✅ Remotes bereit unter ReplicatedStorage/Shared/Events/%s • Build %s (Schema=%s)")
	:format(Events.VERSION, Build.Version, Build.SchemaName))
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b0</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX3ffec517c72345a6b25ca47d7fd0a1c0">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Services</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b1</UniqueId>
				</Properties>
				<Item class="Script" referent="RBXf10dad24f8b64f6e9eb50fb4c2c4d91c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">AdminService</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{b96bab17-4a34-41ec-8bb6-d1cde1e32e39}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Env    = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("Env"))
local Build  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Meta"):WaitForChild("Build"))
local Admins = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Config"):WaitForChild("Admins"))

local START = os.clock()

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRF(parent: Instance, name: string): RemoteFunction
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteFunction"); r.Name = name; r.Parent = parent end
	return r :: RemoteFunction
end

local RS     = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

local RF_GetServerStats = ensureRF(EV, Events.GET_SERVER_STATS)

local lastCall:{[number]:number} = {}

local function makeStats()
	local players = #Players:GetPlayers()
	local uptime  = math.floor(os.clock() - START)
	return {
		env     = Env.NAME,
		build   = Build.Version,
		players = players,
		uptime  = uptime,
	}
end

RF_GetServerStats.OnServerInvoke = function(player)
	if not Admins.isAdmin(player.UserId, player.Name) then
		return { ok=false, error="forbidden" }
	end
	local now = os.clock()
	local prev = lastCall[player.UserId] or 0
	if now - prev < 3 then
		return { ok=false, error="rate_limited" }
	end
	lastCall[player.UserId] = now
	return { ok=true, data=makeStats() }
end

print("[RB7_AdminService] ✅ GetServerStats aktiv (RBAC + RateLimit)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b2</UniqueId>
					</Properties>
				</Item>
				<Item class="Script" referent="RBXfda99790891f4708b69f206069f6d617">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">StateService</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{5622d962-161d-4b70-98fb-b45c1d940d25}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Events  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local STypes  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("State"):WaitForChild("PlayerState"))
local StateSchema = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("State_v1"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRE(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end
local function ensureRF(parent: Instance, name: string): RemoteFunction
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteFunction"); r.Name = name; r.Parent = parent end
	return r :: RemoteFunction
end

-- Events-Struktur
local RS = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

-- Eingangs-Events (vom Client)
local RE_SetADS    = ensureRE(EV, Events.SET_ADS)
local RE_SetCrouch = ensureRE(EV, Events.SET_CROUCH)
local RE_Reload    = ensureRE(EV, Events.RELOAD)

-- State-Schnittstellen (Server -> Client, Client -> Server)
local RE_StateChanged = ensureRE(EV, Events.STATE_CHANGED)
local RF_GetState     = ensureRF(EV, Events.GET_STATE)

-- interner Cache
local cache: {[number]: any} = {}

local function getOrCreate(uid:number)
	local st = cache[uid]
	if not st then
		st = STypes.default(uid)
		cache[uid] = st
	end
	return st
end

local function syncToClient(uid:number)
	local st = cache[uid]; if not st then return end
	local payload = { userId = uid, state = st }
	if StateSchema.IsStatePayload(payload) then
		RE_StateChanged:FireAllClients(payload)
	end
end

-- RemoteFunction: Client fragt aktuellen eigenen Zustand ab
RF_GetState.OnServerInvoke = function(player)
	return getOrCreate(player.UserId)
end

-- Input-Events: Zustand setzen + syncen
RE_SetADS.OnServerEvent:Connect(function(player, payload)
	if type(payload)=="table" and type(payload.on)=="boolean" then
		local st = getOrCreate(player.UserId)
		st.ads = payload.on
		st.updatedAt = os.time()
		syncToClient(player.UserId)
	end
end)

RE_SetCrouch.OnServerEvent:Connect(function(player, payload)
	if type(payload)=="table" and type(payload.on)=="boolean" then
		local st = getOrCreate(player.UserId)
		st.crouch = payload.on
		st.updatedAt = os.time()
		syncToClient(player.UserId)
	end
end)

RE_Reload.OnServerEvent:Connect(function(player, _)
	-- Platzhalter: Hier später Munition prüfen/setzen
	local st = getOrCreate(player.UserId)
	st.updatedAt = os.time()
	syncToClient(player.UserId)
end)

-- Lifecycle
Players.PlayerAdded:Connect(function(plr)
	getOrCreate(plr.UserId)
	syncToClient(plr.UserId)
end)
Players.PlayerRemoving:Connect(function(plr)
	cache[plr.UserId] = nil
end)

print("[RB7_StateService] ✅ PlayerState aktiv (ADS/Crouch/Reload Hooks)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b3</UniqueId>
					</Properties>
				</Item>
				<Item class="Script" referent="RBXebb04e1525514ad28a7d7cef76bfe4a4">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Telemetry</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{59508845-774e-46c2-8e49-dd49c9ba20b9}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Logger = require(script.Parent.Parent:WaitForChild("Lib"):WaitForChild("Logger"))
local Events = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local RS = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

-- Wir hängen uns nur LESEND an RemoteEvents (keine Logikänderung)
local EVENT_NAMES = {
	Events.SET_ADS,
	Events.SET_CROUCH,
	Events.RELOAD,
	Events.EQUIP_WEAPON,
	Events.SHOOT,
}

local counters : {[string]: number} = {}
local perUser  : {[number]: {[string]: number}} = {}

local function inc(name:string, uid:number)
	counters[name] = (counters[name] or 0) + 1
	local u = perUser[uid]; if not u then u = {}; perUser[uid] = u end
	u[name] = (u[name] or 0) + 1
end

local function tryConnect(evName:string)
	local ok, inst = pcall(function() return EV:WaitForChild(evName, 1) end)
	if ok and inst and inst:IsA("RemoteEvent") then
		(inst :: RemoteEvent).OnServerEvent:Connect(function(player: Player, _payload)
			inc(evName, player.UserId)
		end)
		Logger.info("Telemetry hooked:", evName)
	else
		Logger.warn("Telemetry miss: RemoteEvent nicht gefunden:", tostring(evName))
	end
end

for _,n in ipairs(EVENT_NAMES) do
	if typeof(n)=="string" then tryConnect(n) end
end

-- alle 60s kurze Zusammenfassung (nur dev)
task.spawn(function()
	while true do
		task.wait(60)
		Logger.info("Telemetry snapshot:", counters)
	end
end)

print("[RB7_Telemetry] ✅ aktiv (RemoteEvent-Counter, read-only)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b4</UniqueId>
					</Properties>
				</Item>
				<Item class="Script" referent="RBXd26851e259424ec1ab391e7fa0dbf16d">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Disabled">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">WeaponsService</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{6f4b3c77-a2c8-453d-adcb-c76acd2028b5}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Events   = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Events"))
local Limits   = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Constants"):WaitForChild("Limits"))
local WConfig  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Weapons"):WaitForChild("Config"))
local WSchema  = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("RemoteSchema"):WaitForChild("Weapons_v1"))
local RateLimiter = require(script.Parent.Parent:WaitForChild("Lib"):WaitForChild("RateLimiter"))
local LoadoutStore = require(script.Parent.Parent:WaitForChild("Stores"):WaitForChild("LoadoutStore"))

local function ensureFolder(parent: Instance, name: string): Folder
	local f = parent:FindFirstChild(name)
	if not f then f = Instance.new("Folder"); f.Name = name; f.Parent = parent end
	return f :: Folder
end
local function ensureRE(parent: Instance, name: string): RemoteEvent
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteEvent"); r.Name = name; r.Parent = parent end
	return r :: RemoteEvent
end
local function ensureRF(parent: Instance, name: string): RemoteFunction
	local r = parent:FindFirstChild(name)
	if not r then r = Instance.new("RemoteFunction"); r.Name = name; r.Parent = parent end
	return r :: RemoteFunction
end

local RS     = ReplicatedStorage
local Shared = ensureFolder(RS, "Shared")
local ERoot  = ensureFolder(Shared, Events.ROOT)
local EV     = ensureFolder(ERoot, Events.VERSION)

local RE_Equip      = ensureRE(EV, Events.EQUIP_WEAPON)
local RE_Shoot      = ensureRE(EV, Events.SHOOT)
local RE_Reload     = ensureRE(EV, Events.RELOAD)
local RE_AmmoUp     = ensureRE(EV, Events.AMMO_UPDATE)
local RF_GetLoadout = ensureRF(EV, Events.GET_LOADOUT)

type AmmoState = { [string]: { mag:number, reserve:number } }
local ammoCache: {[number]: AmmoState} = {}
local equipped:  {[number]: string}    = {}

local function cloneAmmoState(src: AmmoState): AmmoState
	local t: AmmoState = {}
	for k,v in pairs(src) do t[k] = { mag = v.mag, reserve = v.reserve } end
	return t
end

local function initDefaults(): AmmoState
	local a:AmmoState = {}
	for name,cfg in pairs(WConfig.Weapons) do
		a[name] = { mag = cfg.magSize, reserve = cfg.reserve }
	end
	return a
end

local function initPlayer(uid:number)
	if ammoCache[uid] then return end
	local saved = require(script.Parent.Parent:WaitForChild("Stores"):WaitForChild("LoadoutStore")).get(uid)
	if typeof(saved)=="table" then
		ammoCache[uid] = {}
		local defaults = initDefaults()
		for name,cfg in pairs(WConfig.Weapons) do
			local s = (saved.ammo and saved.ammo[name]) or defaults[name]
			ammoCache[uid][name] = { mag = s.mag, reserve = s.reserve }
		end
		equipped[uid] = saved.equipped or WConfig.DefaultLoadout.Primary
	else
		ammoCache[uid] = initDefaults()
		equipped[uid] = WConfig.DefaultLoadout.Primary
	end
end

local function persist(uid:number)
	local data = { equipped = equipped[uid], ammo = ammoCache[uid] and cloneAmmoState(ammoCache[uid]) or nil }
	LoadoutStore.set(uid, data)
end

local function sendAmmo(player: Player, name:string)
	local a = ammoCache[player.UserId]
	if not a or not a[name] then return end
	local payload = { name=name, mag=a[name].mag, reserve=a[name].reserve }
	if WSchema.IsAmmoUpdate(payload) then RE_AmmoUp:FireClient(player, payload) end
end

local function allowed(uid:number, eventName:string): boolean
	local lim = Limits[eventName]
	if not lim then return true end
	return RateLimiter.check(uid, eventName, lim.cap, lim.rate)
end

RF_GetLoadout.OnServerInvoke = function(player)
	initPlayer(player.UserId)
	return { Primary = WConfig.DefaultLoadout.Primary, Secondary = WConfig.DefaultLoadout.Secondary, Equipped = equipped[player.UserId] }
end

RE_Equip.OnServerEvent:Connect(function(player, payload)
	if not WSchema.IsEquip(payload) then return end
	if not allowed(player.UserId, Events.EQUIP_WEAPON) then return end
	initPlayer(player.UserId)
	local name = payload.name
	if WConfig.Weapons[name] then
		equipped[player.UserId] = name
		sendAmmo(player, name)
		persist(player.UserId)
	end
end)

RE_Shoot.OnServerEvent:Connect(function(player, payload)
	if not WSchema.IsShoot(payload) then return end
	if not allowed(player.UserId, Events.SHOOT) then return end
	initPlayer(player.UserId)
	local name = payload.name
	local a = ammoCache[player.UserId]; if not a or not a[name] then return end
	if a[name].mag > 0 then
		a[name].mag -= 1
		sendAmmo(player, name)
		persist(player.UserId)
	end
end)

RE_Reload.OnServerEvent:Connect(function(player, _)
	if not allowed(player.UserId, Events.RELOAD) then return end
	initPlayer(player.UserId)
	local curr = equipped[player.UserId]; if not curr then return end
	local cfg = WConfig.Weapons[curr]; if not cfg then return end
	local a = ammoCache[player.UserId][curr]; if not a then return end
	local needed = cfg.magSize - a.mag
	if needed > 0 and a.reserve > 0 then
		local take = math.min(needed, a.reserve)
		a.mag += take
		a.reserve -= take
		sendAmmo(player, curr)
		persist(player.UserId)
	end
end)

Players.PlayerAdded:Connect(function(plr)
	initPlayer(plr.UserId)
	task.defer(function() sendAmmo(plr, equipped[plr.UserId]) end)
end)
Players.PlayerRemoving:Connect(function(plr)
	if ammoCache[plr.UserId] or equipped[plr.UserId] then persist(plr.UserId) end
	ammoCache[plr.UserId] = nil; equipped[plr.UserId] = nil
end)

print("[RB7_WeaponsService] ✅ aktiv (mit Rate-Limiter)")
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b5</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXbb6776586f2d47099f6458bd088ec6c2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Stores</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b6</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX2d5fbecbce31415e96fe87249581cbe8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DataStoreAdapter</string>
						<string name="ScriptGuid">{8338033e-a58b-4207-b3ac-3ab9e3a0c091}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local RunService = game:GetService("RunService")
local DataStoreService = game:GetService("DataStoreService")
local inStudio = RunService:IsStudio()
local Store = {}
local mem:any = {}

function Store.getStore(name:string)
	if inStudio then
		mem[name] = mem[name] or {}
		local ns = mem[name]
		return {
			GetAsync = function(_, key:string) return ns[key] end,
			SetAsync = function(_, key:string, value:any) ns[key]=value return true end,
		}
	else
		local ds = DataStoreService:GetDataStore(name)
		return {
			GetAsync = function(_, key:string) return ds:GetAsync(key) end,
			SetAsync = function(_, key:string, value:any) return ds:SetAsync(key, value) end,
		}
	end
end

return Store
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b7</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXe3e59390ba264d33a2c19566ec9c6568">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">LoadoutStore</string>
						<string name="ScriptGuid">{c5d8389a-67d5-4c7f-8dcd-edb8f5f95ef6}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local DataStoreService = game:GetService("DataStoreService")
local RunService = game:GetService("RunService")
local inStudio = RunService:IsStudio()

local Adapter = require(script.Parent:WaitForChild("DataStoreAdapter"))

export type SaveData = {
	equipped: string?,
	ammo: { [string]: { mag:number, reserve:number } }?,
}

local Store = {}
local ds = Adapter.getStore("RB7_LoadoutAmmo")

function Store.get(userId:number): SaveData?
	local key = tostring(userId)
	local ok, result = pcall(function() return ds:GetAsync(key) end)
	if ok then return result else warn("[LoadoutStore:Get] "..tostring(result)); return nil end
end

function Store.set(userId:number, data:SaveData)
	local key = tostring(userId)
	local ok, err = pcall(function() return ds:SetAsync(key, data) end)
	if not ok then warn("[LoadoutStore:Set] "..tostring(err)) end
end

return Store
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b8</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX521cad33cf6c4a49bcfa854b58e906fc">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ProfileStore</string>
						<string name="ScriptGuid">{7b75c9be-bf8c-491f-970a-4ed1af06d285}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local DataStore = require(script.Parent:WaitForChild("DataStoreAdapter"))
local ProfileTypes = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("RB7"):WaitForChild("Types"):WaitForChild("PlayerProfile"))

local store = DataStore.getStore("RB7_PlayerProfiles")
local cache:{[number]:ProfileTypes.Profile} = {}

local ProfileStore = {}

function ProfileStore.get(userId:number, name:string?): ProfileTypes.Profile
	local p = cache[userId]
	if p then return p end
	local key = tostring(userId)
	local data = store:GetAsync(key)
	if typeof(data)=="table" and data.userId == userId then
		cache[userId]=data; return data
	end
	local fresh = ProfileTypes.default(userId, name or ("User"..userId))
	cache[userId]=fresh
	store:SetAsync(key, fresh)
	return fresh
end

function ProfileStore.save(userId:number)
	local p = cache[userId]; if not p then return end
	p.updatedAt = os.time()
	store:SetAsync(tostring(userId), p)
end

function ProfileStore.addXp(userId:number, amount:number)
	local p = ProfileStore.get(userId)
	p.xp = math.max(0, (p.xp or 0) + amount)
	ProfileStore.save(userId)
	return p
end

Players.PlayerRemoving:Connect(function(plr)
	ProfileStore.save(plr.UserId)
end)

return ProfileStore
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009b9</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="ServerStorage" referent="RBXdd9d3be0b26a44d0802d0833c1c4851f">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000376</UniqueId>
		</Properties>
		<Item class="ModuleScript" referent="RBX84c05d4253424da898a44e9490aed2d4">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">README</string>
				<string name="ScriptGuid">{108cd0ca-654f-483c-8f7b-c3d044ccc436}</string>
				<ProtectedString name="Source"><![CDATA[-- sec
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7f7ec7bb987e496708b876d3000007ee</UniqueId>
			</Properties>
		</Item>
		<Item class="StringValue" referent="RBX9afe25728dee4a319b01611a40445e75">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">KEEP</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7f7ec7bb987e496708b876d300000868</UniqueId>
				<string name="Value"><![CDATA[KEEP SEC
]]></string>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX4a4a67563259402dba5f9a3da6459611">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Storage</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000084e</UniqueId>
			</Properties>
			<Item class="StringValue" referent="RBX3c8103a3fabb461c8d948424f55eaff8">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">KEEP</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000084f</UniqueId>
					<string name="Value"><![CDATA[KEEP storage
]]></string>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBXe4d021956d0946b5b9e662d3a9c63f31">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">storage</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009d8</UniqueId>
				</Properties>
				<Item class="StringValue" referent="RBX5ce87703db9b4ba29eb11daf1c135e35">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">KEEP</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009d9</UniqueId>
						<string name="Value"><![CDATA[KEEP storage
]]></string>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBXba05d6ebdade4e4bae09af3241387bef">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">RB7_Private</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000850</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX290709429f0f4a95afb8bf01530d6a83">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Sec</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000851</UniqueId>
				</Properties>
				<Item class="StringValue" referent="RBXd8461db45e68480abe23076ad66e4028">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">KEEP</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000852</UniqueId>
						<string name="Value"><![CDATA[KEEP SEC
]]></string>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX2637fe16da9a4f37a0aec0b7430291ae">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">README</string>
						<string name="ScriptGuid">{007d8f72-4102-4179-8447-6dc299c98343}</string>
						<ProtectedString name="Source"><![CDATA[-- sec
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">09618a79faec3cc608b8863a00000853</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX37e588eb6640444aa685deb06848fb3d">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">legacy</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">428391ff8d622ca408b89b05000007fd</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX5599ce092f224829a0bdd4deb74ac117">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">sec</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009ce</UniqueId>
					</Properties>
					<Item class="StringValue" referent="RBX8b1676a9c57a4f9aa9df42f01cf432f1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">KEEP</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009cf</UniqueId>
							<string name="Value"><![CDATA[KEEP SEC
]]></string>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXc60bd9e7c7b242b2ba60caee0024c120">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">README</string>
							<string name="ScriptGuid">{32a3638b-cc36-4e62-95af-1722bbba8918}</string>
							<ProtectedString name="Source"><![CDATA[-- sec
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3ad1f6bdd057363808b8a9c5000009d0</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="ServiceVisibilityService" referent="RBX7b4ec48c2b1b4ec1a85bdae48bc80a0f">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<BinaryString name="HiddenServices">AAAAAA==</BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServiceVisibilityService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000386</UniqueId>
			<BinaryString name="VisibleServices">AAAAAA==</BinaryString>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBX72b3f63027f74575baffedc240a79583">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc60000038e</UniqueId>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBXc1a315b1e9384d5abdcba9d785b37156">
		<Properties>
			<Color3 name="Ambient">
				<R>0.5</R>
				<G>0.5</G>
				<B>0.5</B>
			</Color3>
			<BinaryString name="AttributesSerialize"><![CDATA[AgAAACYAAABSQlhfTGlnaHRpbmdUZWNobm9sb2d5VW5pZmllZE1pZ3JhdGlvbgMBIAAAAFJC
WF9PcmlnaW5hbFRlY2hub2xvZ3lPbkZpbGVMb2FkBAEAAAA=]]></BinaryString>
			<float name="Brightness">1</float>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<bool name="DefinesCapabilities">false</bool>
			<float name="EnvironmentDiffuseScale">0</float>
			<float name="EnvironmentSpecularScale">0</float>
			<float name="ExposureCompensation">0</float>
			<token name="ExtendLightRangeTo120">0</token>
			<Color3 name="FogColor">
				<R>0.75</R>
				<G>0.75</G>
				<B>0.75</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="LightingStyle">1</token>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.5</R>
				<G>0.5</G>
				<B>0.5</B>
			</Color3>
			<bool name="Outlines">true</bool>
			<bool name="PrioritizeLightingQuality">false</bool>
			<float name="ShadowSoftness">0.5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">1</token>
			<string name="TimeOfDay">14:00:00</string>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000439</UniqueId>
		</Properties>
	</Item>
	<Item class="LodDataService" referent="RBXfc7c52c58412433b8fe2dc05b7be0767">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LodDataService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000471</UniqueId>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBX572f3acd1db14b8aa30eab4864f1e4f2">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="Enabled">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxIndicatorsVisible">16</int>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">09618a79faec3cc608b8863a0000051e</UniqueId>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBX0c1caa7267614c7fa375881ff4fdc2c4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<bool name="ThrottlePhysicsToRealtime">true</bool>
			<double name="Timeout">10</double>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000420</UniqueId>
		</Properties>
	</Item>
	<Item class="UGCAvatarService" referent="RBXcbec87a9e0af4e129bdbaf3b940f4aa9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">UGCAvatarService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000423</UniqueId>
		</Properties>
	</Item>
	<Item class="VideoService" referent="RBXf1db731e54014f63b148f560613bae99">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VideoService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">34c22ac50b6ab91508b7fbc600000470</UniqueId>
		</Properties>
	</Item>
	<Item class="Script" referent="RBX3a610593a0224108b9faeaeec56a5f05">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="Disabled">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<Content name="LinkedSource"><null></null></Content>
			<string name="Name">ServerScriptService</string>
			<token name="RunContext">0</token>
			<string name="ScriptGuid">{9673f990-ebaa-4dec-aa20-84a775bf2743}</string>
			<ProtectedString name="Source"><![CDATA[-- server
]]></ProtectedString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">7f7ec7bb987e496708b876d3000007f2</UniqueId>
		</Properties>
		<Item class="Script" referent="RBXf1224c3de4ed45dca3074010aa4ea4f3">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Init</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{9d1ad998-60cc-4e7c-b59e-d29ee6fa5372}</string>
				<ProtectedString name="Source"><![CDATA[-- server
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7f7ec7bb987e496708b876d3000007f3</UniqueId>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX34e6aeee8dad4fe29dfb753af9a9306a">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">RB7_Boot</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{f3e599fa-b658-4ce5-b9a8-f4d332239a59}</string>
				<ProtectedString name="Source"><![CDATA[print("RB7: Server boot ok")
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7f7ec7bb987e496708b876d30000085d</UniqueId>
			</Properties>
		</Item>
		<Item class="StringValue" referent="RBX4240dc35c3ca4827b6c1d63f583fa2aa">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">KEEP</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7f7ec7bb987e496708b876d300000864</UniqueId>
				<string name="Value"><![CDATA[KEEP SERVER
]]></string>
			</Properties>
		</Item>
	</Item>
	<SharedStrings>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>